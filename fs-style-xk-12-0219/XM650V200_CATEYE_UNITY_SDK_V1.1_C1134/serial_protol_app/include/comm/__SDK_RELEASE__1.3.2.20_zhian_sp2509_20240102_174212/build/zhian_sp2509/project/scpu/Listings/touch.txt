; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\touch.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\touch.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\config -I..\..\..\..\board -I..\..\..\..\common\include -I..\..\..\..\scpu\device\include\CMSIS -I..\..\..\..\scpu\device\include\Kneron -I..\..\..\..\scpu\framework\include -I..\..\..\..\scpu\framework\include\framework -I..\..\..\..\scpu\drivers\include -I..\..\..\..\scpu\drivers\include\media\touch -I..\..\..\..\scpu\drivers\include\media\flash -I..\..\..\..\scpu\lib\kdp_system\inc -I..\..\..\..\scpu\lib\kdp_application\include\ -I..\..\..\..\scpu\lib\kdp_application\base\ -I..\..\..\..\scpu\lib\kdp_application\misc -I..\..\..\..\scpu\lib\kdp_e2e_r1n1\include -I..\..\..\..\scpu\include -I..\..\..\..\scpu\middleware\ota -I..\..\..\..\scpu\middleware\comm -I..\..\..\..\scpu\middleware\kdp_comm -I..\..\..\..\scpu\share -I..\..\..\..\scpu\share\gui_lib -I..\..\user -I.\RTE\CMSIS -I.\RTE\_Target-scpu -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\RTX\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\Device\ARM\ARMCM4\Include -D__RTX -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DARMCM4_FP -D_RTE_ -DARM_MATH_CM4 -DTARGET_SCPU -DLOG_ENABLE -DKL520 -DHEAD_POSE_CHECK_PERCENT --omf_browse=.\objects\touch.crf ..\..\..\..\scpu\drivers\media\touch\touch.c]
                          THUMB

                          AREA ||i.kl520_api_mouse_info_get||, CODE, READONLY, ALIGN=2

                  kl520_api_mouse_info_get PROC
;;;21     
;;;22     int kl520_api_mouse_info_get(kl520_mouse_info * info)
000000  4904              LDR      r1,|L1.20|
;;;23     {
;;;24         info->x = kdp520_mouse_info.x;
000002  884a              LDRH     r2,[r1,#2]  ; kdp520_mouse_info
000004  8042              STRH     r2,[r0,#2]
;;;25         info->y = kdp520_mouse_info.y;
000006  888a              LDRH     r2,[r1,#4]  ; kdp520_mouse_info
000008  8082              STRH     r2,[r0,#4]
;;;26         info->state = kdp520_mouse_info.state;
00000a  7809              LDRB     r1,[r1,#0]  ; kdp520_mouse_info
00000c  7001              STRB     r1,[r0,#0]
;;;27         return 0;
00000e  2000              MOVS     r0,#0
;;;28     }
000010  4770              BX       lr
;;;29     
                          ENDP

000012  0000              DCW      0x0000
                  |L1.20|
                          DCD      kdp520_mouse_info

                          AREA ||i.kl520_api_touch_get_device_id||, CODE, READONLY, ALIGN=1

                  kl520_api_touch_get_device_id PROC
;;;124    
;;;125    u16 kl520_api_touch_get_device_id(void)
000000  f64f70ff          MOV      r0,#0xffff
;;;126    {
;;;127    	u16 nDeviceId;
;;;128    
;;;129    #if ( CFG_TOUCH_ENABLE == YES )
;;;130    	if ( m_touch_driver == NULL )
;;;131    	{
;;;132    		kl520_api_touch_open();
;;;133    		nDeviceId = m_touch_driver->device_id;
;;;134    		kl520_api_touch_stop();
;;;135    	}
;;;136    	else
;;;137    	{
;;;138    		nDeviceId = m_touch_driver->device_id;
;;;139    	}
;;;140    #else
;;;141    	nDeviceId = 0xFFFF;
;;;142    #endif
;;;143    
;;;144    	return nDeviceId;
;;;145    }
000004  4770              BX       lr
;;;146    
                          ENDP


                          AREA ||i.kl520_api_touch_is_started||, CODE, READONLY, ALIGN=2

                  kl520_api_touch_is_started PROC
;;;102    
;;;103    BOOL kl520_api_touch_is_started(void) 
000000  4803              LDR      r0,|L3.16|
;;;104    {
000002  6881              LDR      r1,[r0,#8]  ; m_touch_driver
000004  b111              CBZ      r1,|L3.12|
;;;105        return ((m_touch_driver) ? (m_touch_driver->is_started(m_touch_driver->core_dev)) : (FALSE));
000006  6888              LDR      r0,[r1,#8]
000008  6dc9              LDR      r1,[r1,#0x5c]
00000a  4708              BX       r1
                  |L3.12|
00000c  2000              MOVS     r0,#0
;;;106    }
00000e  4770              BX       lr
;;;107    
                          ENDP

                  |L3.16|
                          DCD      ||.data||

                          AREA ||i.kl520_api_touch_open||, CODE, READONLY, ALIGN=2

                  kl520_api_touch_open PROC
;;;61     
;;;62     int kl520_api_touch_open(void)
000000  b570              PUSH     {r4-r6,lr}
;;;63     {
;;;64         int ret = -1;
;;;65     
;;;66         if (NULL == m_touch_driver) {
000002  4c11              LDR      r4,|L4.72|
000004  f04f35ff          MOV      r5,#0xffffffff        ;64
000008  68a0              LDR      r0,[r4,#8]            ;63  ; m_touch_driver
00000a  b970              CBNZ     r0,|L4.42|
00000c  480f              LDR      r0,|L4.76|
00000e  60a0              STR      r0,[r4,#8]            ;63  ; m_touch_driver
000010  490f              LDR      r1,|L4.80|
000012  6882              LDR      r2,[r0,#8]            ;63
000014  6cc3              LDR      r3,[r0,#0x4c]         ;63
000016  4610              MOV      r0,r2                 ;63
000018  4798              BLX      r3                    ;63
00001a  68a1              LDR      r1,[r4,#8]            ;63  ; m_touch_driver
00001c  6e0b              LDR      r3,[r1,#0x60]         ;63
00001e  6888              LDR      r0,[r1,#8]            ;63
000020  e9d41200          LDRD     r1,r2,[r4,#0]         ;63
000024  4798              BLX      r3                    ;63
000026  68a0              LDR      r0,[r4,#8]            ;63  ; m_touch_driver
000028  b120              CBZ      r0,|L4.52|
                  |L4.42|
;;;67             _board_assign_touch_device();
;;;68             _board_connect_touch_panel();
;;;69         }
;;;70         if (m_touch_driver) {
;;;71             //ret = m_touch_driver->probe(m_touch_driver->core_dev);
;;;72             if (0 == m_touch_driver->init(m_touch_driver->core_dev)) {
00002a  4601              MOV      r1,r0
00002c  6880              LDR      r0,[r0,#8]
00002e  6d09              LDR      r1,[r1,#0x50]
000030  4788              BLX      r1
000032  b130              CBZ      r0,|L4.66|
                  |L4.52|
;;;73                 //TODO : exception handler
;;;74                 ret = 0;
;;;75             }
;;;76             else 
;;;77                 ret = -1;
;;;78         }
;;;79         if(ret != 0)
;;;80             dbg_msg_err("[%s] error", __func__);
000034  4a07              LDR      r2,|L4.84|
000036  a108              ADR      r1,|L4.88|
000038  2002              MOVS     r0,#2
00003a  f7fffffe          BL       kdp_level_printf
                  |L4.62|
;;;81         return ret;
00003e  4628              MOV      r0,r5
;;;82     }
000040  bd70              POP      {r4-r6,pc}
                  |L4.66|
000042  2500              MOVS     r5,#0                 ;74
000044  e7fb              B        |L4.62|
;;;83     
                          ENDP

000046  0000              DCW      0x0000
                  |L4.72|
                          DCD      ||.data||
                  |L4.76|
                          DCD      kdp520_touch_driver
                  |L4.80|
                          DCD      ct130_driver
                  |L4.84|
                          DCD      ||.constdata||
                  |L4.88|
000058  5b25735d          DCB      "[%s] error\r\n",0
00005c  20657272
000060  6f720d0a
000064  00      
000065  00                DCB      0
000066  00                DCB      0
000067  00                DCB      0

                          AREA ||i.kl520_api_touch_register_hook||, CODE, READONLY, ALIGN=2

                  kl520_api_touch_register_hook PROC
;;;55     
;;;56     void kl520_api_touch_register_hook(fn_power_hook fn_power_on, fn_power_hook fn_power_off)
000000  4a01              LDR      r2,|L5.8|
;;;57     {
;;;58         m_cb_touch_power_on = fn_power_on;
000002  e9c20100          STRD     r0,r1,[r2,#0]
;;;59         m_cb_touch_power_off = fn_power_off;
;;;60     }
000006  4770              BX       lr
;;;61     
                          ENDP

                  |L5.8|
                          DCD      ||.data||

                          AREA ||i.kl520_api_touch_set_x_axis_inverse||, CODE, READONLY, ALIGN=2

                  kl520_api_touch_set_x_axis_inverse PROC
;;;115    }
;;;116    void kl520_api_touch_set_x_axis_inverse(int on_off) {
000000  4903              LDR      r1,|L6.16|
;;;117        if (m_touch_driver)
000002  6889              LDR      r1,[r1,#8]  ; m_touch_driver
000004  2900              CMP      r1,#0                 ;116
000006  d001              BEQ      |L6.12|
;;;118            m_touch_driver->inverse_x_axis = on_off;
000008  f8810092          STRB     r0,[r1,#0x92]
                  |L6.12|
;;;119    }
00000c  4770              BX       lr
;;;120    void kl520_api_touch_set_y_axis_inverse(int on_off) {
                          ENDP

00000e  0000              DCW      0x0000
                  |L6.16|
                          DCD      ||.data||

                          AREA ||i.kl520_api_touch_set_x_range_max||, CODE, READONLY, ALIGN=2

                  kl520_api_touch_set_x_range_max PROC
;;;107    
;;;108    void kl520_api_touch_set_x_range_max(int x_range_max) {
000000  4903              LDR      r1,|L7.16|
;;;109        if (m_touch_driver)
000002  6889              LDR      r1,[r1,#8]  ; m_touch_driver
000004  2900              CMP      r1,#0                 ;108
000006  d001              BEQ      |L7.12|
;;;110            m_touch_driver->x_range_max = x_range_max;
000008  f8a1008e          STRH     r0,[r1,#0x8e]
                  |L7.12|
;;;111    }
00000c  4770              BX       lr
;;;112    void kl520_api_touch_set_y_range_max(int y_range_max) {
                          ENDP

00000e  0000              DCW      0x0000
                  |L7.16|
                          DCD      ||.data||

                          AREA ||i.kl520_api_touch_set_y_axis_inverse||, CODE, READONLY, ALIGN=2

                  kl520_api_touch_set_y_axis_inverse PROC
;;;119    }
;;;120    void kl520_api_touch_set_y_axis_inverse(int on_off) {
000000  4903              LDR      r1,|L8.16|
;;;121        if (m_touch_driver)
000002  6889              LDR      r1,[r1,#8]  ; m_touch_driver
000004  2900              CMP      r1,#0                 ;120
000006  d001              BEQ      |L8.12|
;;;122            m_touch_driver->inverse_y_axis = on_off;
000008  f8810093          STRB     r0,[r1,#0x93]
                  |L8.12|
;;;123    }
00000c  4770              BX       lr
;;;124    
                          ENDP

00000e  0000              DCW      0x0000
                  |L8.16|
                          DCD      ||.data||

                          AREA ||i.kl520_api_touch_set_y_range_max||, CODE, READONLY, ALIGN=2

                  kl520_api_touch_set_y_range_max PROC
;;;111    }
;;;112    void kl520_api_touch_set_y_range_max(int y_range_max) {
000000  4903              LDR      r1,|L9.16|
;;;113        if (m_touch_driver)
000002  6889              LDR      r1,[r1,#8]  ; m_touch_driver
000004  2900              CMP      r1,#0                 ;112
000006  d001              BEQ      |L9.12|
;;;114            m_touch_driver->y_range_max = y_range_max;
000008  f8a10090          STRH     r0,[r1,#0x90]
                  |L9.12|
;;;115    }
00000c  4770              BX       lr
;;;116    void kl520_api_touch_set_x_axis_inverse(int on_off) {
                          ENDP

00000e  0000              DCW      0x0000
                  |L9.16|
                          DCD      ||.data||

                          AREA ||i.kl520_api_touch_start||, CODE, READONLY, ALIGN=2

                  kl520_api_touch_start PROC
;;;83     
;;;84     int kl520_api_touch_start(void)
000000  4804              LDR      r0,|L10.20|
;;;85     {
000002  b510              PUSH     {r4,lr}
000004  6881              LDR      r1,[r0,#8]  ; m_touch_driver
000006  b111              CBZ      r1,|L10.14|
;;;86         //dbg_msg_touch("m_touch_driver=%x", m_touch_driver);
;;;87         //dbg_msg_touch("m_touch_driver->start=%x", m_touch_driver->start);
;;;88         //dbg_msg_touch("m_touch_driver->core_dev=%x", m_touch_driver->core_dev);
;;;89         if (m_touch_driver)
;;;90             m_touch_driver->start(m_touch_driver->core_dev);
000008  6888              LDR      r0,[r1,#8]
00000a  6d49              LDR      r1,[r1,#0x54]
00000c  4788              BLX      r1
                  |L10.14|
;;;91     
;;;92         return 0;
00000e  2000              MOVS     r0,#0
;;;93     }
000010  bd10              POP      {r4,pc}
;;;94     
                          ENDP

000012  0000              DCW      0x0000
                  |L10.20|
                          DCD      ||.data||

                          AREA ||i.kl520_api_touch_stop||, CODE, READONLY, ALIGN=2

                  kl520_api_touch_stop PROC
;;;94     
;;;95     int kl520_api_touch_stop(void)
000000  4804              LDR      r0,|L11.20|
;;;96     {
000002  b510              PUSH     {r4,lr}
000004  6881              LDR      r1,[r0,#8]  ; m_touch_driver
000006  b111              CBZ      r1,|L11.14|
;;;97         if (m_touch_driver)
;;;98             m_touch_driver->stop(m_touch_driver->core_dev);
000008  6888              LDR      r0,[r1,#8]
00000a  6d89              LDR      r1,[r1,#0x58]
00000c  4788              BLX      r1
                  |L11.14|
;;;99     
;;;100        return 0;
00000e  2000              MOVS     r0,#0
;;;101    }
000010  bd10              POP      {r4,pc}
;;;102    
                          ENDP

000012  0000              DCW      0x0000
                  |L11.20|
                          DCD      ||.data||

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  __func__
000000  6b6c3532          DCB      0x6b,0x6c,0x35,0x32
000004  305f6170          DCB      0x30,0x5f,0x61,0x70
000008  695f746f          DCB      0x69,0x5f,0x74,0x6f
00000c  7563685f          DCB      0x75,0x63,0x68,0x5f
000010  6f70656e          DCB      0x6f,0x70,0x65,0x6e
000014  00                DCB      0x00

                          AREA ||.data||, DATA, ALIGN=2

                  m_cb_touch_power_on
                          DCD      0x00000000
                  m_cb_touch_power_off
                          DCD      0x00000000
                  m_touch_driver
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\scpu\\drivers\\media\\touch\\touch.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_touch_c_18d76503____REV16|
#line 208 "F:\\Users\\fu\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.9.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___7_touch_c_18d76503____REV16| PROC
#line 209

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_touch_c_18d76503____REVSH|
#line 223
|__asm___7_touch_c_18d76503____REVSH| PROC
#line 224

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___7_touch_c_18d76503____RRX|
#line 410
|__asm___7_touch_c_18d76503____RRX| PROC
#line 411

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
