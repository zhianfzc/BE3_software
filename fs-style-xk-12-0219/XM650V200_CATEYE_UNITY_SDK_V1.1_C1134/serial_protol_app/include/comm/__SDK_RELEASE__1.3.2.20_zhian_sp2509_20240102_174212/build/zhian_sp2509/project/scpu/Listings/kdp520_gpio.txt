; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\kdp520_gpio.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\kdp520_gpio.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\config -I..\..\..\..\board -I..\..\..\..\common\include -I..\..\..\..\scpu\device\include\CMSIS -I..\..\..\..\scpu\device\include\Kneron -I..\..\..\..\scpu\framework\include -I..\..\..\..\scpu\framework\include\framework -I..\..\..\..\scpu\drivers\include -I..\..\..\..\scpu\drivers\include\media\touch -I..\..\..\..\scpu\drivers\include\media\flash -I..\..\..\..\scpu\lib\kdp_system\inc -I..\..\..\..\scpu\lib\kdp_application\include\ -I..\..\..\..\scpu\lib\kdp_application\base\ -I..\..\..\..\scpu\lib\kdp_application\misc -I..\..\..\..\scpu\lib\kdp_e2e_r1n1\include -I..\..\..\..\scpu\include -I..\..\..\..\scpu\middleware\ota -I..\..\..\..\scpu\middleware\comm -I..\..\..\..\scpu\middleware\kdp_comm -I..\..\..\..\scpu\share -I..\..\..\..\scpu\share\gui_lib -I..\..\user -I.\RTE\CMSIS -I.\RTE\_Target-scpu -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\RTX\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\Device\ARM\ARMCM4\Include -D__RTX -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DARMCM4_FP -D_RTE_ -DARM_MATH_CM4 -DTARGET_SCPU -DLOG_ENABLE -DKL520 -DHEAD_POSE_CHECK_PERCENT --omf_browse=.\objects\kdp520_gpio.crf ..\..\..\..\scpu\drivers\src\kdp520_gpio.c]
                          THUMB

                          AREA ||i.GPIO010_IRQHandler||, CODE, READONLY, ALIGN=2

                  GPIO010_IRQHandler PROC
;;;421    
;;;422    void GPIO010_IRQHandler(void)
000000  4902              LDR      r1,|L1.12|
000002  6a88              LDR      r0,[r1,#0x28]
000004  6308              STR      r0,[r1,#0x30]
;;;423    {
;;;424        UINT32 IntrMaskedStat;
;;;425    
;;;426        IntrMaskedStat = kdp520_gpio_getintmaskstatus();
;;;427        //clear CPIO interrupt
;;;428        kdp520_gpio_clearint(IntrMaskedStat);
;;;429        //__gpio_int_occurred |= IntrMaskedStat;
;;;430        kdp520_set_int_occurred(IntrMaskedStat);
000006  f7ffbffe          B.W      kdp520_set_int_occurred
;;;431    }
                          ENDP

00000a  0000              DCW      0x0000
                  |L1.12|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_clear_int_occurred||, CODE, READONLY, ALIGN=2

                  kdp520_clear_int_occurred PROC
;;;269    
;;;270    void kdp520_clear_int_occurred(unsigned int pin)
000000  2101              MOVS     r1,#1
;;;271    {
;;;272        __gpio_int_occurred &= ~(1 << pin);
000002  4081              LSLS     r1,r1,r0
000004  4802              LDR      r0,|L2.16|
000006  6802              LDR      r2,[r0,#0]  ; __gpio_int_occurred
000008  438a              BICS     r2,r2,r1
00000a  6002              STR      r2,[r0,#0]  ; __gpio_int_occurred
;;;273    }
00000c  4770              BX       lr
;;;274    
                          ENDP

00000e  0000              DCW      0x0000
                  |L2.16|
                          DCD      ||.data||

                          AREA ||i.kdp520_get_int_occurred||, CODE, READONLY, ALIGN=2

                  kdp520_get_int_occurred PROC
;;;257    
;;;258    BOOL kdp520_get_int_occurred(unsigned int pin)
000000  2101              MOVS     r1,#1
;;;259    {
;;;260        if (__gpio_int_occurred & (1 << pin))
000002  4081              LSLS     r1,r1,r0
000004  4803              LDR      r0,|L3.20|
000006  6800              LDR      r0,[r0,#0]  ; __gpio_int_occurred
000008  4201              TST      r1,r0
00000a  d001              BEQ      |L3.16|
;;;261        {
;;;262            return TRUE;
00000c  2001              MOVS     r0,#1
;;;263        }
;;;264        else
;;;265        {
;;;266            return FALSE;
;;;267        }
;;;268    }
00000e  4770              BX       lr
                  |L3.16|
000010  2000              MOVS     r0,#0                 ;266
000012  4770              BX       lr
;;;269    
                          ENDP

                  |L3.20|
                          DCD      ||.data||

                          AREA ||i.kdp520_gpio_cleardata||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_cleardata PROC
;;;73     
;;;74     void kdp520_gpio_cleardata(unsigned int data)
000000  4901              LDR      r1,|L4.8|
;;;75     {
;;;76         outw(GPIO_BASE + GPIO_DATACLR, data);	
000002  6148              STR      r0,[r1,#0x14]
;;;77     }
000004  4770              BX       lr
;;;78     
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_clearint||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_clearint PROC
;;;172    
;;;173    void kdp520_gpio_clearint(unsigned int data)
000000  4901              LDR      r1,|L5.8|
;;;174    {
;;;175          outw(GPIO_BASE + GPIO_INT_CLEAR, data);
000002  6308              STR      r0,[r1,#0x30]
;;;176    }
000004  4770              BX       lr
;;;177    
                          ENDP

000006  0000              DCW      0x0000
                  |L5.8|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_disablebounce||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_disablebounce PROC
;;;305    
;;;306    void kdp520_gpio_disablebounce(unsigned int pin)
000000  4a03              LDR      r2,|L6.16|
;;;307    {
;;;308        unsigned int tmp;
;;;309    
;;;310         tmp = inw(GPIO_BASE + GPIO_INT_BOUNCEENABLE);
000002  6c11              LDR      r1,[r2,#0x40]
;;;311         tmp &= ~(1<<pin);
000004  2301              MOVS     r3,#1
000006  4083              LSLS     r3,r3,r0
000008  4399              BICS     r1,r1,r3
;;;312         outw(GPIO_BASE + GPIO_INT_BOUNCEENABLE, tmp);
00000a  6411              STR      r1,[r2,#0x40]
;;;313    }
00000c  4770              BX       lr
;;;314    
                          ENDP

00000e  0000              DCW      0x0000
                  |L6.16|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_disableint||, CODE, READONLY, ALIGN=1

                  kdp520_gpio_disableint PROC
;;;246    
;;;247    void kdp520_gpio_disableint(unsigned int pin)
000000  b510              PUSH     {r4,lr}
;;;248    {
000002  4604              MOV      r4,r0
;;;249         kdp520_gpio_setintdisable(pin);
000004  f7fffffe          BL       kdp520_gpio_setintdisable
;;;250         kdp520_gpio_setintmask(pin); 	
000008  4620              MOV      r0,r4
00000a  e8bd4010          POP      {r4,lr}
00000e  f7ffbffe          B.W      kdp520_gpio_setintmask
;;;251    }
;;;252    
                          ENDP


                          AREA ||i.kdp520_gpio_enablebounce||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_enablebounce PROC
;;;294    
;;;295    void kdp520_gpio_enablebounce(unsigned int pin, unsigned int clkdiv)
000000  4b04              LDR      r3,|L8.20|
;;;296    {
000002  b510              PUSH     {r4,lr}
;;;297        unsigned int tmp;
;;;298    
;;;299         tmp = inw(GPIO_BASE + GPIO_INT_BOUNCEENABLE);
000004  6c1c              LDR      r4,[r3,#0x40]
;;;300         tmp |= (1<<pin);
000006  2201              MOVS     r2,#1
000008  4082              LSLS     r2,r2,r0
00000a  4322              ORRS     r2,r2,r4
;;;301        outw(GPIO_BASE + GPIO_INT_BOUNCEENABLE, tmp);
00000c  641a              STR      r2,[r3,#0x40]
;;;302        
;;;303         outw(GPIO_BASE + GPIO_INT_PRESCALE, clkdiv); 	
00000e  6459              STR      r1,[r3,#0x44]
;;;304    }
000010  bd10              POP      {r4,pc}
;;;305    
                          ENDP

000012  0000              DCW      0x0000
                  |L8.20|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_enableint||, CODE, READONLY, ALIGN=1

                  kdp520_gpio_enableint PROC
;;;238    
;;;239    void kdp520_gpio_enableint(unsigned int pin, unsigned int trigger, unsigned int active)
000000  b570              PUSH     {r4-r6,lr}
;;;240    {
000002  4616              MOV      r6,r2
000004  460c              MOV      r4,r1
000006  4605              MOV      r5,r0
;;;241         kdp520_gpio_setintenable(pin);
000008  f7fffffe          BL       kdp520_gpio_setintenable
;;;242         kdp520_gpio_setintunmask(pin);
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       kdp520_gpio_setintunmask
;;;243         kdp520_gpio_settrigger(pin, trigger);	
000012  4621              MOV      r1,r4
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       kdp520_gpio_settrigger
;;;244         kdp520_gpio_setactivemode(pin, active);		
00001a  4631              MOV      r1,r6
00001c  4628              MOV      r0,r5
00001e  e8bd4070          POP      {r4-r6,lr}
000022  f7ffbffe          B.W      kdp520_gpio_setactivemode
;;;245    }
;;;246    
                          ENDP


                          AREA ||i.kdp520_gpio_getintmaskstatus||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_getintmaskstatus PROC
;;;166    
;;;167    unsigned int kdp520_gpio_getintmaskstatus(void)
000000  4801              LDR      r0,|L10.8|
;;;168    {
;;;169         return inw(GPIO_BASE + GPIO_INT_MASKSTATE);	
000002  6a80              LDR      r0,[r0,#0x28]
;;;170    }
000004  4770              BX       lr
;;;171    
                          ENDP

000006  0000              DCW      0x0000
                  |L10.8|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_israwint||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_israwint PROC
;;;134    
;;;135    BOOL  kdp520_gpio_israwint(unsigned int pin)
000000  4904              LDR      r1,|L11.20|
;;;136    {
;;;137        unsigned int tmp;
;;;138    
;;;139         tmp = inw(GPIO_BASE + GPIO_INT_RAWSTATE);
000002  6a4a              LDR      r2,[r1,#0x24]
;;;140    
;;;141          if((tmp & (1<<pin)) != 0)
000004  2101              MOVS     r1,#1
000006  4081              LSLS     r1,r1,r0
000008  4211              TST      r1,r2
00000a  d001              BEQ      |L11.16|
;;;142              return TRUE;
00000c  2001              MOVS     r0,#1
;;;143          else
;;;144              return FALSE;
;;;145    }   
00000e  4770              BX       lr
                  |L11.16|
000010  2000              MOVS     r0,#0                 ;144
000012  4770              BX       lr
;;;146    
                          ENDP

                  |L11.20|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_pulldisable||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_pulldisable PROC
;;;88     
;;;89     void  kdp520_gpio_pulldisable(unsigned int pin)
000000  4a03              LDR      r2,|L12.16|
;;;90     {	
;;;91         unsigned int tmp;
;;;92     
;;;93          tmp = inw(GPIO_BASE + GPIO_PULLENABLE);
000002  6991              LDR      r1,[r2,#0x18]
;;;94         tmp &= ~(1<<pin);
000004  2301              MOVS     r3,#1
000006  4083              LSLS     r3,r3,r0
000008  4399              BICS     r1,r1,r3
;;;95           outw(GPIO_BASE + GPIO_PULLENABLE, tmp);
00000a  6191              STR      r1,[r2,#0x18]
;;;96     }  
00000c  4770              BX       lr
;;;97        
                          ENDP

00000e  0000              DCW      0x0000
                  |L12.16|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_pullenable||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_pullenable PROC
;;;79     
;;;80     void  kdp520_gpio_pullenable(unsigned int pin)
000000  4a03              LDR      r2,|L13.16|
;;;81     {	
;;;82         unsigned int tmp;
;;;83     
;;;84          tmp = inw(GPIO_BASE + GPIO_PULLENABLE);
000002  6993              LDR      r3,[r2,#0x18]
;;;85         tmp |= (1<<pin);
000004  2101              MOVS     r1,#1
000006  4081              LSLS     r1,r1,r0
000008  4319              ORRS     r1,r1,r3
;;;86           outw(GPIO_BASE + GPIO_PULLENABLE, tmp);
00000a  6191              STR      r1,[r2,#0x18]
;;;87     }   
00000c  4770              BX       lr
;;;88     
                          ENDP

00000e  0000              DCW      0x0000
                  |L13.16|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_pullhigh||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_pullhigh PROC
;;;97        
;;;98     void  kdp520_gpio_pullhigh(unsigned int pin)
000000  4a03              LDR      r2,|L14.16|
;;;99     {
;;;100        unsigned int tmp;
;;;101    
;;;102         tmp = inw(GPIO_BASE + GPIO_PULLTYPE);
000002  69d3              LDR      r3,[r2,#0x1c]
;;;103        tmp |= (1<<pin);
000004  2101              MOVS     r1,#1
000006  4081              LSLS     r1,r1,r0
000008  4319              ORRS     r1,r1,r3
;;;104          outw(GPIO_BASE + GPIO_PULLTYPE, tmp);
00000a  61d1              STR      r1,[r2,#0x1c]
;;;105    }   
00000c  4770              BX       lr
;;;106       
                          ENDP

00000e  0000              DCW      0x0000
                  |L14.16|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_pulllow||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_pulllow PROC
;;;106       
;;;107    void  kdp520_gpio_pulllow(unsigned int pin)
000000  4a03              LDR      r2,|L15.16|
;;;108    {	
;;;109        unsigned int tmp;
;;;110    
;;;111         tmp = inw(GPIO_BASE + GPIO_PULLTYPE);
000002  69d1              LDR      r1,[r2,#0x1c]
;;;112        tmp &= ~(1<<pin);
000004  2301              MOVS     r3,#1
000006  4083              LSLS     r3,r3,r0
000008  4399              BICS     r1,r1,r3
;;;113          outw(GPIO_BASE + GPIO_PULLTYPE, tmp);
00000a  61d1              STR      r1,[r2,#0x1c]
;;;114    }  
00000c  4770              BX       lr
;;;115       
                          ENDP

00000e  0000              DCW      0x0000
                  |L15.16|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_readdata||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_readdata PROC
;;;21     
;;;22     unsigned int kdp520_gpio_readdata(void)
000000  4801              LDR      r0,|L16.8|
;;;23     {
;;;24         return inw(GPIO_BASE + GPIO_DIN_OFFSET);
000002  6840              LDR      r0,[r0,#4]
;;;25     }                         
000004  4770              BX       lr
;;;26     
                          ENDP

000006  0000              DCW      0x0000
                  |L16.8|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_set_dcsr_param||, CODE, READONLY, ALIGN=1

                  kdp520_gpio_set_dcsr_param PROC
;;;417    
;;;418    extern void kdp520_gpio_set_dcsr_param(kdp520_gpio_custom_dcsr_param* dst_param, kdp520_gpio_custom_dcsr_param* src_param) {
000000  c90e              LDM      r1,{r1-r3}
000002  e880000e          STM      r0,{r1-r3}
;;;419        memcpy(dst_param, src_param, sizeof(kdp520_gpio_custom_dcsr_param));
;;;420    }
000006  4770              BX       lr
;;;421    
                          ENDP


                          AREA ||i.kdp520_gpio_setactivemode||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_setactivemode PROC
;;;218    
;;;219    void kdp520_gpio_setactivemode(unsigned int pin, unsigned int active)
000000  b510              PUSH     {r4,lr}
;;;220    {
;;;221        unsigned int tmp, tmp1=0;
;;;222    
;;;223         tmp = inw(GPIO_BASE + GPIO_INT_RISENEG);
000002  4c05              LDR      r4,|L18.24|
000004  6be3              LDR      r3,[r4,#0x3c]
;;;224    
;;;225          if (active)
;;;226          {
;;;227              tmp |= (1<<pin);
000006  2201              MOVS     r2,#1
000008  4082              LSLS     r2,r2,r0
00000a  b111              CBZ      r1,|L18.18|
00000c  431a              ORRS     r2,r2,r3
;;;228              outw(GPIO_BASE + GPIO_INT_RISENEG, tmp);
00000e  63e2              STR      r2,[r4,#0x3c]
;;;229          }
;;;230          else
;;;231          {
;;;232              tmp1 |= (1<<pin);
;;;233              tmp &= ~tmp1;
;;;234              outw(GPIO_BASE + GPIO_INT_RISENEG, tmp);  	    
;;;235          }
;;;236    }
000010  bd10              POP      {r4,pc}
                  |L18.18|
000012  4393              BICS     r3,r3,r2              ;233
000014  63e3              STR      r3,[r4,#0x3c]         ;234
000016  bd10              POP      {r4,pc}
;;;237    
                          ENDP

                  |L18.24|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_setbypass||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_setbypass PROC
;;;57     
;;;58     void kdp520_gpio_setbypass(unsigned int pin)
000000  4a03              LDR      r2,|L19.16|
;;;59     {
;;;60         unsigned int tmp;
;;;61     
;;;62          tmp = inw(GPIO_BASE + GPIO_PIN_BYPASS);
000002  68d3              LDR      r3,[r2,#0xc]
;;;63         tmp |= (1<<pin);
000004  2101              MOVS     r1,#1
000006  4081              LSLS     r1,r1,r0
000008  4319              ORRS     r1,r1,r3
;;;64           outw(GPIO_BASE + GPIO_PIN_BYPASS, tmp);
00000a  60d1              STR      r1,[r2,#0xc]
;;;65     }            
00000c  4770              BX       lr
;;;66     
                          ENDP

00000e  0000              DCW      0x0000
                  |L19.16|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_setdata||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_setdata PROC
;;;67     
;;;68     void kdp520_gpio_setdata(unsigned int data)
000000  4901              LDR      r1,|L20.8|
;;;69     {
;;;70         outw(GPIO_BASE + GPIO_DATASET, data);
000002  6108              STR      r0,[r1,#0x10]
;;;71     }   
000004  4770              BX       lr
;;;72     
                          ENDP

000006  0000              DCW      0x0000
                  |L20.8|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_setdir||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_setdir PROC
;;;38     // ====================================================================
;;;39     void kdp520_gpio_setdir(unsigned int pin, unsigned int dir)
000000  b510              PUSH     {r4,lr}
;;;40     {
;;;41         unsigned int tmp;
;;;42         
;;;43          tmp = inw(GPIO_BASE + GPIO_PINOUT_OFFSET);
000002  4c06              LDR      r4,|L21.28|
000004  68a3              LDR      r3,[r4,#8]
000006  2201              MOVS     r2,#1                 ;40
;;;44     
;;;45          if(dir==GPIO_DIR_OUTPUT)
;;;46          {
;;;47              tmp |= (1<<pin); 
000008  4082              LSLS     r2,r2,r0
00000a  2901              CMP      r1,#1                 ;45
00000c  d003              BEQ      |L21.22|
;;;48          }
;;;49          else
;;;50          {
;;;51             tmp &= ~(1<<pin);
00000e  ea230002          BIC      r0,r3,r2
                  |L21.18|
;;;52         }
;;;53     
;;;54         outw(GPIO_BASE + GPIO_PINOUT_OFFSET, tmp); 
000012  60a0              STR      r0,[r4,#8]
;;;55     }
000014  bd10              POP      {r4,pc}
                  |L21.22|
000016  ea420003          ORR      r0,r2,r3              ;47
00001a  e7fa              B        |L21.18|
;;;56     
                          ENDP

                  |L21.28|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_setedgemode||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_setedgemode PROC
;;;198    
;;;199    void kdp520_gpio_setedgemode(unsigned int pin, unsigned int both)
000000  b510              PUSH     {r4,lr}
;;;200    {
;;;201        unsigned int tmp,tmp1=0;
;;;202    
;;;203         tmp = inw(GPIO_BASE + GPIO_INT_BOTH);
000002  4c05              LDR      r4,|L22.24|
000004  6ba3              LDR      r3,[r4,#0x38]
;;;204    
;;;205          if (both)
;;;206          {
;;;207              tmp |= (1<<pin);
000006  2201              MOVS     r2,#1
000008  4082              LSLS     r2,r2,r0
00000a  b111              CBZ      r1,|L22.18|
00000c  431a              ORRS     r2,r2,r3
;;;208              outw(GPIO_BASE + GPIO_INT_BOTH, tmp);
00000e  63a2              STR      r2,[r4,#0x38]
;;;209          }
;;;210          else
;;;211          {
;;;212              tmp1 |= (1<<pin);
;;;213              tmp &= ~tmp1;
;;;214              outw(GPIO_BASE + GPIO_INT_BOTH, tmp);
;;;215          }
;;;216          
;;;217    }
000010  bd10              POP      {r4,pc}
                  |L22.18|
000012  4393              BICS     r3,r3,r2              ;213
000014  63a3              STR      r3,[r4,#0x38]         ;214
000016  bd10              POP      {r4,pc}
;;;218    
                          ENDP

                  |L22.24|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_setintdisable||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_setintdisable PROC
;;;125    
;;;126    void  kdp520_gpio_setintdisable(unsigned int pin)
000000  4a03              LDR      r2,|L23.16|
;;;127    {
;;;128        unsigned int tmp;
;;;129    
;;;130         tmp = inw(GPIO_BASE + GPIO_INT_ENABLE);
000002  6a11              LDR      r1,[r2,#0x20]
;;;131        tmp &= ~(1<<pin);
000004  2301              MOVS     r3,#1
000006  4083              LSLS     r3,r3,r0
000008  4399              BICS     r1,r1,r3
;;;132          outw(GPIO_BASE + GPIO_INT_ENABLE, tmp);
00000a  6211              STR      r1,[r2,#0x20]
;;;133    }  
00000c  4770              BX       lr
;;;134    
                          ENDP

00000e  0000              DCW      0x0000
                  |L23.16|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_setintenable||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_setintenable PROC
;;;115       
;;;116    void  kdp520_gpio_setintenable(unsigned int pin)
000000  4a03              LDR      r2,|L24.16|
;;;117    {
;;;118        unsigned int tmp;
;;;119    
;;;120         tmp = inw(GPIO_BASE + GPIO_INT_ENABLE);
000002  6a13              LDR      r3,[r2,#0x20]
;;;121        tmp |= (1<<pin);
000004  2101              MOVS     r1,#1
000006  4081              LSLS     r1,r1,r0
000008  4319              ORRS     r1,r1,r3
;;;122          outw(GPIO_BASE + GPIO_INT_ENABLE, tmp);
00000a  6211              STR      r1,[r2,#0x20]
;;;123    }                        
00000c  4770              BX       lr
;;;124    
                          ENDP

00000e  0000              DCW      0x0000
                  |L24.16|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_setintmask||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_setintmask PROC
;;;146    
;;;147    void  kdp520_gpio_setintmask(unsigned int pin)
000000  4a03              LDR      r2,|L25.16|
;;;148    {
;;;149        unsigned int tmp;
;;;150    
;;;151         tmp = inw(GPIO_BASE + GPIO_INT_MASK);
000002  6ad3              LDR      r3,[r2,#0x2c]
;;;152        tmp |= 1<<pin;
000004  2101              MOVS     r1,#1
000006  4081              LSLS     r1,r1,r0
000008  4319              ORRS     r1,r1,r3
;;;153          outw(GPIO_BASE + GPIO_INT_MASK, tmp);
00000a  62d1              STR      r1,[r2,#0x2c]
;;;154    }                        
00000c  4770              BX       lr
;;;155    
                          ENDP

00000e  0000              DCW      0x0000
                  |L25.16|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_setintunmask||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_setintunmask PROC
;;;156    
;;;157    void  kdp520_gpio_setintunmask(unsigned int pin)
000000  4a03              LDR      r2,|L26.16|
;;;158    {
;;;159        unsigned int tmp;
;;;160    
;;;161         tmp = inw(GPIO_BASE + GPIO_INT_MASK);
000002  6ad1              LDR      r1,[r2,#0x2c]
;;;162        tmp &= ~(1<<pin);
000004  2301              MOVS     r3,#1
000006  4083              LSLS     r3,r3,r0
000008  4399              BICS     r1,r1,r3
;;;163          outw(GPIO_BASE + GPIO_INT_MASK, tmp);
00000a  62d1              STR      r1,[r2,#0x2c]
;;;164    }
00000c  4770              BX       lr
;;;165    
                          ENDP

00000e  0000              DCW      0x0000
                  |L26.16|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_setmode||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_setmode PROC
;;;314    
;;;315    void kdp520_gpio_setmode(unsigned int pin)
000000  498c              LDR      r1,|L27.564|
;;;316    {
;;;317        switch(pin)
000002  2820              CMP      r0,#0x20
000004  d218              BCS      |L27.56|
000006  e8dff000          TBB      [pc,r0]
00000a  1018              DCB      0x10,0x18
00000c  20283038          DCB      0x20,0x28,0x30,0x38
000010  40485058          DCB      0x40,0x48,0x50,0x58
000014  60687078          DCB      0x60,0x68,0x70,0x78
000018  80889098          DCB      0x80,0x88,0x90,0x98
00001c  a0a8b0b8          DCB      0xa0,0xa8,0xb0,0xb8
000020  c0c8d0d8          DCB      0xc0,0xc8,0xd0,0xd8
000024  e0e8f4fc          DCB      0xe0,0xe8,0xf4,0xfc
000028  f1f0              DCB      0xf1,0xf0
;;;318        {
;;;319            case 0:
;;;320                PINMUX_SPI_WP_N_SET(PINMUX_SPI_WP_N_GPIO0);
00002a  f8d10110          LDR      r0,[r1,#0x110]
00002e  f0200007          BIC      r0,r0,#7
000032  1cc0              ADDS     r0,r0,#3
000034  f8c10110          STR      r0,[r1,#0x110]
                  |L27.56|
;;;321                break;
;;;322            case 1:
;;;323                PINMUX_SPI_HOLD_N_SET(PINMUX_SPI_HOLD_N_GPIO1);
;;;324                break;
;;;325            case 2:
;;;326                PINMUX_SWJ_TRST_SET(PINMUX_SWJ_TRST_GPIO2);
;;;327                break;
;;;328            case 3:
;;;329                PINMUX_SWJ_TDI_SET(PINMUX_SWJ_TDI_GPIO3);
;;;330                break;
;;;331            case 4:
;;;332                PINMUX_SWJ_SWDITMS_SET(PINMUX_SWJ_SWDITMS_GPIO4);
;;;333                break;
;;;334            case 5:
;;;335                PINMUX_SWJ_SWCLKTCK_SET(PINMUX_SWJ_SWCLKTCK_GPIO5);
;;;336                break;
;;;337            case 6:
;;;338                PINMUX_SWJ_TDO_SET(PINMUX_SWJ_TDO_GPIO6);
;;;339                break;
;;;340            case 7:
;;;341                PINMUX_LC_PCLK_SET(PINMUX_LC_PCLK_GPIO7);
;;;342                break;
;;;343            case 8:
;;;344                PINMUX_LC_VS_SET(PINMUX_LC_VS_GPIO8);
;;;345                break;
;;;346            case 9:
;;;347                PINMUX_LC_HS_SET(PINMUX_LC_HS_GPIO9);
;;;348                break;
;;;349            case 10:
;;;350                PINMUX_LC_DE_SET(PINMUX_LC_DE_GPIO10);
;;;351                break;
;;;352            case 11:
;;;353                PINMUX_LC_DATA0_SET(PINMUX_LC_DATA0_GPIO11);
;;;354                break;
;;;355            case 12:
;;;356                PINMUX_LC_DATA1_SET(PINMUX_LC_DATA1_GPIO12);
;;;357                break;
;;;358            case 13:
;;;359                PINMUX_LC_DATA2_SET(PINMUX_LC_DATA2_GPIO13);
;;;360                break;
;;;361            case 14:
;;;362                PINMUX_LC_DATA3_SET(PINMUX_LC_DATA3_GPIO14);
;;;363                break;
;;;364            case 15:
;;;365                PINMUX_LC_DATA4_SET(PINMUX_LC_DATA4_GPIO15);
;;;366                break;
;;;367            case 16:
;;;368                PINMUX_LC_DATA5_SET(PINMUX_LC_DATA5_GPIO16);
;;;369                break;
;;;370            case 17:
;;;371                PINMUX_LC_DATA6_SET(PINMUX_LC_DATA6_GPIO17);
;;;372                break;
;;;373            case 18:
;;;374                PINMUX_LC_DATA7_SET(PINMUX_LC_DATA7_GPIO18);
;;;375                break;
;;;376            case 19:
;;;377                PINMUX_LC_DATA8_SET(PINMUX_LC_DATA8_GPIO19);
;;;378                break;
;;;379            case 20:
;;;380                PINMUX_LC_DATA9_SET(PINMUX_LC_DATA9_GPIO20);
;;;381                break;
;;;382            case 21:
;;;383                PINMUX_LC_DATA10_SET(PINMUX_LC_DATA10_GPIO21);
;;;384                break;
;;;385            case 22:
;;;386                PINMUX_SD_CLK_SET(PINMUX_SD_CLK_GPIO22);
;;;387                break;
;;;388            case 23:
;;;389                PINMUX_SD_CMD_SET(PINMUX_SD_CMD_GPIO23);
;;;390                break;
;;;391            case 24:
;;;392                PINMUX_SD_DATA0_SET(PINMUX_SD_DATA0_GPIO24);
;;;393                break;
;;;394            case 25:
;;;395                PINMUX_SD_DATA1_SET(PINMUX_SD_DATA1_GPIO25);
;;;396                 break;
;;;397            case 26:
;;;398                PINMUX_SD_DATA2_SET(PINMUX_SD_DATA2_GPIO26);
;;;399                break;
;;;400            case 27:
;;;401                PINMUX_SD_DATA3_SET(PINMUX_SD_DATA3_GPIO27);
;;;402                break;
;;;403            case 28:
;;;404                PINMUX_UART0_TX_SET(PINMUX_UART0_TX_GPIO28);
;;;405                break;
;;;406            case 29:
;;;407                PINMUX_I2C0_CLK_SET(PINMUX_I2C0_CLK_GPIO29);
;;;408                break;
;;;409            case 30:
;;;410                PINMUX_I2C0_DATA_SET(PINMUX_I2C0_DATA_GPIO30);
;;;411                break;
;;;412            case 31:
;;;413                PINMUX_PWM0_SET(PINMUX_PWM0_GPIO31);
;;;414                break;
;;;415        }   
;;;416    }
000038  4770              BX       lr
00003a  f8d10114          LDR      r0,[r1,#0x114]        ;323
00003e  f0200007          BIC      r0,r0,#7              ;323
000042  1cc0              ADDS     r0,r0,#3              ;323
000044  f8c10114          STR      r0,[r1,#0x114]        ;323
000048  4770              BX       lr
00004a  f8d10118          LDR      r0,[r1,#0x118]        ;326
00004e  f0200007          BIC      r0,r0,#7              ;326
000052  1cc0              ADDS     r0,r0,#3              ;326
000054  f8c10118          STR      r0,[r1,#0x118]        ;326
000058  4770              BX       lr
00005a  f8d1011c          LDR      r0,[r1,#0x11c]        ;329
00005e  f0200007          BIC      r0,r0,#7              ;329
000062  1cc0              ADDS     r0,r0,#3              ;329
000064  f8c1011c          STR      r0,[r1,#0x11c]        ;329
000068  4770              BX       lr
00006a  f8d10120          LDR      r0,[r1,#0x120]        ;332
00006e  f0200007          BIC      r0,r0,#7              ;332
000072  1cc0              ADDS     r0,r0,#3              ;332
000074  f8c10120          STR      r0,[r1,#0x120]        ;332
000078  4770              BX       lr
00007a  f8d10124          LDR      r0,[r1,#0x124]        ;335
00007e  f0200007          BIC      r0,r0,#7              ;335
000082  1cc0              ADDS     r0,r0,#3              ;335
000084  f8c10124          STR      r0,[r1,#0x124]        ;335
000088  4770              BX       lr
00008a  f8d10128          LDR      r0,[r1,#0x128]        ;338
00008e  f0200007          BIC      r0,r0,#7              ;338
000092  1cc0              ADDS     r0,r0,#3              ;338
000094  f8c10128          STR      r0,[r1,#0x128]        ;338
000098  4770              BX       lr
00009a  f8d1012c          LDR      r0,[r1,#0x12c]        ;341
00009e  f0200007          BIC      r0,r0,#7              ;341
0000a2  1cc0              ADDS     r0,r0,#3              ;341
0000a4  f8c1012c          STR      r0,[r1,#0x12c]        ;341
0000a8  4770              BX       lr
0000aa  f8d10130          LDR      r0,[r1,#0x130]        ;344
0000ae  f0200007          BIC      r0,r0,#7              ;344
0000b2  1cc0              ADDS     r0,r0,#3              ;344
0000b4  f8c10130          STR      r0,[r1,#0x130]        ;344
0000b8  4770              BX       lr
0000ba  f8d10134          LDR      r0,[r1,#0x134]        ;347
0000be  f0200007          BIC      r0,r0,#7              ;347
0000c2  1cc0              ADDS     r0,r0,#3              ;347
0000c4  f8c10134          STR      r0,[r1,#0x134]        ;347
0000c8  4770              BX       lr
0000ca  f8d10138          LDR      r0,[r1,#0x138]        ;350
0000ce  f0200007          BIC      r0,r0,#7              ;350
0000d2  1cc0              ADDS     r0,r0,#3              ;350
0000d4  f8c10138          STR      r0,[r1,#0x138]        ;350
0000d8  4770              BX       lr
0000da  f8d1013c          LDR      r0,[r1,#0x13c]        ;353
0000de  f0200007          BIC      r0,r0,#7              ;353
0000e2  1cc0              ADDS     r0,r0,#3              ;353
0000e4  f8c1013c          STR      r0,[r1,#0x13c]        ;353
0000e8  4770              BX       lr
0000ea  f8d10140          LDR      r0,[r1,#0x140]        ;356
0000ee  f0200007          BIC      r0,r0,#7              ;356
0000f2  1cc0              ADDS     r0,r0,#3              ;356
0000f4  f8c10140          STR      r0,[r1,#0x140]        ;356
0000f8  4770              BX       lr
0000fa  f8d10144          LDR      r0,[r1,#0x144]        ;359
0000fe  f0200007          BIC      r0,r0,#7              ;359
000102  1cc0              ADDS     r0,r0,#3              ;359
000104  f8c10144          STR      r0,[r1,#0x144]        ;359
000108  4770              BX       lr
00010a  f8d10148          LDR      r0,[r1,#0x148]        ;362
00010e  f0200007          BIC      r0,r0,#7              ;362
000112  1cc0              ADDS     r0,r0,#3              ;362
000114  f8c10148          STR      r0,[r1,#0x148]        ;362
000118  4770              BX       lr
00011a  f8d1014c          LDR      r0,[r1,#0x14c]        ;365
00011e  f0200007          BIC      r0,r0,#7              ;365
000122  1cc0              ADDS     r0,r0,#3              ;365
000124  f8c1014c          STR      r0,[r1,#0x14c]        ;365
000128  4770              BX       lr
00012a  f8d10150          LDR      r0,[r1,#0x150]        ;368
00012e  f0200007          BIC      r0,r0,#7              ;368
000132  1cc0              ADDS     r0,r0,#3              ;368
000134  f8c10150          STR      r0,[r1,#0x150]        ;368
000138  4770              BX       lr
00013a  f8d10154          LDR      r0,[r1,#0x154]        ;371
00013e  f0200007          BIC      r0,r0,#7              ;371
000142  1cc0              ADDS     r0,r0,#3              ;371
000144  f8c10154          STR      r0,[r1,#0x154]        ;371
000148  4770              BX       lr
00014a  f8d10158          LDR      r0,[r1,#0x158]        ;374
00014e  f0200007          BIC      r0,r0,#7              ;374
000152  1cc0              ADDS     r0,r0,#3              ;374
000154  f8c10158          STR      r0,[r1,#0x158]        ;374
000158  4770              BX       lr
00015a  f8d1015c          LDR      r0,[r1,#0x15c]        ;377
00015e  f0200007          BIC      r0,r0,#7              ;377
000162  1cc0              ADDS     r0,r0,#3              ;377
000164  f8c1015c          STR      r0,[r1,#0x15c]        ;377
000168  4770              BX       lr
00016a  f8d10160          LDR      r0,[r1,#0x160]        ;380
00016e  f0200007          BIC      r0,r0,#7              ;380
000172  1cc0              ADDS     r0,r0,#3              ;380
000174  f8c10160          STR      r0,[r1,#0x160]        ;380
000178  4770              BX       lr
00017a  f8d10164          LDR      r0,[r1,#0x164]        ;383
00017e  f0200007          BIC      r0,r0,#7              ;383
000182  1cc0              ADDS     r0,r0,#3              ;383
000184  f8c10164          STR      r0,[r1,#0x164]        ;383
000188  4770              BX       lr
00018a  f8d1017c          LDR      r0,[r1,#0x17c]        ;386
00018e  f0200007          BIC      r0,r0,#7              ;386
000192  1cc0              ADDS     r0,r0,#3              ;386
000194  f8c1017c          STR      r0,[r1,#0x17c]        ;386
000198  4770              BX       lr
00019a  f8d10180          LDR      r0,[r1,#0x180]        ;389
00019e  f0200007          BIC      r0,r0,#7              ;389
0001a2  1cc0              ADDS     r0,r0,#3              ;389
0001a4  f8c10180          STR      r0,[r1,#0x180]        ;389
0001a8  4770              BX       lr
0001aa  f8d10184          LDR      r0,[r1,#0x184]        ;392
0001ae  f0200007          BIC      r0,r0,#7              ;392
0001b2  1cc0              ADDS     r0,r0,#3              ;392
0001b4  f8c10184          STR      r0,[r1,#0x184]        ;392
0001b8  4770              BX       lr
0001ba  f8d10188          LDR      r0,[r1,#0x188]        ;395
0001be  f0200007          BIC      r0,r0,#7              ;395
0001c2  1cc0              ADDS     r0,r0,#3              ;395
0001c4  f8c10188          STR      r0,[r1,#0x188]        ;395
0001c8  4770              BX       lr
0001ca  f8d1018c          LDR      r0,[r1,#0x18c]        ;398
0001ce  f0200007          BIC      r0,r0,#7              ;398
0001d2  1cc0              ADDS     r0,r0,#3              ;398
0001d4  f8c1018c          STR      r0,[r1,#0x18c]        ;398
0001d8  4770              BX       lr
0001da  f8d10190          LDR      r0,[r1,#0x190]        ;401
0001de  f0200007          BIC      r0,r0,#7              ;401
0001e2  1cc0              ADDS     r0,r0,#3              ;401
0001e4  f8c10190          STR      r0,[r1,#0x190]        ;401
                  |L27.488|
0001e8  4770              BX       lr
0001ea  e01a              B        |L27.546|
0001ec  e011              B        |L27.530|
0001ee  e008              B        |L27.514|
0001f0  e7ff              B        |L27.498|
                  |L27.498|
0001f2  f8d10198          LDR      r0,[r1,#0x198]        ;404
0001f6  f0200007          BIC      r0,r0,#7              ;404
0001fa  1cc0              ADDS     r0,r0,#3              ;404
0001fc  f8c10198          STR      r0,[r1,#0x198]        ;404
000200  e7f2              B        |L27.488|
                  |L27.514|
000202  f8d1019c          LDR      r0,[r1,#0x19c]        ;407
000206  f0200007          BIC      r0,r0,#7              ;407
00020a  1cc0              ADDS     r0,r0,#3              ;407
00020c  f8c1019c          STR      r0,[r1,#0x19c]        ;407
000210  e7ea              B        |L27.488|
                  |L27.530|
000212  f8d101a0          LDR      r0,[r1,#0x1a0]        ;410
000216  f0200007          BIC      r0,r0,#7              ;410
00021a  1cc0              ADDS     r0,r0,#3              ;410
00021c  f8c101a0          STR      r0,[r1,#0x1a0]        ;410
000220  e7e2              B        |L27.488|
                  |L27.546|
000222  f8d101a4          LDR      r0,[r1,#0x1a4]        ;413
000226  f0200007          BIC      r0,r0,#7              ;413
00022a  1cc0              ADDS     r0,r0,#3              ;413
00022c  f8c101a4          STR      r0,[r1,#0x1a4]        ;413
000230  e7da              B        |L27.488|
;;;417    
                          ENDP

000232  0000              DCW      0x0000
                  |L27.564|
                          DCD      0xc2380000

                          AREA ||i.kdp520_gpio_settrigger||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_settrigger PROC
;;;178    
;;;179    void kdp520_gpio_settrigger(unsigned int pin, unsigned int trigger)
000000  b510              PUSH     {r4,lr}
;;;180    {
;;;181        unsigned int tmp=0, tmp1=0;
;;;182    
;;;183         tmp = inw(GPIO_BASE + GPIO_INT_TRIGGER);
000002  4c05              LDR      r4,|L28.24|
000004  6b63              LDR      r3,[r4,#0x34]
;;;184    
;;;185          if (trigger)
;;;186          {
;;;187              tmp |= (1<<pin);
000006  2201              MOVS     r2,#1
000008  4082              LSLS     r2,r2,r0
00000a  b111              CBZ      r1,|L28.18|
00000c  431a              ORRS     r2,r2,r3
;;;188              outw(GPIO_BASE + GPIO_INT_TRIGGER, tmp);
00000e  6362              STR      r2,[r4,#0x34]
;;;189          }
;;;190          else
;;;191          {
;;;192              tmp1 |= (1<<pin);
;;;193              tmp &= ~tmp1;
;;;194              outw(GPIO_BASE + GPIO_INT_TRIGGER, tmp);  	    
;;;195          }
;;;196    }
000010  bd10              POP      {r4,pc}
                  |L28.18|
000012  4393              BICS     r3,r3,r2              ;193
000014  6363              STR      r3,[r4,#0x34]         ;194
000016  bd10              POP      {r4,pc}
;;;197    
                          ENDP

                  |L28.24|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_gpio_writedata||, CODE, READONLY, ALIGN=2

                  kdp520_gpio_writedata PROC
;;;27     
;;;28     void kdp520_gpio_writedata(unsigned int data)
000000  4901              LDR      r1,|L29.8|
;;;29     {
;;;30         outw(GPIO_BASE + GPIO_DOUT_OFFSET, data);
000002  6008              STR      r0,[r1,#0]
;;;31     }
000004  4770              BX       lr
;;;32     
                          ENDP

000006  0000              DCW      0x0000
                  |L29.8|
                          DCD      0xc1d00000

                          AREA ||i.kdp520_set_int_occurred||, CODE, READONLY, ALIGN=2

                  kdp520_set_int_occurred PROC
;;;252    
;;;253    void kdp520_set_int_occurred(unsigned int occurred)
000000  4902              LDR      r1,|L30.12|
;;;254    {
;;;255        __gpio_int_occurred |= occurred;
000002  680a              LDR      r2,[r1,#0]  ; __gpio_int_occurred
000004  4302              ORRS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]  ; __gpio_int_occurred
;;;256    }
000008  4770              BX       lr
;;;257    
                          ENDP

00000a  0000              DCW      0x0000
                  |L30.12|
                          DCD      ||.data||

                          AREA ||i.kdp520_wait_gpio_int||, CODE, READONLY, ALIGN=2

                  kdp520_wait_gpio_int PROC
;;;274    
;;;275    void kdp520_wait_gpio_int(unsigned int pin)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;276    {	
000004  4605              MOV      r5,r0
;;;277        u32 cnt = 0;
000006  2400              MOVS     r4,#0
;;;278        
;;;279        while(!(__gpio_int_occurred & (pin)))
000008  4e08              LDR      r6,|L31.44|
;;;280        {
;;;281          //__WFE (); 								   // Power-Down until next Event/Interrupt
;;;282            delay_us(1);
;;;283            
;;;284            if (GPIO_WAIT_INT_TIMEOUT_CNT <= cnt)
00000a  4f09              LDR      r7,|L31.48|
00000c  e005              B        |L31.26|
                  |L31.14|
00000e  2001              MOVS     r0,#1                 ;282
000010  f7fffffe          BL       delay_us
000014  42bc              CMP      r4,r7
000016  d203              BCS      |L31.32|
000018  1c64              ADDS     r4,r4,#1
                  |L31.26|
00001a  6830              LDR      r0,[r6,#0]            ;279  ; __gpio_int_occurred
00001c  4228              TST      r0,r5                 ;279
00001e  d0f6              BEQ      |L31.14|
                  |L31.32|
;;;285            {
;;;286                dbg_msg("kdp520_wait_gpio_int TIMEOUT:%d Pin:%d\n", cnt, pin);
;;;287                break;
;;;288            }
;;;289            cnt++;
;;;290        }	
;;;291        
;;;292        __gpio_int_occurred &= ~(pin);
000020  6830              LDR      r0,[r6,#0]  ; __gpio_int_occurred
000022  43a8              BICS     r0,r0,r5
000024  6030              STR      r0,[r6,#0]  ; __gpio_int_occurred
;;;293    }
000026  e8bd81f0          POP      {r4-r8,pc}
;;;294    
                          ENDP

00002a  0000              DCW      0x0000
                  |L31.44|
                          DCD      ||.data||
                  |L31.48|
                          DCD      0x0007ffff

                          AREA ||.data||, DATA, ALIGN=2

                  __gpio_int_occurred
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\scpu\\drivers\\src\\kdp520_gpio.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_kdp520_gpio_c_c4a34b94____REV16|
#line 208 "F:\\Users\\fu\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.9.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___13_kdp520_gpio_c_c4a34b94____REV16| PROC
#line 209

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_kdp520_gpio_c_c4a34b94____REVSH|
#line 223
|__asm___13_kdp520_gpio_c_c4a34b94____REVSH| PROC
#line 224

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___13_kdp520_gpio_c_c4a34b94____RRX|
#line 410
|__asm___13_kdp520_gpio_c_c4a34b94____RRX| PROC
#line 411

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
