; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\clock.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\clock.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\config -I..\..\..\..\board -I..\..\..\..\common\include -I..\..\..\..\scpu\device\include\CMSIS -I..\..\..\..\scpu\device\include\Kneron -I..\..\..\..\scpu\framework\include -I..\..\..\..\scpu\framework\include\framework -I..\..\..\..\scpu\drivers\include -I..\..\..\..\scpu\drivers\include\media\touch -I..\..\..\..\scpu\drivers\include\media\flash -I..\..\..\..\scpu\lib\kdp_system\inc -I..\..\..\..\scpu\lib\kdp_application\include\ -I..\..\..\..\scpu\lib\kdp_application\base\ -I..\..\..\..\scpu\lib\kdp_application\misc -I..\..\..\..\scpu\lib\kdp_e2e_r1n1\include -I..\..\..\..\scpu\include -I..\..\..\..\scpu\middleware\ota -I..\..\..\..\scpu\middleware\comm -I..\..\..\..\scpu\middleware\kdp_comm -I..\..\..\..\scpu\share -I..\..\..\..\scpu\share\gui_lib -I..\..\user -I.\RTE\CMSIS -I.\RTE\_Target-scpu -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\RTX\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\Device\ARM\ARMCM4\Include -D__RTX -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DARMCM4_FP -D_RTE_ -DARM_MATH_CM4 -DTARGET_SCPU -DLOG_ENABLE -DKL520 -DHEAD_POSE_CHECK_PERCENT --omf_browse=.\objects\clock.crf ..\..\..\..\scpu\drivers\system\clock.c]
                          THUMB

                          AREA ||i.clk_control||, CODE, READONLY, ALIGN=2

                  clk_control PROC
;;;200    
;;;201    static void clk_control(enum clk clk, int enable)
000000  b510              PUSH     {r4,lr}
;;;202    {
;;;203        switch (clk) {
;;;204            case CLK_PLL1:
;;;205                SCU_EXTREG_PLL1_SETTING_SET_en(enable);
000002  4a99              LDR      r2,|L1.616|
000004  286d              CMP      r0,#0x6d              ;203
000006  d06f              BEQ      |L1.232|
000008  dc32              BGT      |L1.112|
00000a  2816              CMP      r0,#0x16              ;203
00000c  d06d              BEQ      |L1.234|
00000e  dc0f              BGT      |L1.48|
;;;206                break;
;;;207            case CLK_PLL2:
;;;208                SCU_EXTREG_PLL2_SETTING_SET_en(enable);
;;;209                break;
;;;210            case CLK_PLL3:
;;;211                SCU_EXTREG_PLL3_SETTING_SET_en(enable);
;;;212                break;
;;;213            case CLK_PLL4:
;;;214                SCU_EXTREG_PLL4_SETTING_SET_en(enable);
;;;215                break;
;;;216            case CLK_PLL5:
;;;217                SCU_EXTREG_PLL5_SETTING_SET_en(enable);
;;;218                break;
;;;219            case CLK_PLL1_OUT:
;;;220                SCU_EXTREG_CLK_EN0_SET_pll1_out(enable);
;;;221                break;
;;;222            case CLK_PLL2_OUT:
;;;223                SCU_EXTREG_CLK_EN0_SET_pll2_out(enable);
;;;224                break;
;;;225            case CLK_PLL3_OUT1:
;;;226                SCU_EXTREG_CLK_EN0_SET_pll3_out1(enable);
;;;227                break;
;;;228            case CLK_PLL3_OUT2:
;;;229                SCU_EXTREG_CLK_EN0_SET_pll3_out2(enable);
;;;230                break;
;;;231            case CLK_PLL4_OUT:
;;;232                SCU_EXTREG_CLK_EN0_SET_pll4_out1(enable);
;;;233                break;
;;;234            case CLK_PLL5_OUT1:
;;;235                SCU_EXTREG_CLK_EN0_SET_pll5_out1(enable);
;;;236                break;
;;;237            case CLK_PLL5_OUT2:
;;;238                SCU_EXTREG_CLK_EN0_SET_pll5_out2(enable);
;;;239                break;
;;;240    
;;;241            case CLK_SCPU_TRACE:
;;;242                SCU_EXTREG_CLK_EN0_SET_scpu_traceclk(enable);
;;;243                break;
;;;244    
;;;245            case CLK_NCPU:
;;;246                SCU_EXTREG_CLK_EN0_SET_ncpu_fclk_src(enable);
;;;247                break;
;;;248            case CLK_NCPU_TRACE:
;;;249                SCU_EXTREG_CLK_EN0_SET_ncpu_traceclk(enable);
;;;250                break;
;;;251    
;;;252            case CLK_NPU:
;;;253                SCU_EXTREG_CLK_EN1_SET_npu(enable);
;;;254                break;
;;;255    
;;;256            case CLK_PLL4_FREF_PLL0:
;;;257                SCU_EXTREG_CLK_EN0_SET_pll4_fref_pll0(enable);
;;;258                break;
;;;259            case CLK_FCS_PLL2:
;;;260                SCU_REG_PLL2_CTRL_SET_PLL2EN(enable);
000010  4b96              LDR      r3,|L1.620|
000012  2816              CMP      r0,#0x16              ;203
000014  d243              BCS      |L1.158|
000016  e8dff000          TBB      [pc,r0]               ;203
00001a  423e              DCB      0x42,0x3e
00001c  57435b48          DCB      0x57,0x43,0x5b,0x48
000020  5f634d69          DCB      0x5f,0x63,0x4d,0x69
000024  526d7142          DCB      0x52,0x6d,0x71,0x42
000028  42424242          DCB      0x42,0x42,0x42,0x42
00002c  4242888e          DCB      0x42,0x42,0x88,0x8e
                  |L1.48|
000030  2866              CMP      r0,#0x66              ;203
000032  d06f              BEQ      |L1.276|
000034  dc14              BGT      |L1.96|
000036  283e              CMP      r0,#0x3e              ;203
000038  d06e              BEQ      |L1.280|
00003a  dc09              BGT      |L1.80|
00003c  2833              CMP      r0,#0x33              ;203
00003e  d061              BEQ      |L1.260|
000040  283c              CMP      r0,#0x3c              ;203
000042  d063              BEQ      |L1.268|
000044  283d              CMP      r0,#0x3d              ;203
000046  d12a              BNE      |L1.158|
000048  6950              LDR      r0,[r2,#0x14]         ;249
00004a  f3616018          BFI      r0,r1,#24,#1          ;249
00004e  e06a              B        |L1.294|
                  |L1.80|
000050  2864              CMP      r0,#0x64              ;203
000052  d075              BEQ      |L1.320|
000054  2865              CMP      r0,#0x65              ;203
000056  d122              BNE      |L1.158|
;;;261                break;
;;;262            case CLK_FCS_DLL:
;;;263                SCU_REG_DLL_CTRL_SET_DLLEN(enable);
;;;264                break;
;;;265    
;;;266            case CLK_SPI_CLK:
;;;267                SCU_EXTREG_CLK_EN1_SET_spi_clk(enable);
;;;268                break;
;;;269            case CLK_ADC_CLK:
;;;270                SCU_EXTREG_CLK_EN1_SET_adcclk(enable);
000058  6990              LDR      r0,[r2,#0x18]
00005a  f3615096          BFI      r0,r1,#22,#1
;;;271                break;
00005e  e0aa              B        |L1.438|
                  |L1.96|
000060  3867              SUBS     r0,r0,#0x67
000062  2806              CMP      r0,#6                 ;203
000064  d21b              BCS      |L1.158|
000066  e8dff000          TBB      [pc,r0]               ;203
00006a  7377              DCB      0x73,0x77
00006c  7b7f8387          DCB      0x7b,0x7f,0x83,0x87
                  |L1.112|
000070  386e              SUBS     r0,r0,#0x6e           ;203
000072  281b              CMP      r0,#0x1b              ;203
000074  d213              BCS      |L1.158|
000076  e8dff000          TBB      [pc,r0]               ;203
00007a  878b              DCB      0x87,0x8b
00007c  8f93979b          DCB      0x8f,0x93,0x97,0x9b
000080  a0a4a8ac          DCB      0xa0,0xa4,0xa8,0xac
000084  b0b4b8bc          DCB      0xb0,0xb4,0xb8,0xbc
000088  c0c4c8cc          DCB      0xc0,0xc4,0xc8,0xcc
00008c  d0d4d8dc          DCB      0xd0,0xd4,0xd8,0xdc
000090  e0e4e8ec          DCB      0xe0,0xe4,0xe8,0xec
000094  f100              DCB      0xf1,0x00
000096  6850              LDR      r0,[r2,#4]            ;205
000098  f3610000          BFI      r0,r1,#0,#1           ;205
00009c  6050              STR      r0,[r2,#4]            ;205
                  |L1.158|
;;;272            case CLK_WDT_EXT_CLK:
;;;273                SCU_EXTREG_CLK_EN1_SET_wdt_extclk(enable);
;;;274                break;
;;;275            case CLK_SD_CLK:
;;;276                SCU_EXTREG_CLK_EN1_SET_sdclk(enable);
;;;277                break;
;;;278            case CLK_MIPI_TXHSPLLREF_CLK:
;;;279                SCU_EXTREG_CLK_EN1_SET_TxHsPllRefClk(enable);
;;;280                break;
;;;281            case CLK_MIPI_TX_ESC_CLK:
;;;282                SCU_EXTREG_CLK_EN1_SET_tx_EscClk(enable);
;;;283                break;
;;;284            case CLK_MIPI_CSITX_DSI_CLK:
;;;285                SCU_EXTREG_CLK_EN1_SET_csitx_dsi(enable);
;;;286                break;
;;;287            case CLK_MIPI_CSITX_CSI_CLK:
;;;288                SCU_EXTREG_CLK_EN1_SET_csitx_csi(enable);
;;;289                break;
;;;290            case CLK_MIPI_CSIRX1_TXESC_CLK:
;;;291                SCU_EXTREG_CLK_EN1_SET_csirx1_TxEscClk(enable);
;;;292                break;
;;;293            case CLK_MIPI_CSIRX1_CSI_CLK:
;;;294                SCU_EXTREG_CLK_EN1_SET_csirx1_csi(enable);
;;;295                break;
;;;296            case CLK_MIPI_CSIRX1_VC0_CLK:
;;;297                SCU_EXTREG_CLK_EN1_SET_csirx1_vc0(enable);
;;;298                break;
;;;299            case CLK_MIPI_CSIRX0_TXESC_CLK:
;;;300                SCU_EXTREG_CLK_EN1_SET_csirx0_TxEscClk(enable);
;;;301                break;
;;;302            case CLK_MIPI_CSIRX0_CSI_CLK:
;;;303                SCU_EXTREG_CLK_EN1_SET_csirx0_csi(enable);
;;;304                break;
;;;305            case CLK_MIPI_CSIRX0_VC0_CLK:
;;;306                SCU_EXTREG_CLK_EN1_SET_csirx0_vc0(enable);
;;;307                break;
;;;308            case CLK_LC_SCALER:
;;;309                SCU_EXTREG_CLK_EN1_SET_LC_SCALER(enable);
;;;310                break;
;;;311            case CLK_LC_CLK:
;;;312                SCU_EXTREG_CLK_EN1_SET_LC_CLK(enable);
;;;313                break;
;;;314            case CLK_TMR1_EXTCLK3:
;;;315                SCU_EXTREG_CLK_EN2_SET_tmr1_extclk3(enable);
;;;316                break;
;;;317            case CLK_TMR1_EXTCLK2:
;;;318                SCU_EXTREG_CLK_EN2_SET_tmr1_extclk2(enable);
;;;319                break;
;;;320            case CLK_TMR1_EXTCLK1:
;;;321                SCU_EXTREG_CLK_EN2_SET_tmr1_extclk1(enable);
;;;322                break;
;;;323            case CLK_TMR0_EXTCLK3:
;;;324                SCU_EXTREG_CLK_EN2_SET_tmr0_extclk3(enable);
;;;325                break;
;;;326            case CLK_TMR0_EXTCLK2:
;;;327                SCU_EXTREG_CLK_EN2_SET_tmr0_extclk2(enable);
;;;328                break;
;;;329            case CLK_TMR0_EXTCLK1:
;;;330                SCU_EXTREG_CLK_EN2_SET_tmr0_extclk1(enable);
;;;331                break;
;;;332            case CLK_PWM_EXTCLK6:
;;;333                SCU_EXTREG_CLK_EN2_SET_pwm_extclk6(enable);
;;;334                break;
;;;335            case CLK_PWM_EXTCLK5:
;;;336                SCU_EXTREG_CLK_EN2_SET_pwm_extclk5(enable);
;;;337                break;
;;;338            case CLK_PWM_EXTCLK4:
;;;339                SCU_EXTREG_CLK_EN2_SET_pwm_extclk4(enable);
;;;340                break;
;;;341            case CLK_PWM_EXTCLK3:
;;;342                SCU_EXTREG_CLK_EN2_SET_pwm_extclk3(enable);
;;;343                break;
;;;344            case CLK_PWM_EXTCLK2:
;;;345                SCU_EXTREG_CLK_EN2_SET_pwm_extclk2(enable);
;;;346                break;
;;;347            case CLK_PWM_EXTCLK1:
;;;348                SCU_EXTREG_CLK_EN2_SET_pwm_extclk1(enable);
;;;349                break;
;;;350            case CLK_UART1_3_FREF:
;;;351                SCU_EXTREG_CLK_EN2_SET_uart1_3_fref(enable);
;;;352                break;
;;;353            case CLK_UART1_2_FREF:
;;;354                SCU_EXTREG_CLK_EN2_SET_uart1_2_fref(enable);
;;;355                break;
;;;356            case CLK_UART1_1_FREF:
;;;357                SCU_EXTREG_CLK_EN2_SET_uart1_1_fref(enable);
;;;358                break;
;;;359            case CLK_UART1_0_FREF:
;;;360                SCU_EXTREG_CLK_EN2_SET_uart1_0_fref(enable);
;;;361                break;
;;;362            case CLK_UART0_FREF:
;;;363                SCU_EXTREG_CLK_EN2_SET_uart0_fref(enable);
;;;364                break;
;;;365            case CLK_SSP1_1_SSPCLK:
;;;366                SCU_EXTREG_CLK_EN2_SET_ssp1_1_sspclk(enable);
;;;367                break;
;;;368            case CLK_SSP1_0_SSPCLK:
;;;369                SCU_EXTREG_CLK_EN2_SET_ssp1_0_sspclk(enable);
;;;370                break;
;;;371            case CLK_SSP0_1_SSPCLK:
;;;372                SCU_EXTREG_CLK_EN2_SET_ssp0_1_sspclk(enable);
;;;373                break;
;;;374            case CLK_SSP0_0_SSPCLK:
;;;375                SCU_EXTREG_CLK_EN2_SET_ssp0_0_sspclk(enable);
;;;376                break;
;;;377        }
;;;378    }
00009e  bd10              POP      {r4,pc}
0000a0  6890              LDR      r0,[r2,#8]            ;208
0000a2  f3610000          BFI      r0,r1,#0,#1           ;208
0000a6  6090              STR      r0,[r2,#8]            ;208
0000a8  bd10              POP      {r4,pc}
0000aa  68d0              LDR      r0,[r2,#0xc]          ;211
0000ac  f3610000          BFI      r0,r1,#0,#1           ;211
0000b0  60d0              STR      r0,[r2,#0xc]          ;211
0000b2  bd10              POP      {r4,pc}
0000b4  6910              LDR      r0,[r2,#0x10]         ;214
0000b6  f3610000          BFI      r0,r1,#0,#1           ;214
0000ba  6110              STR      r0,[r2,#0x10]         ;214
0000bc  bd10              POP      {r4,pc}
0000be  6bd0              LDR      r0,[r2,#0x3c]         ;217
0000c0  f3610000          BFI      r0,r1,#0,#1           ;217
0000c4  63d0              STR      r0,[r2,#0x3c]         ;217
0000c6  bd10              POP      {r4,pc}
0000c8  6950              LDR      r0,[r2,#0x14]         ;220
0000ca  f3610041          BFI      r0,r1,#1,#1           ;220
0000ce  e02a              B        |L1.294|
0000d0  6950              LDR      r0,[r2,#0x14]         ;223
0000d2  f3610082          BFI      r0,r1,#2,#1           ;223
0000d6  e026              B        |L1.294|
0000d8  6950              LDR      r0,[r2,#0x14]         ;226
0000da  f3611004          BFI      r0,r1,#4,#1           ;226
0000de  e022              B        |L1.294|
0000e0  6950              LDR      r0,[r2,#0x14]         ;229
0000e2  f3611045          BFI      r0,r1,#5,#1           ;229
0000e6  e01e              B        |L1.294|
                  |L1.232|
0000e8  e04a              B        |L1.384|
                  |L1.234|
0000ea  e019              B        |L1.288|
0000ec  6950              LDR      r0,[r2,#0x14]         ;232
0000ee  f3611086          BFI      r0,r1,#6,#1           ;232
0000f2  e018              B        |L1.294|
0000f4  6950              LDR      r0,[r2,#0x14]         ;235
0000f6  f3612008          BFI      r0,r1,#8,#1           ;235
0000fa  e014              B        |L1.294|
0000fc  6950              LDR      r0,[r2,#0x14]         ;238
0000fe  f3612049          BFI      r0,r1,#9,#1           ;238
000102  e010              B        |L1.294|
                  |L1.260|
000104  6950              LDR      r0,[r2,#0x14]         ;242
000106  f36150d7          BFI      r0,r1,#23,#1          ;242
00010a  e00c              B        |L1.294|
                  |L1.268|
00010c  6950              LDR      r0,[r2,#0x14]         ;246
00010e  f3615096          BFI      r0,r1,#22,#1          ;246
000112  e008              B        |L1.294|
                  |L1.276|
000114  e018              B        |L1.328|
000116  e7ff              B        |L1.280|
                  |L1.280|
000118  6990              LDR      r0,[r2,#0x18]         ;253
00011a  f36150d7          BFI      r0,r1,#23,#1          ;253
00011e  e04a              B        |L1.438|
                  |L1.288|
000120  6950              LDR      r0,[r2,#0x14]         ;257
000122  f361300c          BFI      r0,r1,#12,#1          ;257
                  |L1.294|
000126  6150              STR      r0,[r2,#0x14]         ;257
000128  bd10              POP      {r4,pc}
00012a  6c18              LDR      r0,[r3,#0x40]         ;260
00012c  f3610000          BFI      r0,r1,#0,#1           ;260
000130  6418              STR      r0,[r3,#0x40]         ;260
                  |L1.306|
000132  bd10              POP      {r4,pc}
000134  e004              B        |L1.320|
000136  6c58              LDR      r0,[r3,#0x44]         ;263
000138  f3610000          BFI      r0,r1,#0,#1           ;263
00013c  6458              STR      r0,[r3,#0x44]         ;263
00013e  e7f8              B        |L1.306|
                  |L1.320|
000140  6990              LDR      r0,[r2,#0x18]         ;267
000142  f3616018          BFI      r0,r1,#24,#1          ;267
000146  e036              B        |L1.438|
                  |L1.328|
000148  6990              LDR      r0,[r2,#0x18]         ;273
00014a  f3615055          BFI      r0,r1,#21,#1          ;273
00014e  e032              B        |L1.438|
000150  6990              LDR      r0,[r2,#0x18]         ;276
000152  f3615014          BFI      r0,r1,#20,#1          ;276
000156  e02e              B        |L1.438|
000158  6990              LDR      r0,[r2,#0x18]         ;279
00015a  f3614010          BFI      r0,r1,#16,#1          ;279
00015e  e02a              B        |L1.438|
000160  6990              LDR      r0,[r2,#0x18]         ;282
000162  f361308e          BFI      r0,r1,#14,#1          ;282
000166  e026              B        |L1.438|
000168  6990              LDR      r0,[r2,#0x18]         ;285
00016a  f361304d          BFI      r0,r1,#13,#1          ;285
00016e  e022              B        |L1.438|
000170  6990              LDR      r0,[r2,#0x18]         ;288
000172  f361300c          BFI      r0,r1,#12,#1          ;288
000176  e01e              B        |L1.438|
000178  6990              LDR      r0,[r2,#0x18]         ;291
00017a  f361208a          BFI      r0,r1,#10,#1          ;291
00017e  e01a              B        |L1.438|
                  |L1.384|
000180  6990              LDR      r0,[r2,#0x18]         ;294
000182  f3612049          BFI      r0,r1,#9,#1           ;294
000186  e016              B        |L1.438|
000188  6990              LDR      r0,[r2,#0x18]         ;297
00018a  f3612008          BFI      r0,r1,#8,#1           ;297
00018e  e012              B        |L1.438|
000190  6990              LDR      r0,[r2,#0x18]         ;300
000192  f3611086          BFI      r0,r1,#6,#1           ;300
000196  e00e              B        |L1.438|
000198  6990              LDR      r0,[r2,#0x18]         ;303
00019a  f3611045          BFI      r0,r1,#5,#1           ;303
00019e  e00a              B        |L1.438|
0001a0  6990              LDR      r0,[r2,#0x18]         ;306
0001a2  f3611004          BFI      r0,r1,#4,#1           ;306
0001a6  e006              B        |L1.438|
0001a8  6990              LDR      r0,[r2,#0x18]         ;309
0001aa  f3610041          BFI      r0,r1,#1,#1           ;309
0001ae  e002              B        |L1.438|
0001b0  6990              LDR      r0,[r2,#0x18]         ;312
0001b2  f3610000          BFI      r0,r1,#0,#1           ;312
                  |L1.438|
0001b6  6190              STR      r0,[r2,#0x18]         ;312
0001b8  e7bb              B        |L1.306|
0001ba  69d0              LDR      r0,[r2,#0x1c]         ;315
0001bc  f361705d          BFI      r0,r1,#29,#1          ;315
0001c0  e04f              B        |L1.610|
0001c2  69d0              LDR      r0,[r2,#0x1c]         ;318
0001c4  f361701c          BFI      r0,r1,#28,#1          ;318
0001c8  e04b              B        |L1.610|
0001ca  69d0              LDR      r0,[r2,#0x1c]         ;321
0001cc  f36160db          BFI      r0,r1,#27,#1          ;321
0001d0  e047              B        |L1.610|
0001d2  69d0              LDR      r0,[r2,#0x1c]         ;324
0001d4  f361609a          BFI      r0,r1,#26,#1          ;324
0001d8  e043              B        |L1.610|
0001da  69d0              LDR      r0,[r2,#0x1c]         ;327
0001dc  f3616059          BFI      r0,r1,#25,#1          ;327
0001e0  e03f              B        |L1.610|
0001e2  69d0              LDR      r0,[r2,#0x1c]         ;330
0001e4  f3616018          BFI      r0,r1,#24,#1          ;330
0001e8  e03b              B        |L1.610|
0001ea  69d0              LDR      r0,[r2,#0x1c]         ;333
0001ec  f3615055          BFI      r0,r1,#21,#1          ;333
0001f0  e037              B        |L1.610|
0001f2  69d0              LDR      r0,[r2,#0x1c]         ;336
0001f4  f3615014          BFI      r0,r1,#20,#1          ;336
0001f8  e033              B        |L1.610|
0001fa  69d0              LDR      r0,[r2,#0x1c]         ;339
0001fc  f36140d3          BFI      r0,r1,#19,#1          ;339
000200  e02f              B        |L1.610|
000202  69d0              LDR      r0,[r2,#0x1c]         ;342
000204  f3614092          BFI      r0,r1,#18,#1          ;342
000208  e02b              B        |L1.610|
00020a  69d0              LDR      r0,[r2,#0x1c]         ;345
00020c  f3614051          BFI      r0,r1,#17,#1          ;345
000210  e027              B        |L1.610|
000212  69d0              LDR      r0,[r2,#0x1c]         ;348
000214  f3614010          BFI      r0,r1,#16,#1          ;348
000218  e023              B        |L1.610|
00021a  69d0              LDR      r0,[r2,#0x1c]         ;351
00021c  f36130cf          BFI      r0,r1,#15,#1          ;351
000220  e01f              B        |L1.610|
000222  69d0              LDR      r0,[r2,#0x1c]         ;354
000224  f361308e          BFI      r0,r1,#14,#1          ;354
000228  e01b              B        |L1.610|
00022a  69d0              LDR      r0,[r2,#0x1c]         ;357
00022c  f361304d          BFI      r0,r1,#13,#1          ;357
000230  e017              B        |L1.610|
000232  69d0              LDR      r0,[r2,#0x1c]         ;360
000234  f361300c          BFI      r0,r1,#12,#1          ;360
000238  e013              B        |L1.610|
00023a  69d0              LDR      r0,[r2,#0x1c]         ;363
00023c  f3612008          BFI      r0,r1,#8,#1           ;363
000240  e00f              B        |L1.610|
000242  69d0              LDR      r0,[r2,#0x1c]         ;366
000244  f3611086          BFI      r0,r1,#6,#1           ;366
000248  e00b              B        |L1.610|
00024a  69d0              LDR      r0,[r2,#0x1c]         ;369
00024c  f3611004          BFI      r0,r1,#4,#1           ;369
000250  e007              B        |L1.610|
000252  69d0              LDR      r0,[r2,#0x1c]         ;372
000254  f3610082          BFI      r0,r1,#2,#1           ;372
000258  e003              B        |L1.610|
00025a  e7ff              B        |L1.604|
                  |L1.604|
00025c  69d0              LDR      r0,[r2,#0x1c]         ;375
00025e  f3610000          BFI      r0,r1,#0,#1           ;375
                  |L1.610|
000262  61d0              STR      r0,[r2,#0x1c]         ;375
000264  e765              B        |L1.306|
;;;379    
                          ENDP

000266  0000              DCW      0x0000
                  |L1.616|
                          DCD      0xc2380000
                  |L1.620|
                          DCD      0xc2300000

                          AREA ||i.clk_disable||, CODE, READONLY, ALIGN=1

                  clk_disable PROC
;;;384    
;;;385    void clk_disable(enum clk clk)
000000  2100              MOVS     r1,#0
;;;386    {
;;;387        clk_control(clk, 0);
000002  f7ffbffe          B.W      clk_control
;;;388    }
;;;389    
                          ENDP


                          AREA ||i.clk_enable||, CODE, READONLY, ALIGN=1

                  clk_enable PROC
;;;379    
;;;380    void clk_enable(enum clk clk)
000000  2101              MOVS     r1,#1
;;;381    {
;;;382        clk_control(clk, 1);
000002  f7ffbffe          B.W      clk_control
;;;383    }
;;;384    
                          ENDP


                          AREA ||i.clock_mgr_change_pll3_clock||, CODE, READONLY, ALIGN=2

                  clock_mgr_change_pll3_clock PROC
;;;77     //        u32 csi1_txesc, u32 csi1_csi, u32 csi1_vc0)
;;;78     void clock_mgr_change_pll3_clock(u16 *pll_table)
000000  b510              PUSH     {r4,lr}
;;;79     {
;;;80     #if 1//def PLL3_INITED_IN_SYTEM_INIT    
;;;81         // Set the new M/N/P values.
;;;82         masked_outw(SCU_EXTREG_PLL3_SETTING, 
000002  7901              LDRB     r1,[r0,#4]
000004  8842              LDRH     r2,[r0,#2]
000006  0609              LSLS     r1,r1,#24
000008  ea413102          ORR      r1,r1,r2,LSL #12
00000c  8802              LDRH     r2,[r0,#0]
00000e  ea412102          ORR      r1,r1,r2,LSL #8
000012  f041025c          ORR      r2,r1,#0x5c
000016  491b              LDR      r1,|L4.132|
000018  400a              ANDS     r2,r2,r1
00001a  491b              LDR      r1,|L4.136|
00001c  68cb              LDR      r3,[r1,#0xc]
00001e  4c19              LDR      r4,|L4.132|
000020  43e4              MVNS     r4,r4
000022  4023              ANDS     r3,r3,r4
000024  431a              ORRS     r2,r2,r3
000026  60ca              STR      r2,[r1,#0xc]
;;;83                     ((pll_table[PLL_PS] << SCU_EXTREG_PLL3_SETTING_ps_START) | 
;;;84                      (pll_table[PLL_NS] << SCU_EXTREG_PLL3_SETTING_ns_START) | 
;;;85                      (pll_table[PLL_MS] << SCU_EXTREG_PLL3_SETTING_ms_START) | 
;;;86                      (5 << SCU_EXTREG_PLL3_SETTING_is_START) | 
;;;87                      (3 << SCU_EXTREG_PLL3_SETTING_rs_START)),
;;;88         
;;;89                     (SCU_EXTREG_PLL3_SETTING_ps_MASK | SCU_EXTREG_PLL3_SETTING_ns_MASK |
;;;90                      SCU_EXTREG_PLL3_SETTING_ms_MASK | SCU_EXTREG_PLL3_SETTING_is_MASK |
;;;91                      SCU_EXTREG_PLL3_SETTING_rs_MASK));
;;;92         
;;;93         //divider
;;;94         {            
;;;95             SCU_EXTREG_CLK_DIV1_SET_csirx0_TxEscClk(pll_table[CSIRX0_TXESCCLK]);
000028  7983              LDRB     r3,[r0,#6]
00002a  6a8a              LDR      r2,[r1,#0x28]
00002c  f363721f          BFI      r2,r3,#28,#4
000030  628a              STR      r2,[r1,#0x28]
;;;96             SCU_EXTREG_CLK_DIV1_SET_csirx0_csi(pll_table[CSIRX0_CSI]);
000032  6a8a              LDR      r2,[r1,#0x28]
000034  8903              LDRH     r3,[r0,#8]
000036  f02272f8          BIC      r2,r2,#0x1f00000
00003a  ea425203          ORR      r2,r2,r3,LSL #20
00003e  628a              STR      r2,[r1,#0x28]
;;;97             SCU_EXTREG_CLK_DIV1_SET_csirx0_vc0(pll_table[CSIRX0_VC0]);
000040  6a8a              LDR      r2,[r1,#0x28]
000042  8943              LDRH     r3,[r0,#0xa]
000044  f42232f8          BIC      r2,r2,#0x1f000
000048  ea423203          ORR      r2,r2,r3,LSL #12
00004c  628a              STR      r2,[r1,#0x28]
;;;98     
;;;99             SCU_EXTREG_CLK_DIV7_SET_csirx1_TxEscClk_pll3(pll_table[CSIRX1_TXESCCLK]);
00004e  f8d120d4          LDR      r2,[r1,#0xd4]
000052  8983              LDRH     r3,[r0,#0xc]
000054  f4222270          BIC      r2,r2,#0xf0000
000058  ea424203          ORR      r2,r2,r3,LSL #16
00005c  f8c120d4          STR      r2,[r1,#0xd4]
;;;100            SCU_EXTREG_CLK_DIV7_SET_csi1_csi_pll3(pll_table[CSIRX1_CSI]);
000060  f8d120d4          LDR      r2,[r1,#0xd4]
000064  89c3              LDRH     r3,[r0,#0xe]
000066  f42252f8          BIC      r2,r2,#0x1f00
00006a  ea422203          ORR      r2,r2,r3,LSL #8
00006e  f8c120d4          STR      r2,[r1,#0xd4]
;;;101            SCU_EXTREG_CLK_DIV7_SET_csi1_vc0_pll3(pll_table[CSIRX1_VC0]);
000072  f8d120d4          LDR      r2,[r1,#0xd4]
000076  8a00              LDRH     r0,[r0,#0x10]
000078  f022021f          BIC      r2,r2,#0x1f
00007c  4302              ORRS     r2,r2,r0
00007e  f8c120d4          STR      r2,[r1,#0xd4]
;;;102        }
;;;103        
;;;104    #else    
;;;105        SCU_EXTREG_CLK_EN1_SET_csirx0_TxEscClk(0);
;;;106        SCU_EXTREG_CLK_EN1_SET_csirx0_vc0(0);
;;;107        SCU_EXTREG_CLK_EN1_SET_csirx0_csi(0);
;;;108        
;;;109        // Disable PLL output (clock gated)
;;;110        SCU_EXTREG_CLK_EN0_SET_pll3_out2(0);
;;;111        SCU_EXTREG_CLK_EN0_SET_pll3_out1(0);
;;;112    
;;;113        // Power down PLL.
;;;114        SCU_EXTREG_PLL3_SETTING_SET_en(0);
;;;115        
;;;116    
;;;117        // Set the new M/N/P values.
;;;118        masked_outw(SCU_EXTREG_PLL3_SETTING, 
;;;119                    ((ps << SCU_EXTREG_PLL3_SETTING_ps_START) | 
;;;120                     (ns << SCU_EXTREG_PLL3_SETTING_ns_START) | 
;;;121                     (ms << SCU_EXTREG_PLL3_SETTING_ms_START) | 
;;;122                     (5 << SCU_EXTREG_PLL3_SETTING_is_START) | 
;;;123                     (3 << SCU_EXTREG_PLL3_SETTING_rs_START)),
;;;124        
;;;125                    (SCU_EXTREG_PLL3_SETTING_ps_MASK | SCU_EXTREG_PLL3_SETTING_ns_MASK |
;;;126                     SCU_EXTREG_PLL3_SETTING_ms_MASK | SCU_EXTREG_PLL3_SETTING_is_MASK |
;;;127                     SCU_EXTREG_PLL3_SETTING_rs_MASK));    
;;;128        
;;;129    //dbg_msg("SCU_EXTREG_PLL3_SETTING_GET_ps()=%x", SCU_EXTREG_PLL3_SETTING_GET_ps());
;;;130    //dbg_msg("SCU_EXTREG_PLL3_SETTING_GET_ns()=%x", SCU_EXTREG_PLL3_SETTING_GET_ns());
;;;131    //dbg_msg("SCU_EXTREG_PLL3_SETTING_GET_ms()=%x", SCU_EXTREG_PLL3_SETTING_GET_ms());
;;;132    //dbg_msg("SCU_EXTREG_PLL3_SETTING_GET_is()=%x", SCU_EXTREG_PLL3_SETTING_GET_is());
;;;133    //dbg_msg("SCU_EXTREG_PLL3_SETTING_GET_rs()=%x", SCU_EXTREG_PLL3_SETTING_GET_rs());
;;;134        
;;;135        // For PLL510 series, wait for 40us reset time
;;;136        delay_us(40);
;;;137    
;;;138        // Enable PLL.
;;;139        SCU_EXTREG_PLL3_SETTING_SET_en(1);
;;;140    
;;;141        // Wait for PLL locking time. (PLL110: 50us, PLL510: 350us)
;;;142        delay_us(350);
;;;143        
;;;144        //SCU_EXTREG_CLK_MUX_SEL_SET_csirx1_clk(1);
;;;145    
;;;146    	//divider
;;;147        SCU_EXTREG_CLK_DIV1_SET_csirx0_TxEscClk(5);
;;;148        SCU_EXTREG_CLK_DIV1_SET_csirx0_csi(0x1b);
;;;149        SCU_EXTREG_CLK_DIV1_SET_csirx0_vc0(0x0d);
;;;150    
;;;151        //SCU_EXTREG_CLK_DIV7_SET_csirx1_TxEscClk_pll3(5);
;;;152        //SCU_EXTREG_CLK_DIV7_SET_csi1_csi_pll3(15);
;;;153        //SCU_EXTREG_CLK_DIV7_SET_csi1_vc0_pll3(4);
;;;154    
;;;155        // Enable PLL output.
;;;156        SCU_EXTREG_CLK_EN0_SET_pll3_out2(1);
;;;157        SCU_EXTREG_CLK_EN0_SET_pll3_out1(1);
;;;158        
;;;159        SCU_EXTREG_CLK_EN1_SET_csirx0_TxEscClk(1);
;;;160        SCU_EXTREG_CLK_EN1_SET_csirx0_vc0(1);
;;;161        SCU_EXTREG_CLK_EN1_SET_csirx0_csi(1);
;;;162    #endif    
;;;163    }
000082  bd10              POP      {r4,pc}
;;;164    
                          ENDP

                  |L4.132|
                          DCD      0x1f1ff77c
                  |L4.136|
                          DCD      0xc2380000

                          AREA ||i.clock_mgr_change_pll5_clock||, CODE, READONLY, ALIGN=2

                  clock_mgr_change_pll5_clock PROC
;;;164    
;;;165    void clock_mgr_change_pll5_clock(u32 ms, u32 ns, u32 ps)
000000  b510              PUSH     {r4,lr}
;;;166    {
;;;167        // Disable PLL output (clock gated)
;;;168    
;;;169        SCU_EXTREG_CLK_EN0_SET_pll5_out2(0);
000002  4c16              LDR      r4,|L5.92|
000004  6963              LDR      r3,[r4,#0x14]
000006  f4237300          BIC      r3,r3,#0x200
00000a  6163              STR      r3,[r4,#0x14]
;;;170        SCU_EXTREG_CLK_EN0_SET_pll5_out1(0);
00000c  6963              LDR      r3,[r4,#0x14]
00000e  f4237380          BIC      r3,r3,#0x100
000012  6163              STR      r3,[r4,#0x14]
;;;171    
;;;172        // Power down PLL.
;;;173        SCU_EXTREG_PLL5_SETTING_SET_en(0);    
000014  6be3              LDR      r3,[r4,#0x3c]
000016  f0230301          BIC      r3,r3,#1
00001a  63e3              STR      r3,[r4,#0x3c]
;;;174    
;;;175        // Set the new M/N/P values.
;;;176        masked_outw(SCU_EXTREG_PLL5_SETTING, 
00001c  0612              LSLS     r2,r2,#24
00001e  ea423101          ORR      r1,r2,r1,LSL #12
000022  ea412000          ORR      r0,r1,r0,LSL #8
000026  6be1              LDR      r1,[r4,#0x3c]
000028  4a0d              LDR      r2,|L5.96|
00002a  4011              ANDS     r1,r1,r2
00002c  4308              ORRS     r0,r0,r1
00002e  f040005c          ORR      r0,r0,#0x5c
000032  63e0              STR      r0,[r4,#0x3c]
;;;177                    (ps << SCU_EXTREG_PLL5_SETTING_ps_START) | 
;;;178                    (ns << SCU_EXTREG_PLL5_SETTING_ns_START) | 
;;;179                    (ms << SCU_EXTREG_PLL5_SETTING_ms_START) | 
;;;180                    (5 << SCU_EXTREG_PLL5_SETTING_is_START) | 
;;;181                    (3 << SCU_EXTREG_PLL5_SETTING_rs_START),
;;;182        
;;;183                    (SCU_EXTREG_PLL5_SETTING_ps_MASK | SCU_EXTREG_PLL5_SETTING_ns_MASK |
;;;184                    SCU_EXTREG_PLL5_SETTING_ms_MASK | SCU_EXTREG_PLL5_SETTING_is_MASK |
;;;185                    SCU_EXTREG_PLL5_SETTING_rs_MASK));
;;;186    
;;;187        // For PLL510 series, wait for 40us reset time
;;;188        delay_us(40);
000034  2028              MOVS     r0,#0x28
000036  f7fffffe          BL       delay_us
;;;189    
;;;190        // Enable PLL.
;;;191        SCU_EXTREG_PLL5_SETTING_SET_en(1);
00003a  6be0              LDR      r0,[r4,#0x3c]
00003c  f0400001          ORR      r0,r0,#1
000040  63e0              STR      r0,[r4,#0x3c]
;;;192    
;;;193        // Wait for PLL locking time. (PLL110: 50us, PLL510: 350us)
;;;194        delay_us(350);
000042  f44f70af          MOV      r0,#0x15e
000046  f7fffffe          BL       delay_us
;;;195    
;;;196        // Enable PLL output.  
;;;197        SCU_EXTREG_CLK_EN0_SET_pll5_out2(1);
00004a  6960              LDR      r0,[r4,#0x14]
00004c  f4407000          ORR      r0,r0,#0x200
000050  6160              STR      r0,[r4,#0x14]
;;;198        SCU_EXTREG_CLK_EN0_SET_pll5_out1(1); 
000052  6960              LDR      r0,[r4,#0x14]
000054  f4407080          ORR      r0,r0,#0x100
000058  6160              STR      r0,[r4,#0x14]
;;;199    }
00005a  bd10              POP      {r4,pc}
;;;200    
                          ENDP

                  |L5.92|
                          DCD      0xc2380000
                  |L5.96|
                          DCD      0xe0e00883

                          AREA ||i.clock_mgr_init||, CODE, READONLY, ALIGN=2

                  clock_mgr_init PROC
;;;49     
;;;50     void clock_mgr_init() 
000000  4801              LDR      r0,|L6.8|
;;;51     {
;;;52         clock_mgr_set_muxsel(CLOCK_MUXSEL_CSIRX1_CLK_PLL3 | /* CLOCK_MUXSEL_CSIRX1_CLK_PLL5 */
000002  f7ffbffe          B.W      clock_mgr_set_muxsel
;;;53                              CLOCK_MUXSEL_NPU_CLK_PLL4 |
;;;54                              CLOCK_MUXSEL_PLL4_FREF_PLL0DIV |
;;;55                              CLOCK_MUXSEL_UART_0_IRDA_UCLK_UART);      
;;;56     }
;;;57     void clock_mgr_set_scuclkin(enum scuclkin_type type, BOOL enable) 
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      0x00211100

                          AREA ||i.clock_mgr_set_muxsel||, CODE, READONLY, ALIGN=2

                  clock_mgr_set_muxsel PROC
;;;18     
;;;19     void clock_mgr_set_muxsel(u32 flags)
000000  2100              MOVS     r1,#0
;;;20     {
;;;21         u32 val = 0;
;;;22         if (CLOCK_MUXSEL_NCPU_TRACECLK_FROM_SCPU_TRACECLK == (flags & CLOCK_MUXSEL_NCPU_TRACECLK_MASK))
000002  f3c07201          UBFX     r2,r0,#28,#2
000006  2a02              CMP      r2,#2
000008  d100              BNE      |L7.12|
;;;23             val |= BIT14;
00000a  0351              LSLS     r1,r2,#13
                  |L7.12|
;;;24         if (CLOCK_MUXSEL_SCPU_TRACECLK_SRC_PLL0DIV2 == (flags & CLOCK_MUXSEL_SCPU_TRACECLK_MASK))
00000c  f3c06201          UBFX     r2,r0,#24,#2
000010  2a02              CMP      r2,#2
000012  d101              BNE      |L7.24|
;;;25             val |= BIT13;
000014  f4415100          ORR      r1,r1,#0x2000
                  |L7.24|
;;;26         if (CLOCK_MUXSEL_CSIRX1_CLK_PLL3 == (flags & CLOCK_MUXSEL_CSIRX1_CLK_MASK))
000018  f3c05201          UBFX     r2,r0,#20,#2
00001c  2a02              CMP      r2,#2
00001e  d101              BNE      |L7.36|
;;;27             val |= BIT12;
000020  f4415180          ORR      r1,r1,#0x1000
                  |L7.36|
;;;28     
;;;29         switch (flags & CLOCK_MUXSEL_CSIRX1_CLK_MASK) {
000024  f4001240          AND      r2,r0,#0x300000
000028  f5b23f80          CMP      r2,#0x10000
00002c  d00b              BEQ      |L7.70|
00002e  f5b23f00          CMP      r2,#0x20000
000032  d005              BEQ      |L7.64|
000034  f5b22f80          CMP      r2,#0x40000
000038  d107              BNE      |L7.74|
;;;30             case CLOCK_MUXSEL_NPU_CLK_PLL0:
;;;31                 val |= BIT9 | BIT8;
00003a  f4417140          ORR      r1,r1,#0x300
;;;32                 break;
00003e  e004              B        |L7.74|
                  |L7.64|
;;;33             case CLOCK_MUXSEL_NPU_CLK_PLL5:
;;;34                 val |= BIT9;
000040  f4417100          ORR      r1,r1,#0x200
;;;35                 break;
000044  e001              B        |L7.74|
                  |L7.70|
;;;36             case CLOCK_MUXSEL_NPU_CLK_PLL4:
;;;37                 val |= BIT8;
000046  f4417180          ORR      r1,r1,#0x100
                  |L7.74|
;;;38                 break;                   
;;;39         }
;;;40         if (CLOCK_MUXSEL_PLL4_FREF_OSC == (flags & CLOCK_MUXSEL_PLL4_MASK))
00004a  f3c03201          UBFX     r2,r0,#12,#2
00004e  2a02              CMP      r2,#2
000050  d101              BNE      |L7.86|
;;;41             val |= BIT6;
000052  f0410140          ORR      r1,r1,#0x40
                  |L7.86|
;;;42         if (CLOCK_MUXSEL_UART_0_IRDA_UCLK_IRDA == (flags & CLOCK_MUXSEL_UART_0_IRDA_UCLK_MASK))
000056  f3c02001          UBFX     r0,r0,#8,#2
00005a  2802              CMP      r0,#2
00005c  d101              BNE      |L7.98|
;;;43             val |= BIT4;
00005e  f0410110          ORR      r1,r1,#0x10
                  |L7.98|
;;;44         
;;;45         //dbg_msg("val=%x", val);
;;;46         
;;;47         outw(SCU_EXTREG_CLK_MUX_SEL, val);
000062  4801              LDR      r0,|L7.104|
000064  6201              STR      r1,[r0,#0x20]
;;;48     } 
000066  4770              BX       lr
;;;49     
                          ENDP

                  |L7.104|
                          DCD      0xc2380000

                          AREA ||i.clock_mgr_set_scuclkin||, CODE, READONLY, ALIGN=2

                  clock_mgr_set_scuclkin PROC
;;;56     }
;;;57     void clock_mgr_set_scuclkin(enum scuclkin_type type, BOOL enable) 
000000  b101              CBZ      r1,|L8.4|
;;;58     {
;;;59     //    SCU_REG_PLL_CTRL_SET_CLKIN_MUX(type);
;;;60     //    SCU_REG_PLL_CTRL_PLLEN(enable);
;;;61         u32 val = ((type << SCU_REG_PLL_CTRL_CLKIN_MUX_BIT_START) |
;;;62                   ((enable) ? (SCU_REG_PLL_CTRL_PLLEN) : (0)));
000002  2101              MOVS     r1,#1
                  |L8.4|
000004  ea411200          ORR      r2,r1,r0,LSL #4
;;;63         masked_outw(SCU_REG_PLL_CTRL, val, SCU_REG_PLL_CTRL_CLKIN_MUX_MASK);
000008  490f              LDR      r1,|L8.72|
00000a  6b0b              LDR      r3,[r1,#0x30]
00000c  f0020210          AND      r2,r2,#0x10
000010  f0230310          BIC      r3,r3,#0x10
000014  4313              ORRS     r3,r3,r2
000016  f04302e0          ORR      r2,r3,#0xe0
00001a  630a              STR      r2,[r1,#0x30]
;;;64         
;;;65         osc_is_30m = ((scuclkin_pll0div4 == type) ? (TRUE) : (FALSE));
00001c  2803              CMP      r0,#3
00001e  d011              BEQ      |L8.68|
000020  2200              MOVS     r2,#0
                  |L8.34|
000022  490a              LDR      r1,|L8.76|
000024  4608              MOV      r0,r1
000026  700a              STRB     r2,[r1,#0]
;;;66         osc_div_1n2 = (!osc_is_30m) ? (T_OSC_in) : (T_OSC_in >> 1);
000028  8840              LDRH     r0,[r0,#2]
00002a  b102              CBZ      r2,|L8.46|
00002c  0840              LSRS     r0,r0,#1
                  |L8.46|
00002e  8088              STRH     r0,[r1,#4]
;;;67         pll0_out = osc_div_1n2 * pll0_ns / pll0_ms;
000030  eb0002c0          ADD      r2,r0,r0,LSL #3
000034  eb021000          ADD      r0,r2,r0,LSL #4
000038  f64f72ff          MOV      r2,#0xffff
00003c  ea020040          AND      r0,r2,r0,LSL #1
;;;68         //switch (pll0_F) {
;;;69             pll0_out = pll0_out >> (3 - pll0_F);
000040  80c8              STRH     r0,[r1,#6]
;;;70         //}
;;;71     
;;;72         //dbg_msg("%s osc_div_1n2=%d pll0_out=%d", __func__, osc_div_1n2, pll0_out);
;;;73     }
000042  4770              BX       lr
                  |L8.68|
000044  2201              MOVS     r2,#1                 ;65
000046  e7ec              B        |L8.34|
;;;74     
                          ENDP

                  |L8.72|
                          DCD      0xc2300000
                  |L8.76|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=1

                  osc_is_30m
000000  0000              DCB      0x00,0x00
                  T_OSC_in
000002  000c              DCW      0x000c
                  osc_div_1n2
000004  0000              DCW      0x0000
                  pll0_out
000006  0000              DCW      0x0000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\scpu\\drivers\\system\\clock.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_clock_c_300a3b4f____REV16|
#line 208 "F:\\Users\\fu\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.9.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___7_clock_c_300a3b4f____REV16| PROC
#line 209

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_clock_c_300a3b4f____REVSH|
#line 223
|__asm___7_clock_c_300a3b4f____REVSH| PROC
#line 224

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___7_clock_c_300a3b4f____RRX|
#line 410
|__asm___7_clock_c_300a3b4f____RRX| PROC
#line 411

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
