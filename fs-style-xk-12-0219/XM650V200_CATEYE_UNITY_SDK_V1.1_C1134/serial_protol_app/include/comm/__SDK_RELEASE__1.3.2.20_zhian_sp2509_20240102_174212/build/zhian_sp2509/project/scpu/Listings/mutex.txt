; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\mutex.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\mutex.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\config -I..\..\..\..\board -I..\..\..\..\common\include -I..\..\..\..\scpu\device\include\CMSIS -I..\..\..\..\scpu\device\include\Kneron -I..\..\..\..\scpu\framework\include -I..\..\..\..\scpu\framework\include\framework -I..\..\..\..\scpu\drivers\include -I..\..\..\..\scpu\drivers\include\media\touch -I..\..\..\..\scpu\drivers\include\media\flash -I..\..\..\..\scpu\lib\kdp_system\inc -I..\..\..\..\scpu\lib\kdp_application\include\ -I..\..\..\..\scpu\lib\kdp_application\base\ -I..\..\..\..\scpu\lib\kdp_application\misc -I..\..\..\..\scpu\lib\kdp_e2e_r1n1\include -I..\..\..\..\scpu\include -I..\..\..\..\scpu\middleware\ota -I..\..\..\..\scpu\middleware\comm -I..\..\..\..\scpu\middleware\kdp_comm -I..\..\..\..\scpu\share -I..\..\..\..\scpu\share\gui_lib -I..\..\user -I.\RTE\CMSIS -I.\RTE\_Target-scpu -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\RTX\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\Device\ARM\ARMCM4\Include -D__RTX -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DARMCM4_FP -D_RTE_ -DARM_MATH_CM4 -DTARGET_SCPU -DLOG_ENABLE -DKL520 -DHEAD_POSE_CHECK_PERCENT --omf_browse=.\objects\mutex.crf ..\..\..\..\scpu\framework\src\mutex.c]
                          THUMB

                          AREA ||i.mutex_create||, CODE, READONLY, ALIGN=1

                  mutex_create PROC
;;;3      
;;;4      void mutex_create(struct mutex *lock)
000000  b510              PUSH     {r4,lr}
;;;5      {
000002  4604              MOV      r4,r0
;;;6          lock->id = osMutexNew(NULL);
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       osMutexNew
00000a  6020              STR      r0,[r4,#0]
;;;7      }
00000c  bd10              POP      {r4,pc}
;;;8      
                          ENDP


                          AREA ||i.mutex_delete||, CODE, READONLY, ALIGN=1

                  mutex_delete PROC
;;;24     
;;;25     void mutex_delete(struct mutex *lock)
000000  6800              LDR      r0,[r0,#0]
;;;26     {
000002  2800              CMP      r0,#0
000004  d001              BEQ      |L2.10|
;;;27         if (lock->id != NULL) 
;;;28             osMutexDelete(lock->id);
000006  f7ffbffe          B.W      osMutexDelete
                  |L2.10|
;;;29     }
00000a  4770              BX       lr
                          ENDP


                          AREA ||i.mutex_lock||, CODE, READONLY, ALIGN=1

                  mutex_lock PROC
;;;8      
;;;9      void mutex_lock(struct mutex *lock)
000000  6800              LDR      r0,[r0,#0]
;;;10     {
;;;11     	//might_sleep();
;;;12     	osMutexAcquire(lock->id, 0);
000002  2100              MOVS     r1,#0
000004  f7ffbffe          B.W      osMutexAcquire
;;;13     }
;;;14     
                          ENDP


                          AREA ||i.mutex_lock_timeout||, CODE, READONLY, ALIGN=1

                  mutex_lock_timeout PROC
;;;14     
;;;15     void mutex_lock_timeout(struct mutex *lock, u32 timeout)
000000  6800              LDR      r0,[r0,#0]
;;;16     {
;;;17         osMutexAcquire(lock->id, timeout);
000002  f7ffbffe          B.W      osMutexAcquire
;;;18     }
;;;19     
                          ENDP


                          AREA ||i.mutex_unlock||, CODE, READONLY, ALIGN=1

                  mutex_unlock PROC
;;;19     
;;;20     void mutex_unlock(struct mutex *lock)
000000  6800              LDR      r0,[r0,#0]
;;;21     {
;;;22         osMutexRelease(lock->id);
000002  f7ffbffe          B.W      osMutexRelease
;;;23     }
;;;24     
                          ENDP

