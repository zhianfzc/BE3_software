; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\kdp_camera.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\kdp_camera.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\config -I..\..\..\..\board -I..\..\..\..\common\include -I..\..\..\..\scpu\device\include\CMSIS -I..\..\..\..\scpu\device\include\Kneron -I..\..\..\..\scpu\framework\include -I..\..\..\..\scpu\framework\include\framework -I..\..\..\..\scpu\drivers\include -I..\..\..\..\scpu\drivers\include\media\touch -I..\..\..\..\scpu\drivers\include\media\flash -I..\..\..\..\scpu\lib\kdp_system\inc -I..\..\..\..\scpu\lib\kdp_application\include\ -I..\..\..\..\scpu\lib\kdp_application\base\ -I..\..\..\..\scpu\lib\kdp_application\misc -I..\..\..\..\scpu\lib\kdp_e2e_r1n1\include -I..\..\..\..\scpu\include -I..\..\..\..\scpu\middleware\ota -I..\..\..\..\scpu\middleware\comm -I..\..\..\..\scpu\middleware\kdp_comm -I..\..\..\..\scpu\share -I..\..\..\..\scpu\share\gui_lib -I..\..\user -I.\RTE\CMSIS -I.\RTE\_Target-scpu -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\RTX\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\Device\ARM\ARMCM4\Include -D__RTX -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DARMCM4_FP -D_RTE_ -DARM_MATH_CM4 -DTARGET_SCPU -DLOG_ENABLE -DKL520 -DHEAD_POSE_CHECK_PERCENT --omf_browse=.\objects\kdp_camera.crf ..\..\..\..\scpu\drivers\media\platform\kdp_camera.c]
                          THUMB

                          AREA ||i.kdp_camera_buffer_capture||, CODE, READONLY, ALIGN=2

                  kdp_camera_buffer_capture PROC
;;;156    
;;;157    int kdp_camera_buffer_capture(unsigned int cam_idx, int *addr, int *size)
000000  b430              PUSH     {r4,r5}
;;;158    {
;;;159        if (cam_idx >= IMGSRC_NUM)
;;;160            return -1;
000002  f04f35ff          MOV      r5,#0xffffffff
000006  2802              CMP      r0,#2                 ;159
000008  d208              BCS      |L1.28|
;;;161        
;;;162        if ((camera_s[cam_idx].ops->buffer_capture == NULL) || camera_s[cam_idx].ops == NULL)
00000a  4b06              LDR      r3,|L1.36|
00000c  eb0303c0          ADD      r3,r3,r0,LSL #3
000010  685c              LDR      r4,[r3,#4]
000012  6a23              LDR      r3,[r4,#0x20]
000014  b113              CBZ      r3,|L1.28|
000016  b10c              CBZ      r4,|L1.28|
;;;163            return -1;
;;;164            
;;;165        return camera_s[cam_idx].ops->buffer_capture(cam_idx, addr, size);
000018  bc30              POP      {r4,r5}
00001a  4718              BX       r3
                  |L1.28|
00001c  4628              MOV      r0,r5                 ;163
;;;166    }
00001e  bc30              POP      {r4,r5}
000020  4770              BX       lr
;;;167    
                          ENDP

000022  0000              DCW      0x0000
                  |L1.36|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_buffer_init||, CODE, READONLY, ALIGN=2

                  kdp_camera_buffer_init PROC
;;;112    
;;;113    int kdp_camera_buffer_init(unsigned int cam_idx)
000000  f04f33ff          MOV      r3,#0xffffffff
;;;114    {
;;;115        if (cam_idx >= IMGSRC_NUM)
000004  2802              CMP      r0,#2
000006  d207              BCS      |L2.24|
;;;116            return -1;
;;;117        
;;;118        if ((camera_s[cam_idx].ops->buffer_init == NULL) || camera_s[cam_idx].ops == NULL)
000008  4904              LDR      r1,|L2.28|
00000a  eb0101c0          ADD      r1,r1,r0,LSL #3
00000e  684a              LDR      r2,[r1,#4]
000010  6911              LDR      r1,[r2,#0x10]
000012  b109              CBZ      r1,|L2.24|
000014  b102              CBZ      r2,|L2.24|
;;;119            return -1;
;;;120            
;;;121        return camera_s[cam_idx].ops->buffer_init(cam_idx);
000016  4708              BX       r1
                  |L2.24|
000018  4618              MOV      r0,r3                 ;119
;;;122    }
00001a  4770              BX       lr
;;;123    
                          ENDP

                  |L2.28|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_buffer_prepare||, CODE, READONLY, ALIGN=2

                  kdp_camera_buffer_prepare PROC
;;;145    
;;;146    int kdp_camera_buffer_prepare(unsigned int cam_idx)
000000  f04f33ff          MOV      r3,#0xffffffff
;;;147    {
;;;148        if (cam_idx >= IMGSRC_NUM)
000004  2802              CMP      r0,#2
000006  d207              BCS      |L3.24|
;;;149            return -1;
;;;150        
;;;151        if ((camera_s[cam_idx].ops->buffer_prepare == NULL) || camera_s[cam_idx].ops == NULL)
000008  4904              LDR      r1,|L3.28|
00000a  eb0101c0          ADD      r1,r1,r0,LSL #3
00000e  684a              LDR      r2,[r1,#4]
000010  69d1              LDR      r1,[r2,#0x1c]
000012  b109              CBZ      r1,|L3.24|
000014  b102              CBZ      r2,|L3.24|
;;;152            return -1;
;;;153            
;;;154        return camera_s[cam_idx].ops->buffer_prepare(cam_idx);
000016  4708              BX       r1
                  |L3.24|
000018  4618              MOV      r0,r3                 ;152
;;;155    }
00001a  4770              BX       lr
;;;156    
                          ENDP

                  |L3.28|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_close||, CODE, READONLY, ALIGN=2

                  kdp_camera_close PROC
;;;63     
;;;64     void kdp_camera_close(unsigned int cam_idx)
000000  2802              CMP      r0,#2
;;;65     {
000002  d209              BCS      |L4.24|
;;;66         if (cam_idx >= IMGSRC_NUM)
;;;67             return;
;;;68         
;;;69         if ((camera_s[cam_idx].ops->close == NULL) || camera_s[cam_idx].ops == NULL)
000004  4905              LDR      r1,|L4.28|
000006  eb0101c0          ADD      r1,r1,r0,LSL #3
00000a  684a              LDR      r2,[r1,#4]
00000c  6851              LDR      r1,[r2,#4]
00000e  2900              CMP      r1,#0
000010  d002              BEQ      |L4.24|
000012  2a00              CMP      r2,#0
000014  d000              BEQ      |L4.24|
;;;70             return;
;;;71             
;;;72         camera_s[cam_idx].ops->close(cam_idx);
000016  4708              BX       r1
                  |L4.24|
;;;73     }
000018  4770              BX       lr
;;;74     
                          ENDP

00001a  0000              DCW      0x0000
                  |L4.28|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_controller_register||, CODE, READONLY, ALIGN=2

                  kdp_camera_controller_register PROC
;;;299    }
;;;300    int kdp_camera_controller_register(unsigned int cam_idx, struct cam_ops *cam_ops_p)
000000  b510              PUSH     {r4,lr}
;;;301    {
;;;302        if (cam_idx >= IMGSRC_NUM || cam_ops_p == NULL)
;;;303            return -1;
000002  f04f33ff          MOV      r3,#0xffffffff
000006  2802              CMP      r0,#2                 ;302
000008  d204              BCS      |L5.20|
00000a  b119              CBZ      r1,|L5.20|
;;;304    
;;;305        if (camera_s[cam_idx].inuse)
00000c  4a06              LDR      r2,|L5.40|
00000e  f8524030          LDR      r4,[r2,r0,LSL #3]
000012  b10c              CBZ      r4,|L5.24|
                  |L5.20|
;;;306            return -1;
000014  4618              MOV      r0,r3
;;;307    
;;;308        camera_s[cam_idx].ops = cam_ops_p;
;;;309        camera_s[cam_idx].inuse = 1;
;;;310    
;;;311        return 0;
;;;312    }
000016  bd10              POP      {r4,pc}
                  |L5.24|
000018  eb0203c0          ADD      r3,r2,r0,LSL #3       ;308
00001c  6059              STR      r1,[r3,#4]            ;309
00001e  2101              MOVS     r1,#1                 ;309
000020  f8421030          STR      r1,[r2,r0,LSL #3]     ;309
000024  2000              MOVS     r0,#0                 ;311
000026  bd10              POP      {r4,pc}
;;;313    
                          ENDP

                  |L5.40|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_controller_unregister||, CODE, READONLY, ALIGN=2

                  kdp_camera_controller_unregister PROC
;;;313    
;;;314    int kdp_camera_controller_unregister(unsigned int cam_idx, struct cam_ops *cam_ops_p)
000000  f04f32ff          MOV      r2,#0xffffffff
;;;315    {
;;;316        if (cam_idx >= IMGSRC_NUM || cam_ops_p == NULL)
000004  2802              CMP      r0,#2
000006  d20c              BCS      |L6.34|
000008  b159              CBZ      r1,|L6.34|
;;;317            return -1;
;;;318    
;;;319        if (!camera_s[cam_idx].inuse)
00000a  4907              LDR      r1,|L6.40|
00000c  f8513030          LDR      r3,[r1,r0,LSL #3]
000010  b13b              CBZ      r3,|L6.34|
;;;320            return -1;
;;;321    
;;;322        camera_s[cam_idx].ops = NULL;
000012  eb0103c0          ADD      r3,r1,r0,LSL #3
000016  2200              MOVS     r2,#0
;;;323        camera_s[cam_idx].inuse = 0;
000018  605a              STR      r2,[r3,#4]
00001a  f8412030          STR      r2,[r1,r0,LSL #3]
;;;324    
;;;325        return 0;
00001e  4610              MOV      r0,r2
;;;326    }
000020  4770              BX       lr
                  |L6.34|
000022  4610              MOV      r0,r2                 ;320
000024  4770              BX       lr
;;;327    #if CFG_ONE_SHOT_MODE == YES
                          ENDP

000026  0000              DCW      0x0000
                  |L6.40|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_get_device_id||, CODE, READONLY, ALIGN=2

                  kdp_camera_get_device_id PROC
;;;278    
;;;279    int kdp_camera_get_device_id(unsigned int cam_idx)
000000  f04f33ff          MOV      r3,#0xffffffff
;;;280    {
;;;281        if (cam_idx >= IMGSRC_NUM)
000004  2802              CMP      r0,#2
000006  d207              BCS      |L7.24|
;;;282            return -1;
;;;283        
;;;284        if ((camera_s[cam_idx].ops->get_device_id == NULL) || camera_s[cam_idx].ops == NULL)
000008  4904              LDR      r1,|L7.28|
00000a  eb0101c0          ADD      r1,r1,r0,LSL #3
00000e  684a              LDR      r2,[r1,#4]
000010  6cd1              LDR      r1,[r2,#0x4c]
000012  b109              CBZ      r1,|L7.24|
000014  b102              CBZ      r2,|L7.24|
;;;285            return -1;
;;;286            
;;;287        return camera_s[cam_idx].ops->get_device_id(cam_idx);
000016  4708              BX       r1
                  |L7.24|
000018  4618              MOV      r0,r3                 ;285
;;;288    }
00001a  4770              BX       lr
;;;289    
                          ENDP

                  |L7.28|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_get_device_info||, CODE, READONLY, ALIGN=1

                  kdp_camera_get_device_info PROC
;;;85     
;;;86     int kdp_camera_get_device_info(unsigned int cam_idx, struct cam_capability *cap)
000000  f7ffbffe          B.W      kdp_camera_query_capability
;;;87     {
;;;88         return kdp_camera_query_capability(cam_idx, cap);
;;;89     }
;;;90     
                          ENDP


                          AREA ||i.kdp_camera_get_frame_format||, CODE, READONLY, ALIGN=2

                  kdp_camera_get_frame_format PROC
;;;101    
;;;102    int kdp_camera_get_frame_format(unsigned int cam_idx, struct cam_format *format)
000000  b430              PUSH     {r4,r5}
;;;103    {
;;;104        if (cam_idx >= IMGSRC_NUM)
;;;105            return -1;
000002  f04f34ff          MOV      r4,#0xffffffff
000006  2802              CMP      r0,#2                 ;104
000008  d208              BCS      |L9.28|
;;;106        
;;;107        if ((camera_s[cam_idx].ops->get_format == NULL) || camera_s[cam_idx].ops == NULL)
00000a  4a06              LDR      r2,|L9.36|
00000c  eb0202c0          ADD      r2,r2,r0,LSL #3
000010  6853              LDR      r3,[r2,#4]
000012  68da              LDR      r2,[r3,#0xc]
000014  b112              CBZ      r2,|L9.28|
000016  b10b              CBZ      r3,|L9.28|
;;;108            return -1;
;;;109            
;;;110        return camera_s[cam_idx].ops->get_format(cam_idx, format);
000018  bc30              POP      {r4,r5}
00001a  4710              BX       r2
                  |L9.28|
00001c  4620              MOV      r0,r4                 ;108
;;;111    }
00001e  bc30              POP      {r4,r5}
000020  4770              BX       lr
;;;112    
                          ENDP

000022  0000              DCW      0x0000
                  |L9.36|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_get_lux||, CODE, READONLY, ALIGN=2

                  kdp_camera_get_lux PROC
;;;211    
;;;212    int kdp_camera_get_lux(unsigned int cam_idx, u16* exposure, u8* pre_gain, u8* post_gain, u8* global_gain, u8* y_average)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;213    {
;;;214        if (cam_idx >= IMGSRC_NUM)
;;;215            return -1;
000004  f04f36ff          MOV      r6,#0xffffffff
000008  e9ddc708          LDRD     r12,r7,[sp,#0x20]     ;213
00000c  2802              CMP      r0,#2                 ;214
00000e  d20b              BCS      |L10.40|
;;;216    
;;;217        if ((camera_s[cam_idx].ops->get_lux == NULL) || camera_s[cam_idx].ops == NULL)
000010  4c06              LDR      r4,|L10.44|
000012  eb0404c0          ADD      r4,r4,r0,LSL #3
000016  6865              LDR      r5,[r4,#4]
000018  6bac              LDR      r4,[r5,#0x38]
00001a  b12c              CBZ      r4,|L10.40|
00001c  b125              CBZ      r5,|L10.40|
00001e  e9cdc700          STRD     r12,r7,[sp,#0]
;;;218            return -1;
;;;219    
;;;220        return camera_s[cam_idx].ops->get_lux(cam_idx, exposure, pre_gain, post_gain, global_gain, y_average);
000022  47a0              BLX      r4
                  |L10.36|
;;;221    }
000024  e8bd81fc          POP      {r2-r8,pc}
                  |L10.40|
000028  4630              MOV      r0,r6                 ;218
00002a  e7fb              B        |L10.36|
;;;222    
                          ENDP

                  |L10.44|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_get_tile_en||, CODE, READONLY, ALIGN=2

                  kdp_camera_get_tile_en PROC
;;;289    
;;;290    int kdp_camera_get_tile_en(unsigned int cam_idx)
000000  f04f33ff          MOV      r3,#0xffffffff
;;;291    {
;;;292        if (cam_idx >= IMGSRC_NUM)
000004  2802              CMP      r0,#2
000006  d207              BCS      |L11.24|
;;;293            return -1;
;;;294        
;;;295        if ((camera_s[cam_idx].ops->get_tile_en == NULL) || camera_s[cam_idx].ops == NULL)
000008  4904              LDR      r1,|L11.28|
00000a  eb0101c0          ADD      r1,r1,r0,LSL #3
00000e  684a              LDR      r2,[r1,#4]
000010  6dd1              LDR      r1,[r2,#0x5c]
000012  b109              CBZ      r1,|L11.24|
000014  b102              CBZ      r2,|L11.24|
;;;296            return -1;
;;;297    
;;;298        return camera_s[cam_idx].ops->get_tile_en(cam_idx);
000016  4708              BX       r1
                  |L11.24|
000018  4618              MOV      r0,r3                 ;296
;;;299    }
00001a  4770              BX       lr
;;;300    int kdp_camera_controller_register(unsigned int cam_idx, struct cam_ops *cam_ops_p)
                          ENDP

                  |L11.28|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_init||, CODE, READONLY, ALIGN=2

                  kdp_camera_init PROC
;;;25     
;;;26     int kdp_camera_init(void)
000000  b500              PUSH     {lr}
;;;27     {
000002  b08d              SUB      sp,sp,#0x34
;;;28         kl520_customer_info Cusinfo;
;;;29         kl520_api_customer_get(&Cusinfo);
000004  4668              MOV      r0,sp
000006  f7fffffe          BL       kl520_api_customer_get
;;;30     
;;;31         if (Cusinfo.user_rotate_180 == ROTATE_180_ENABLE)
00000a  f89d0028          LDRB     r0,[sp,#0x28]
00000e  2896              CMP      r0,#0x96
000010  d109              BNE      |L12.38|
;;;32         {
;;;33     #if (CFG_SENSOR_0_TYPE == CFG_SENSOR_1_TYPE)
;;;34             rgb_sensor_index = (CFR_CAM_RGB==0 ? 1 : 0);
;;;35             nir_sensor_index = (CFR_CAM_NIR==0 ? 1 : 0);
;;;36     #endif
;;;37     #if (CFG_SENSOR_0_TYPE > SENSOR_TYPE_NULL)
;;;38             sensor_0_mirror = (CFG_SENSOR_0_FMT_MIRROR==0 ? 1 : 0);
000012  4907              LDR      r1,|L12.48|
000014  2001              MOVS     r0,#1
;;;39             sensor_0_flip = (CFG_SENSOR_0_FMT_FLIP==0 ? 1 : 0);
000016  4a07              LDR      r2,|L12.52|
000018  7008              STRB     r0,[r1,#0]            ;38
00001a  2100              MOVS     r1,#0
00001c  7011              STRB     r1,[r2,#0]
;;;40     #endif
;;;41     #if (CFG_SENSOR_1_TYPE > SENSOR_TYPE_NULL)
;;;42             sensor_1_mirror = (CFG_SENSOR_1_FMT_MIRROR==0 ? 1 : 0);
00001e  4a06              LDR      r2,|L12.56|
000020  7010              STRB     r0,[r2,#0]
;;;43             sensor_1_flip = (CFG_SENSOR_1_FMT_FLIP==0 ? 1 : 0);
000022  4806              LDR      r0,|L12.60|
000024  7001              STRB     r1,[r0,#0]
                  |L12.38|
;;;44     #endif
;;;45         }
;;;46     
;;;47     #ifdef KL520
;;;48         kdp_camera_kl520_init();
000026  f7fffffe          BL       kdp_camera_kl520_init
;;;49     #endif
;;;50         return 0;
;;;51     }
00002a  b00d              ADD      sp,sp,#0x34
00002c  2000              MOVS     r0,#0                 ;50
00002e  bd00              POP      {pc}
;;;52     
                          ENDP

                  |L12.48|
                          DCD      sensor_0_mirror
                  |L12.52|
                          DCD      sensor_0_flip
                  |L12.56|
                          DCD      sensor_1_mirror
                  |L12.60|
                          DCD      sensor_1_flip

                          AREA ||i.kdp_camera_open||, CODE, READONLY, ALIGN=2

                  kdp_camera_open PROC
;;;52     
;;;53     int kdp_camera_open(unsigned int cam_idx)
000000  f04f33ff          MOV      r3,#0xffffffff
;;;54     {
;;;55         if (cam_idx >= IMGSRC_NUM)
000004  2802              CMP      r0,#2
000006  d207              BCS      |L13.24|
;;;56             return -1;
;;;57         
;;;58         if ((camera_s[cam_idx].ops->open == NULL) || camera_s[cam_idx].ops == NULL)
000008  4904              LDR      r1,|L13.28|
00000a  eb0101c0          ADD      r1,r1,r0,LSL #3
00000e  684a              LDR      r2,[r1,#4]
000010  6811              LDR      r1,[r2,#0]
000012  b109              CBZ      r1,|L13.24|
000014  b102              CBZ      r2,|L13.24|
;;;59             return -1;
;;;60     
;;;61         return camera_s[cam_idx].ops->open(cam_idx);
000016  4708              BX       r1
                  |L13.24|
000018  4618              MOV      r0,r3                 ;59
;;;62     }
00001a  4770              BX       lr
;;;63     
                          ENDP

                  |L13.28|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_query_capability||, CODE, READONLY, ALIGN=2

                  kdp_camera_query_capability PROC
;;;74     
;;;75     int kdp_camera_query_capability(unsigned int cam_idx, struct cam_capability *cap)
000000  b430              PUSH     {r4,r5}
;;;76     {
;;;77         if (cam_idx >= IMGSRC_NUM)
;;;78             return -1;
000002  f04f34ff          MOV      r4,#0xffffffff
000006  2802              CMP      r0,#2                 ;77
000008  d208              BCS      |L14.28|
;;;79         
;;;80         if ((camera_s[cam_idx].ops->query_capability == NULL) || camera_s[cam_idx].ops == NULL)
00000a  4a06              LDR      r2,|L14.36|
00000c  eb0202c0          ADD      r2,r2,r0,LSL #3
000010  6853              LDR      r3,[r2,#4]
000012  6ada              LDR      r2,[r3,#0x2c]
000014  b112              CBZ      r2,|L14.28|
000016  b10b              CBZ      r3,|L14.28|
;;;81             return -1;
;;;82             
;;;83         return camera_s[cam_idx].ops->query_capability(cam_idx, cap);
000018  bc30              POP      {r4,r5}
00001a  4710              BX       r2
                  |L14.28|
00001c  4620              MOV      r0,r4                 ;81
;;;84     }
00001e  bc30              POP      {r4,r5}
000020  4770              BX       lr
;;;85     
                          ENDP

000022  0000              DCW      0x0000
                  |L14.36|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_set_aec_en||, CODE, READONLY, ALIGN=2

                  kdp_camera_set_aec_en PROC
;;;339    
;;;340    int kdp_camera_set_aec_en(unsigned int cam_idx, BOOL enable)
000000  f04f33ff          MOV      r3,#0xffffffff
;;;341    {
;;;342        if (cam_idx >= IMGSRC_NUM)
000004  2802              CMP      r0,#2
000006  d206              BCS      |L15.22|
;;;343            return -1;
;;;344    		
;;;345        if (camera_s[cam_idx].ops->set_aec_en == NULL)
000008  4a04              LDR      r2,|L15.28|
00000a  eb0202c0          ADD      r2,r2,r0,LSL #3
00000e  6852              LDR      r2,[r2,#4]
000010  6d52              LDR      r2,[r2,#0x54]
000012  b102              CBZ      r2,|L15.22|
;;;346            return -1;
;;;347    				
;;;348        return camera_s[cam_idx].ops->set_aec_en(cam_idx, enable);
000014  4710              BX       r2
                  |L15.22|
000016  4618              MOV      r0,r3                 ;346
;;;349    }
000018  4770              BX       lr
;;;350    
                          ENDP

00001a  0000              DCW      0x0000
                  |L15.28|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_set_aec_roi||, CODE, READONLY, ALIGN=2

                  kdp_camera_set_aec_roi PROC
;;;222    
;;;223    int kdp_camera_set_aec_roi(unsigned int cam_idx, u8 x1, u8 x2, u8 y1, u8 y2, u8 center_x1, u8 center_x2, u8 center_y1, u8 center_y2)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;224    {
000004  b086              SUB      sp,sp,#0x18
000006  4691              MOV      r9,r2
000008  e9dd6511          LDRD     r6,r5,[sp,#0x44]
00000c  e9ddc70f          LDRD     r12,r7,[sp,#0x3c]
;;;225        if (cam_idx >= IMGSRC_NUM)
000010  f8dd8038          LDR      r8,[sp,#0x38]
000014  468a              MOV      r10,r1                ;224
;;;226            return -1;
000016  f04f32ff          MOV      r2,#0xffffffff
00001a  2802              CMP      r0,#2                 ;225
00001c  d212              BCS      |L16.68|
;;;227    
;;;228        if ((camera_s[cam_idx].ops->set_aec_roi == NULL) || camera_s[cam_idx].ops == NULL)
00001e  490a              LDR      r1,|L16.72|
000020  eb0101c0          ADD      r1,r1,r0,LSL #3
000024  6849              LDR      r1,[r1,#4]
000026  6bcc              LDR      r4,[r1,#0x3c]
000028  b164              CBZ      r4,|L16.68|
00002a  b159              CBZ      r1,|L16.68|
;;;229            return -1;
;;;230    
;;;231        return camera_s[cam_idx].ops->set_aec_roi(cam_idx, x1, x2, y1, y2, center_x1, center_x2, center_y1, center_y2);
00002c  f8cd8000          STR      r8,[sp,#0]
000030  e9cdc701          STRD     r12,r7,[sp,#4]
000034  e9cd6503          STRD     r6,r5,[sp,#0xc]
000038  464a              MOV      r2,r9
00003a  4651              MOV      r1,r10
00003c  47a0              BLX      r4
                  |L16.62|
;;;232    }
00003e  b006              ADD      sp,sp,#0x18
000040  e8bd87f0          POP      {r4-r10,pc}
                  |L16.68|
000044  4610              MOV      r0,r2                 ;229
000046  e7fa              B        |L16.62|
;;;233    
                          ENDP

                  |L16.72|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_set_exp_time||, CODE, READONLY, ALIGN=2

                  kdp_camera_set_exp_time PROC
;;;200    
;;;201    int kdp_camera_set_exp_time(unsigned int cam_idx, int gain1, int gain2)
000000  b430              PUSH     {r4,r5}
;;;202    {
;;;203        if (cam_idx >= IMGSRC_NUM)
;;;204            return -1;
000002  f04f35ff          MOV      r5,#0xffffffff
000006  2802              CMP      r0,#2                 ;203
000008  d20a              BCS      |L17.32|
;;;205    
;;;206        if ((camera_s[cam_idx].ops->set_exp_time == NULL) || camera_s[cam_idx].ops == NULL)
00000a  4b07              LDR      r3,|L17.40|
00000c  eb0303c0          ADD      r3,r3,r0,LSL #3
000010  685c              LDR      r4,[r3,#4]
000012  6b63              LDR      r3,[r4,#0x34]
000014  b123              CBZ      r3,|L17.32|
000016  b11c              CBZ      r4,|L17.32|
;;;207            return -1;
;;;208    
;;;209        return camera_s[cam_idx].ops->set_exp_time(cam_idx, gain1, gain2);
000018  bc30              POP      {r4,r5}
00001a  b2d2              UXTB     r2,r2
00001c  b2c9              UXTB     r1,r1
00001e  4718              BX       r3
                  |L17.32|
000020  4628              MOV      r0,r5                 ;207
;;;210    }
000022  bc30              POP      {r4,r5}
000024  4770              BX       lr
;;;211    
                          ENDP

000026  0000              DCW      0x0000
                  |L17.40|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_set_flip||, CODE, READONLY, ALIGN=2

                  kdp_camera_set_flip PROC
;;;267    
;;;268    int kdp_camera_set_flip(unsigned int cam_idx, BOOL enable)
000000  b430              PUSH     {r4,r5}
;;;269    {
;;;270        if (cam_idx >= IMGSRC_NUM)
;;;271            return -1;
000002  f04f34ff          MOV      r4,#0xffffffff
000006  2802              CMP      r0,#2                 ;270
000008  d208              BCS      |L18.28|
;;;272    
;;;273        if ((camera_s[cam_idx].ops->set_flip == NULL) || camera_s[cam_idx].ops == NULL)
00000a  4a06              LDR      r2,|L18.36|
00000c  eb0202c0          ADD      r2,r2,r0,LSL #3
000010  6853              LDR      r3,[r2,#4]
000012  6c5a              LDR      r2,[r3,#0x44]
000014  b112              CBZ      r2,|L18.28|
000016  b10b              CBZ      r3,|L18.28|
;;;274            return -1;
;;;275    
;;;276        return camera_s[cam_idx].ops->set_flip(cam_idx, enable);
000018  bc30              POP      {r4,r5}
00001a  4710              BX       r2
                  |L18.28|
00001c  4620              MOV      r0,r4                 ;274
;;;277    }
00001e  bc30              POP      {r4,r5}
000020  4770              BX       lr
;;;278    
                          ENDP

000022  0000              DCW      0x0000
                  |L18.36|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_set_fps||, CODE, READONLY, ALIGN=2

                  kdp_camera_set_fps PROC
;;;255    
;;;256    int kdp_camera_set_fps(unsigned int cam_idx, u8 fps)
000000  b430              PUSH     {r4,r5}
;;;257    {
;;;258        if (cam_idx >= IMGSRC_NUM)
;;;259            return -1;
000002  f04f34ff          MOV      r4,#0xffffffff
000006  2802              CMP      r0,#2                 ;258
000008  d208              BCS      |L19.28|
;;;260    
;;;261        if ((camera_s[cam_idx].ops->set_fps == NULL) || camera_s[cam_idx].ops == NULL)
00000a  4a06              LDR      r2,|L19.36|
00000c  eb0202c0          ADD      r2,r2,r0,LSL #3
000010  6853              LDR      r3,[r2,#4]
000012  6d1a              LDR      r2,[r3,#0x50]
000014  b112              CBZ      r2,|L19.28|
000016  b10b              CBZ      r3,|L19.28|
;;;262            return -1;
;;;263    
;;;264        return camera_s[cam_idx].ops->set_fps(cam_idx, fps);
000018  bc30              POP      {r4,r5}
00001a  4710              BX       r2
                  |L19.28|
00001c  4620              MOV      r0,r4                 ;262
;;;265    }
00001e  bc30              POP      {r4,r5}
000020  4770              BX       lr
;;;266    
                          ENDP

000022  0000              DCW      0x0000
                  |L19.36|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_set_frame_format||, CODE, READONLY, ALIGN=2

                  kdp_camera_set_frame_format PROC
;;;90     
;;;91     int kdp_camera_set_frame_format(unsigned int cam_idx, struct cam_format *format)
000000  b430              PUSH     {r4,r5}
;;;92     {
;;;93         if (cam_idx >= IMGSRC_NUM)
;;;94             return -1;
000002  f04f34ff          MOV      r4,#0xffffffff
000006  2802              CMP      r0,#2                 ;93
000008  d208              BCS      |L20.28|
;;;95         
;;;96         if ((camera_s[cam_idx].ops->set_format == NULL) || camera_s[cam_idx].ops == NULL)
00000a  4a06              LDR      r2,|L20.36|
00000c  eb0202c0          ADD      r2,r2,r0,LSL #3
000010  6853              LDR      r3,[r2,#4]
000012  689a              LDR      r2,[r3,#8]
000014  b112              CBZ      r2,|L20.28|
000016  b10b              CBZ      r3,|L20.28|
;;;97             return -1;
;;;98             
;;;99         return camera_s[cam_idx].ops->set_format(cam_idx, format);
000018  bc30              POP      {r4,r5}
00001a  4710              BX       r2
                  |L20.28|
00001c  4620              MOV      r0,r4                 ;97
;;;100    }
00001e  bc30              POP      {r4,r5}
000020  4770              BX       lr
;;;101    
                          ENDP

000022  0000              DCW      0x0000
                  |L20.36|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_set_gain||, CODE, READONLY, ALIGN=2

                  kdp_camera_set_gain PROC
;;;189    
;;;190    int kdp_camera_set_gain(unsigned int cam_idx, int gain1, int gain2)
000000  b430              PUSH     {r4,r5}
;;;191    {
;;;192        if (cam_idx >= IMGSRC_NUM)
;;;193            return -1;
000002  f04f35ff          MOV      r5,#0xffffffff
000006  2802              CMP      r0,#2                 ;192
000008  d20a              BCS      |L21.32|
;;;194    
;;;195        if ((camera_s[cam_idx].ops->set_gain == NULL) || camera_s[cam_idx].ops == NULL)
00000a  4b07              LDR      r3,|L21.40|
00000c  eb0303c0          ADD      r3,r3,r0,LSL #3
000010  685c              LDR      r4,[r3,#4]
000012  6b23              LDR      r3,[r4,#0x30]
000014  b123              CBZ      r3,|L21.32|
000016  b11c              CBZ      r4,|L21.32|
;;;196            return -1;
;;;197    
;;;198        return camera_s[cam_idx].ops->set_gain(cam_idx, gain1, gain2);
000018  bc30              POP      {r4,r5}
00001a  b2d2              UXTB     r2,r2
00001c  b2c9              UXTB     r1,r1
00001e  4718              BX       r3
                  |L21.32|
000020  4628              MOV      r0,r5                 ;196
;;;199    }
000022  bc30              POP      {r4,r5}
000024  4770              BX       lr
;;;200    
                          ENDP

000026  0000              DCW      0x0000
                  |L21.40|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_set_led||, CODE, READONLY, ALIGN=2

                  kdp_camera_set_led PROC
;;;244    
;;;245    int kdp_camera_set_led(unsigned int cam_idx, BOOL enable)
000000  b430              PUSH     {r4,r5}
;;;246    {
;;;247        if (cam_idx >= IMGSRC_NUM)
;;;248            return -1;
000002  f04f34ff          MOV      r4,#0xffffffff
000006  2802              CMP      r0,#2                 ;247
000008  d208              BCS      |L22.28|
;;;249    
;;;250        if ((camera_s[cam_idx].ops->set_led == NULL) || camera_s[cam_idx].ops == NULL)
00000a  4a06              LDR      r2,|L22.36|
00000c  eb0202c0          ADD      r2,r2,r0,LSL #3
000010  6853              LDR      r3,[r2,#4]
000012  6c9a              LDR      r2,[r3,#0x48]
000014  b112              CBZ      r2,|L22.28|
000016  b10b              CBZ      r3,|L22.28|
;;;251            return -1;
;;;252    
;;;253        return camera_s[cam_idx].ops->set_led(cam_idx, enable);
000018  bc30              POP      {r4,r5}
00001a  4710              BX       r2
                  |L22.28|
00001c  4620              MOV      r0,r4                 ;251
;;;254    }
00001e  bc30              POP      {r4,r5}
000020  4770              BX       lr
;;;255    
                          ENDP

000022  0000              DCW      0x0000
                  |L22.36|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_set_mirror||, CODE, READONLY, ALIGN=2

                  kdp_camera_set_mirror PROC
;;;233    
;;;234    int kdp_camera_set_mirror(unsigned int cam_idx, BOOL enable)
000000  b430              PUSH     {r4,r5}
;;;235    {
;;;236        if (cam_idx >= IMGSRC_NUM)
;;;237            return -1;
000002  f04f34ff          MOV      r4,#0xffffffff
000006  2802              CMP      r0,#2                 ;236
000008  d208              BCS      |L23.28|
;;;238    
;;;239        if ((camera_s[cam_idx].ops->set_mirror == NULL) || camera_s[cam_idx].ops == NULL)
00000a  4a06              LDR      r2,|L23.36|
00000c  eb0202c0          ADD      r2,r2,r0,LSL #3
000010  6853              LDR      r3,[r2,#4]
000012  6c1a              LDR      r2,[r3,#0x40]
000014  b112              CBZ      r2,|L23.28|
000016  b10b              CBZ      r3,|L23.28|
;;;240            return -1;
;;;241    
;;;242        return camera_s[cam_idx].ops->set_mirror(cam_idx, enable);
000018  bc30              POP      {r4,r5}
00001a  4710              BX       r2
                  |L23.28|
00001c  4620              MOV      r0,r4                 ;240
;;;243    }
00001e  bc30              POP      {r4,r5}
000020  4770              BX       lr
;;;244    
                          ENDP

000022  0000              DCW      0x0000
                  |L23.36|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_set_sleep||, CODE, READONLY, ALIGN=2

                  kdp_camera_set_sleep PROC
;;;327    #if CFG_ONE_SHOT_MODE == YES
;;;328    int kdp_camera_set_sleep(unsigned int cam_idx, BOOL enable)
000000  f04f33ff          MOV      r3,#0xffffffff
;;;329    {
;;;330        if (cam_idx >= IMGSRC_NUM)
000004  2802              CMP      r0,#2
000006  d206              BCS      |L24.22|
;;;331            return -1;
;;;332    
;;;333        if (camera_s[cam_idx].ops->sleep == NULL)
000008  4a04              LDR      r2,|L24.28|
00000a  eb0202c0          ADD      r2,r2,r0,LSL #3
00000e  6852              LDR      r2,[r2,#4]
000010  6d92              LDR      r2,[r2,#0x58]
000012  b102              CBZ      r2,|L24.22|
;;;334            return -1;
;;;335    
;;;336        return camera_s[cam_idx].ops->sleep(cam_idx, enable);
000014  4710              BX       r2
                  |L24.22|
000016  4618              MOV      r0,r3                 ;334
;;;337    }
000018  4770              BX       lr
;;;338    #endif
                          ENDP

00001a  0000              DCW      0x0000
                  |L24.28|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_start||, CODE, READONLY, ALIGN=2

                  kdp_camera_start PROC
;;;123    
;;;124    int kdp_camera_start(unsigned int cam_idx)
000000  f04f33ff          MOV      r3,#0xffffffff
;;;125    {
;;;126        if (cam_idx >= IMGSRC_NUM)
000004  2802              CMP      r0,#2
000006  d207              BCS      |L25.24|
;;;127            return -1;
;;;128        
;;;129        if ((camera_s[cam_idx].ops->start_capture == NULL) || camera_s[cam_idx].ops == NULL)
000008  4904              LDR      r1,|L25.28|
00000a  eb0101c0          ADD      r1,r1,r0,LSL #3
00000e  684a              LDR      r2,[r1,#4]
000010  6951              LDR      r1,[r2,#0x14]
000012  b109              CBZ      r1,|L25.24|
000014  b102              CBZ      r2,|L25.24|
;;;130            return -1;
;;;131    
;;;132        return camera_s[cam_idx].ops->start_capture(cam_idx);
000016  4708              BX       r1
                  |L25.24|
000018  4618              MOV      r0,r3                 ;130
;;;133    }
00001a  4770              BX       lr
;;;134    
                          ENDP

                  |L25.28|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_stop||, CODE, READONLY, ALIGN=2

                  kdp_camera_stop PROC
;;;134    
;;;135    int kdp_camera_stop(unsigned int cam_idx)
000000  f04f33ff          MOV      r3,#0xffffffff
;;;136    {
;;;137        if (cam_idx >= IMGSRC_NUM)
000004  2802              CMP      r0,#2
000006  d207              BCS      |L26.24|
;;;138            return -1;
;;;139        
;;;140        if ((camera_s[cam_idx].ops->stop_capture == NULL) || camera_s[cam_idx].ops == NULL)
000008  4904              LDR      r1,|L26.28|
00000a  eb0101c0          ADD      r1,r1,r0,LSL #3
00000e  684a              LDR      r2,[r1,#4]
000010  6991              LDR      r1,[r2,#0x18]
000012  b109              CBZ      r1,|L26.24|
000014  b102              CBZ      r2,|L26.24|
;;;141            return -1;
;;;142            
;;;143        return camera_s[cam_idx].ops->stop_capture(cam_idx);
000016  4708              BX       r1
                  |L26.24|
000018  4618              MOV      r0,r3                 ;141
;;;144    }
00001a  4770              BX       lr
;;;145    
                          ENDP

                  |L26.28|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_stream_off||, CODE, READONLY, ALIGN=2

                  kdp_camera_stream_off PROC
;;;178    
;;;179    int kdp_camera_stream_off(unsigned int cam_idx)
000000  f04f33ff          MOV      r3,#0xffffffff
;;;180    {
;;;181        if (cam_idx >= IMGSRC_NUM)
000004  2802              CMP      r0,#2
000006  d207              BCS      |L27.24|
;;;182            return -1;
;;;183        
;;;184        if ((camera_s[cam_idx].ops->stream_off == NULL) || camera_s[cam_idx].ops == NULL)
000008  4904              LDR      r1,|L27.28|
00000a  eb0101c0          ADD      r1,r1,r0,LSL #3
00000e  684a              LDR      r2,[r1,#4]
000010  6a91              LDR      r1,[r2,#0x28]
000012  b109              CBZ      r1,|L27.24|
000014  b102              CBZ      r2,|L27.24|
;;;185            return -1;
;;;186            
;;;187        return camera_s[cam_idx].ops->stream_off(cam_idx);
000016  4708              BX       r1
                  |L27.24|
000018  4618              MOV      r0,r3                 ;185
;;;188    }
00001a  4770              BX       lr
;;;189    
                          ENDP

                  |L27.28|
                          DCD      ||.bss||

                          AREA ||i.kdp_camera_stream_on||, CODE, READONLY, ALIGN=2

                  kdp_camera_stream_on PROC
;;;167    
;;;168    int kdp_camera_stream_on(unsigned int cam_idx)
000000  f04f33ff          MOV      r3,#0xffffffff
;;;169    {
;;;170        if (cam_idx >= IMGSRC_NUM)
000004  2802              CMP      r0,#2
000006  d207              BCS      |L28.24|
;;;171            return -1;
;;;172        
;;;173        if ((camera_s[cam_idx].ops->stream_on == NULL) || camera_s[cam_idx].ops == NULL)
000008  4904              LDR      r1,|L28.28|
00000a  eb0101c0          ADD      r1,r1,r0,LSL #3
00000e  684a              LDR      r2,[r1,#4]
000010  6a51              LDR      r1,[r2,#0x24]
000012  b109              CBZ      r1,|L28.24|
000014  b102              CBZ      r2,|L28.24|
;;;174            return -1;
;;;175            
;;;176        return camera_s[cam_idx].ops->stream_on(cam_idx);
000016  4708              BX       r1
                  |L28.24|
000018  4618              MOV      r0,r3                 ;174
;;;177    }
00001a  4770              BX       lr
;;;178    
                          ENDP

                  |L28.28|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  camera_s
                          %        16

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\scpu\\drivers\\media\\platform\\kdp_camera.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_kdp_camera_c_0d6b70e5____REV16|
#line 208 "F:\\Users\\fu\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.9.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___12_kdp_camera_c_0d6b70e5____REV16| PROC
#line 209

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_kdp_camera_c_0d6b70e5____REVSH|
#line 223
|__asm___12_kdp_camera_c_0d6b70e5____REVSH| PROC
#line 224

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___12_kdp_camera_c_0d6b70e5____RRX|
#line 410
|__asm___12_kdp_camera_c_0d6b70e5____RRX| PROC
#line 411

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
