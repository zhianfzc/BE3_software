<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\scpu.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\scpu.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri May 10 11:21:17 2024
<BR><P>
<H3>Maximum Stack Usage =       1276 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
user_lwcom_parser &rArr; response_get_Alluser_info_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[bb]">__asm___13_rtx_mempool_c_c97899d2__atomic_link_put</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[bb]">__asm___13_rtx_mempool_c_c97899d2__atomic_link_put</a><BR>
 <LI><a href="#[4f]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4f]">NMI_Handler</a><BR>
 <LI><a href="#[50]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[50]">HardFault_Handler</a><BR>
 <LI><a href="#[51]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[51]">MemManage_Handler</a><BR>
 <LI><a href="#[52]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[52]">BusFault_Handler</a><BR>
 <LI><a href="#[53]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[53]">UsageFault_Handler</a><BR>
 <LI><a href="#[55]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[55]">DebugMon_Handler</a><BR>
 <LI><a href="#[58]">Interrupt0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[58]">Interrupt0_Handler</a><BR>
 <LI><a href="#[59]">Interrupt1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[59]">Interrupt1_Handler</a><BR>
 <LI><a href="#[5a]">Interrupt2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5a]">Interrupt2_Handler</a><BR>
 <LI><a href="#[5c]">Interrupt4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5c]">Interrupt4_Handler</a><BR>
 <LI><a href="#[5d]">Interrupt5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5d]">Interrupt5_Handler</a><BR>
 <LI><a href="#[5e]">Interrupt6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5e]">Interrupt6_Handler</a><BR>
 <LI><a href="#[5f]">Interrupt7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5f]">Interrupt7_Handler</a><BR>
 <LI><a href="#[60]">Interrupt8_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[60]">Interrupt8_Handler</a><BR>
 <LI><a href="#[61]">Interrupt9_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[61]">Interrupt9_Handler</a><BR>
 <LI><a href="#[401]">osThreadFlagsSet</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3a5]">osRtxPostProcess</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[5b]">AHB_DMA_IRQHandler</a> from kdp520_dma.o(i.AHB_DMA_IRQHandler) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[5b]">AHB_DMA_IRQHandler</a> from kdp520_dma.o(i.AHB_DMA_IRQHandler) referenced from kdp520_dma.o(i.kdp_dma_enable_dma_int)
 <LI><a href="#[52]">BusFault_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[55]">DebugMon_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[62]">GPIO010_IRQHandler</a> from kdp520_gpio.o(i.GPIO010_IRQHandler) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[62]">GPIO010_IRQHandler</a> from kdp520_gpio.o(i.GPIO010_IRQHandler) referenced from main.o(i.main)
 <LI><a href="#[50]">HardFault_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[58]">Interrupt0_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[59]">Interrupt1_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[5a]">Interrupt2_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[5c]">Interrupt4_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[5d]">Interrupt5_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[5e]">Interrupt6_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[5f]">Interrupt7_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[60]">Interrupt8_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[61]">Interrupt9_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[51]">MemManage_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[6c]">NCPU_IRQHandler</a> from kdp_com.o(i.NCPU_IRQHandler) referenced from kdp_com.o(i.kdp_com_init)
 <LI><a href="#[4f]">NMI_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[6d]">PWMTMR1_IRQHandler</a> from kdp520_pwm_timer.o(i.PWMTMR1_IRQHandler) referenced from kdp520_pwm_timer.o(i.kdp_timer_init)
 <LI><a href="#[6e]">PWMTMR2_IRQHandler</a> from kdp520_pwm_timer.o(i.PWMTMR2_IRQHandler) referenced from kdp520_pwm_timer.o(i.kdp_timer_init)
 <LI><a href="#[6f]">PWMTMR3_IRQHandler</a> from kdp520_pwm_timer.o(i.PWMTMR3_IRQHandler) referenced from kdp520_pwm_timer.o(i.kdp_timer_init)
 <LI><a href="#[70]">PWMTMR4_IRQHandler</a> from kdp520_pwm_timer.o(i.PWMTMR4_IRQHandler) referenced from kdp520_pwm_timer.o(i.kdp_timer_init)
 <LI><a href="#[71]">PWMTMR5_IRQHandler</a> from kdp520_pwm_timer.o(i.PWMTMR5_IRQHandler) referenced from kdp520_pwm_timer.o(i.kdp_timer_init)
 <LI><a href="#[72]">PWMTMR6_IRQHandler</a> from kdp520_pwm_timer.o(i.PWMTMR6_IRQHandler) referenced from kdp520_pwm_timer.o(i.kdp_timer_init)
 <LI><a href="#[56]">PendSV_Handler</a> from irq_armv7m.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[4e]">Reset_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[54]">SVC_Handler</a> from irq_armv7m.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[57]">SysTick_Handler</a> from irq_armv7m.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[57]">SysTick_Handler</a> from irq_armv7m.o(.text) referenced from rtx_kernel.o(i.svcRtxKernelStart)
 <LI><a href="#[64]">SystemInit</a> from system_armcm4.o(i.SystemInit) referenced from startup_armcm4.o(.text)
 <LI><a href="#[73]">TickTimer1</a> from kdp520_tmr.o(i.TickTimer1) referenced from kdp520_tmr.o(i.kdp_tmr_init)
 <LI><a href="#[74]">TickTimer2</a> from kdp520_tmr.o(i.TickTimer2) referenced from kdp520_tmr.o(i.kdp_tmr_init)
 <LI><a href="#[75]">TickTimer3</a> from kdp520_tmr.o(i.TickTimer3) referenced from kdp520_tmr.o(i.kdp_tmr_init)
 <LI><a href="#[0]">UART0_ISR</a> from kdp_uart.o(i.UART0_ISR) referenced 2 times from kdp_uart.o(.data)
 <LI><a href="#[1]">UART1_ISR</a> from kdp_uart.o(i.UART1_ISR) referenced 2 times from kdp_uart.o(.data)
 <LI><a href="#[2]">UART2_ISR</a> from kdp_uart.o(i.UART2_ISR) referenced 2 times from kdp_uart.o(.data)
 <LI><a href="#[76]">UART2_callback</a> from host_uart_com.o(i.UART2_callback) referenced from host_uart_com.o(i.kdp_uart_app_com)
 <LI><a href="#[3]">UART3_ISR</a> from kdp_uart.o(i.UART3_ISR) referenced 2 times from kdp_uart.o(.data)
 <LI><a href="#[4]">UART4_ISR</a> from kdp_uart.o(i.UART4_ISR) referenced 2 times from kdp_uart.o(.data)
 <LI><a href="#[77]">UART4_callback</a> from host_uart_com.o(i.UART4_callback) referenced from host_uart_com.o(i.kdp_uart_app_com)
 <LI><a href="#[53]">UsageFault_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[65]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_armcm4.o(.text)
 <LI><a href="#[9]">_kdp520_i2c_init</a> from kdp520_i2c.o(i._kdp520_i2c_init) referenced 4 times from kdp520_i2c.o(.data)
 <LI><a href="#[7]">_kdp520_i2c_power</a> from kdp520_i2c.o(i._kdp520_i2c_power) referenced 4 times from kdp520_i2c.o(.data)
 <LI><a href="#[5]">_kdp520_i2c_probe</a> from kdp520_i2c.o(i._kdp520_i2c_probe) referenced 4 times from kdp520_i2c.o(.data)
 <LI><a href="#[c]">_kdp520_i2c_read</a> from kdp520_i2c.o(i._kdp520_i2c_read) referenced 4 times from kdp520_i2c.o(.data)
 <LI><a href="#[d]">_kdp520_i2c_read_bytes</a> from kdp520_i2c.o(i._kdp520_i2c_read_bytes) referenced 4 times from kdp520_i2c.o(.data)
 <LI><a href="#[6]">_kdp520_i2c_remove</a> from kdp520_i2c.o(i._kdp520_i2c_remove) referenced 4 times from kdp520_i2c.o(.data)
 <LI><a href="#[a]">_kdp520_i2c_reset</a> from kdp520_i2c.o(i._kdp520_i2c_reset) referenced 4 times from kdp520_i2c.o(.data)
 <LI><a href="#[8]">_kdp520_i2c_set_params</a> from kdp520_i2c.o(i._kdp520_i2c_set_params) referenced 4 times from kdp520_i2c.o(.data)
 <LI><a href="#[b]">_kdp520_i2c_write</a> from kdp520_i2c.o(i._kdp520_i2c_write) referenced 4 times from kdp520_i2c.o(.data)
 <LI><a href="#[67]">_kdp520_i2c_xfer</a> from kdp520_i2c.o(i._kdp520_i2c_xfer) referenced from kdp520_i2c.o(i._kdp520_i2c_probe)
 <LI><a href="#[68]">_kl520_fdfr_drawing_timer_cb</a> from kl520_api_fdfr.o(i._kl520_fdfr_drawing_timer_cb) referenced from kl520_api_fdfr.o(i._kl520_fdfr_drawing_timer_create)
 <LI><a href="#[66]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[66]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[79]">_tasks_init_cameras_thread</a> from kl520_api_fdfr.o(i._tasks_init_cameras_thread) referenced from kl520_api_fdfr.o(i.kl520_api_tasks_init)
 <LI><a href="#[7b]">_tasks_init_flash_load_thread_each</a> from kl520_api_fdfr.o(i._tasks_init_flash_load_thread_each) referenced from kl520_api_fdfr.o(i.kl520_api_tasks_init)
 <LI><a href="#[7a]">_tasks_init_models_thread</a> from kl520_api_fdfr.o(i._tasks_init_models_thread) referenced from kl520_api_fdfr.o(i.kl520_api_tasks_init)
 <LI><a href="#[69]">_user_com_fdfr_thread</a> from kdp_comm_and_gui_fdr.o(i._user_com_fdfr_thread) referenced from kdp_comm_and_gui_fdr.o(i.init_user_com_thread)
 <LI><a href="#[78]">api_fdfr_thread</a> from kl520_api_fdfr.o(i.api_fdfr_thread) referenced from kl520_api_fdfr.o(i.kl520_api_fdfr_init_thrd)
 <LI><a href="#[6a]">camera_isr_0</a> from kdp_camera_kl520.o(i.camera_isr_0) referenced from kdp_camera_kl520.o(i.kdp_camera_kl520_init)
 <LI><a href="#[6b]">camera_isr_1</a> from kdp_camera_kl520.o(i.camera_isr_1) referenced from kdp_camera_kl520.o(i.kdp_camera_kl520_init)
 <LI><a href="#[a2]">fdfr_update_fr_thread</a> from kl520_api_fdfr.o(i.fdfr_update_fr_thread) referenced from kl520_api_fdfr.o(i.fdfr_update_fr_entry)
 <LI><a href="#[21]">kdp520_cam_buffer_init</a> from kdp_camera_kl520.o(i.kdp520_cam_buffer_init) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[1e]">kdp520_cam_close</a> from kdp_camera_kl520.o(i.kdp520_cam_close) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[20]">kdp520_cam_get_format</a> from kdp_camera_kl520.o(i.kdp520_cam_get_format) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[27]">kdp520_cam_get_lux</a> from kdp_camera_kl520.o(i.kdp520_cam_get_lux) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[1d]">kdp520_cam_open</a> from kdp_camera_kl520.o(i.kdp520_cam_open) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[24]">kdp520_cam_query_capability</a> from kdp_camera_kl520.o(i.kdp520_cam_query_capability) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[28]">kdp520_cam_set_aec_roi</a> from kdp_camera_kl520.o(i.kdp520_cam_set_aec_roi) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[26]">kdp520_cam_set_exp_time</a> from kdp_camera_kl520.o(i.kdp520_cam_set_exp_time) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[2a]">kdp520_cam_set_flip</a> from kdp_camera_kl520.o(i.kdp520_cam_set_flip) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[1f]">kdp520_cam_set_format</a> from kdp_camera_kl520.o(i.kdp520_cam_set_format) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[2d]">kdp520_cam_set_fps</a> from kdp_camera_kl520.o(i.kdp520_cam_set_fps) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[25]">kdp520_cam_set_gain</a> from kdp_camera_kl520.o(i.kdp520_cam_set_gain) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[2b]">kdp520_cam_set_led</a> from kdp_camera_kl520.o(i.kdp520_cam_set_led) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[29]">kdp520_cam_set_mirror</a> from kdp_camera_kl520.o(i.kdp520_cam_set_mirror) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[2f]">kdp520_cam_sleep</a> from kdp_camera_kl520.o(i.kdp520_cam_sleep) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[22]">kdp520_cam_start_capture</a> from kdp_camera_kl520.o(i.kdp520_cam_start_capture) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[23]">kdp520_cam_stop_capture</a> from kdp_camera_kl520.o(i.kdp520_cam_stop_capture) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[2c]">kdp520_get_device_id</a> from kdp_camera_kl520.o(i.kdp520_get_device_id) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[30]">kdp520_get_tile_en</a> from kdp_camera_kl520.o(i.kdp520_get_tile_en) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[2e]">kdp520_set_aec_en</a> from kdp_camera_kl520.o(i.kdp520_set_aec_en) referenced 2 times from kdp_camera_kl520.o(.data)
 <LI><a href="#[3f]">kdp520_spi_initialize</a> from kdp520_spi.o(i.kdp520_spi_initialize) referenced 2 times from w25q256jv.o(.data)
 <LI><a href="#[e]">kdp520_virtual_dp_attach_panel</a> from kdp520_virtual_dp.o(i.kdp520_virtual_dp_attach_panel) referenced 2 times from kdp520_virtual_dp.o(.data)
 <LI><a href="#[1b]">kdp520_virtual_dp_draw_bitmap</a> from kdp520_virtual_dp.o(i.kdp520_virtual_dp_draw_bitmap) referenced 2 times from kdp520_virtual_dp.o(.data)
 <LI><a href="#[19]">kdp520_virtual_dp_draw_line</a> from kdp520_virtual_dp.o(i.kdp520_virtual_dp_draw_line) referenced 2 times from kdp520_virtual_dp.o(.data)
 <LI><a href="#[18]">kdp520_virtual_dp_draw_rect</a> from kdp520_virtual_dp.o(i.kdp520_virtual_dp_draw_rect) referenced 2 times from kdp520_virtual_dp.o(.data)
 <LI><a href="#[1a]">kdp520_virtual_dp_fill_rect</a> from kdp520_virtual_dp.o(i.kdp520_virtual_dp_fill_rect) referenced 2 times from kdp520_virtual_dp.o(.data)
 <LI><a href="#[1c]">kdp520_virtual_dp_fresh</a> from kdp520_virtual_dp.o(i.kdp520_virtual_dp_fresh) referenced 2 times from kdp520_virtual_dp.o(.data)
 <LI><a href="#[12]">kdp520_virtual_dp_get_buffer_addr</a> from kdp520_virtual_dp.o(i.kdp520_virtual_dp_get_buffer_addr) referenced 2 times from kdp520_virtual_dp.o(.data)
 <LI><a href="#[10]">kdp520_virtual_dp_get_params</a> from kdp520_virtual_dp.o(i.kdp520_virtual_dp_get_params) referenced 2 times from kdp520_virtual_dp.o(.data)
 <LI><a href="#[13]">kdp520_virtual_dp_init</a> from kdp520_virtual_dp.o(i.kdp520_virtual_dp_init) referenced 2 times from kdp520_virtual_dp.o(.data)
 <LI><a href="#[11]">kdp520_virtual_dp_set_camera</a> from kdp520_virtual_dp.o(i.kdp520_virtual_dp_set_camera) referenced 2 times from kdp520_virtual_dp.o(.data)
 <LI><a href="#[f]">kdp520_virtual_dp_set_params</a> from kdp520_virtual_dp.o(i.kdp520_virtual_dp_set_params) referenced 2 times from kdp520_virtual_dp.o(.data)
 <LI><a href="#[17]">kdp520_virtual_dp_set_pen</a> from kdp520_virtual_dp.o(i.kdp520_virtual_dp_set_pen) referenced 2 times from kdp520_virtual_dp.o(.data)
 <LI><a href="#[16]">kdp520_virtual_dp_set_source</a> from kdp520_virtual_dp.o(i.kdp520_virtual_dp_set_source) referenced 2 times from kdp520_virtual_dp.o(.data)
 <LI><a href="#[14]">kdp520_virtual_dp_start</a> from kdp520_virtual_dp.o(i.kdp520_virtual_dp_start) referenced 2 times from kdp520_virtual_dp.o(.data)
 <LI><a href="#[15]">kdp520_virtual_dp_stop</a> from kdp520_virtual_dp.o(i.kdp520_virtual_dp_stop) referenced 2 times from kdp520_virtual_dp.o(.data)
 <LI><a href="#[a1]">kl520_com_thread</a> from kdp_comm.o(i.kl520_com_thread) referenced from ota.o(i.Drv_OTA_Thread)
 <LI><a href="#[b4]">kmdw_model_ipc_handler</a> from kdp_model.o(i.kmdw_model_ipc_handler) referenced from kdp_model.o(i.kdp_ipc_init)
 <LI><a href="#[4c]">kneron_lwcom_packet_analyze</a> from kdp_comm.o(i.kneron_lwcom_packet_analyze) referenced 2 times from kdp_comm_and_gui_fdr.o(.data)
 <LI><a href="#[63]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[9d]">nir_camera_power_off</a> from user_io.o(i.nir_camera_power_off) referenced from user_io.o(i.user_io_init)
 <LI><a href="#[9e]">nir_camera_power_on</a> from user_io.o(i.nir_camera_power_on) referenced from user_io.o(i.user_io_init)
 <LI><a href="#[98]">nir_led_close</a> from user_io.o(i.nir_led_close) referenced from user_io.o(i.user_io_init)
 <LI><a href="#[99]">nir_led_open</a> from user_io.o(i.nir_led_open) referenced from user_io.o(i.user_io_init)
 <LI><a href="#[43]">norflash_4k_erase</a> from w25q256jv.o(i.norflash_4k_erase) referenced 2 times from w25q256jv.o(.data)
 <LI><a href="#[44]">norflash_64k_erase</a> from w25q256jv.o(i.norflash_64k_erase) referenced 2 times from w25q256jv.o(.data)
 <LI><a href="#[45]">norflash_chip_erase</a> from w25q256jv.o(i.norflash_chip_erase) referenced 2 times from w25q256jv.o(.data)
 <LI><a href="#[42]">norflash_erase_multi_sector</a> from w25q256jv.o(i.norflash_erase_multi_sector) referenced 2 times from w25q256jv.o(.data)
 <LI><a href="#[46]">norflash_get_info</a> from w25q256jv.o(i.norflash_get_info) referenced 2 times from w25q256jv.o(.data)
 <LI><a href="#[48]">norflash_get_status</a> from w25q256jv.o(i.norflash_get_status) referenced 2 times from w25q256jv.o(.data)
 <LI><a href="#[47]">norflash_id</a> from w25q256jv.o(i.norflash_id) referenced 2 times from w25q256jv.o(.data)
 <LI><a href="#[40]">norflash_program</a> from w25q256jv.o(i.norflash_program) referenced 2 times from w25q256jv.o(.data)
 <LI><a href="#[41]">norflash_read</a> from w25q256jv.o(i.norflash_read) referenced 2 times from w25q256jv.o(.data)
 <LI><a href="#[49]">norflash_set_protect_bypass</a> from w25q256jv.o(i.norflash_set_protect_bypass) referenced 2 times from w25q256jv.o(.data)
 <LI><a href="#[92]">osRtxEventFlagsPostProcess</a> from rtx_evflags.o(i.osRtxEventFlagsPostProcess) referenced from rtx_evflags.o(i.svcRtxEventFlagsNew)
 <LI><a href="#[85]">osRtxIdleThread</a> from rtx_config.o(i.osRtxIdleThread) referenced from rtx_thread.o(i.osRtxThreadStartup)
 <LI><a href="#[93]">osRtxMessageQueuePostProcess</a> from rtx_msgqueue.o(i.osRtxMessageQueuePostProcess) referenced from rtx_msgqueue.o(i.svcRtxMessageQueueNew)
 <LI><a href="#[94]">osRtxSemaphorePostProcess</a> from rtx_semaphore.o(i.osRtxSemaphorePostProcess) referenced from rtx_semaphore.o(i.svcRtxSemaphoreNew)
 <LI><a href="#[96]">osRtxThreadPostProcess</a> from rtx_thread.o(i.osRtxThreadPostProcess) referenced from rtx_thread.o(i.svcRtxThreadNew)
 <LI><a href="#[b7]">osRtxTimerSetup</a> from rtx_timer.o(i.osRtxTimerSetup) referenced from rtx_lib.o(.rodata)
 <LI><a href="#[b6]">osRtxTimerThread</a> from rtx_timer.o(i.osRtxTimerThread) referenced from rtx_lib.o(.rodata)
 <LI><a href="#[a9]">osRtxTimerTick</a> from rtx_timer.o(i.osRtxTimerTick) referenced from rtx_timer.o(i.osRtxTimerSetup)
 <LI><a href="#[95]">osThreadExit</a> from rtx_thread.o(i.osThreadExit) referenced from rtx_thread.o(i.svcRtxThreadNew)
 <LI><a href="#[4b]">ota_update_deep_sleep</a> from ota_update.o(i.ota_update_deep_sleep) referenced 2 times from ota_update.o(.data)
 <LI><a href="#[4a]">ota_update_sleep</a> from ota_update.o(i.ota_update_sleep) referenced 2 times from ota_update.o(.data)
 <LI><a href="#[8c]">power_manager_thread</a> from power_manager.o(i.power_manager_thread) referenced from power_manager.o(i.power_manager_init)
 <LI><a href="#[9f]">rgb_camera_power_off</a> from user_io.o(i.rgb_camera_power_off) referenced from user_io.o(i.user_io_init)
 <LI><a href="#[a0]">rgb_camera_power_on</a> from user_io.o(i.rgb_camera_power_on) referenced from user_io.o(i.user_io_init)
 <LI><a href="#[9a]">rgb_led_close</a> from user_io.o(i.rgb_led_close) referenced from user_io.o(i.user_io_init)
 <LI><a href="#[9b]">rgb_led_open</a> from user_io.o(i.rgb_led_open) referenced from user_io.o(i.user_io_init)
 <LI><a href="#[8f]">scpu_bus_fault</a> from power_manager.o(i.scpu_bus_fault) referenced from power_manager.o(i.power_manager_init)
 <LI><a href="#[8d]">scpu_hard_fault</a> from power_manager.o(i.scpu_hard_fault) referenced from power_manager.o(i.power_manager_init)
 <LI><a href="#[8e]">scpu_mem_mnmt</a> from power_manager.o(i.scpu_mem_mnmt) referenced from power_manager.o(i.power_manager_init)
 <LI><a href="#[90]">scpu_usage_fault</a> from power_manager.o(i.scpu_usage_fault) referenced from power_manager.o(i.power_manager_init)
 <LI><a href="#[91]">scpu_wait_reset</a> from power_manager.o(i.scpu_wait_reset) referenced from power_manager.o(i.scpu_hard_fault)
 <LI><a href="#[91]">scpu_wait_reset</a> from power_manager.o(i.scpu_wait_reset) referenced from power_manager.o(i.scpu_mem_mnmt)
 <LI><a href="#[39]">sp2509_l_sensor_get_id</a> from sp2509.o(i.sp2509_l_sensor_get_id) referenced 2 times from sp2509.o(.data)
 <LI><a href="#[38]">sp2509_l_sensor_set_exp_time</a> from sp2509.o(i.sp2509_l_sensor_set_exp_time) referenced 2 times from sp2509.o(.data)
 <LI><a href="#[36]">sp2509_l_sensor_set_fmt</a> from sp2509.o(i.sp2509_l_sensor_set_fmt) referenced 2 times from sp2509.o(.data)
 <LI><a href="#[37]">sp2509_l_sensor_set_gain</a> from sp2509.o(i.sp2509_l_sensor_set_gain) referenced 2 times from sp2509.o(.data)
 <LI><a href="#[35]">sp2509_r_sensor_get_id</a> from sp2509.o(i.sp2509_r_sensor_get_id) referenced 2 times from sp2509.o(.data)
 <LI><a href="#[34]">sp2509_r_sensor_set_exp_time</a> from sp2509.o(i.sp2509_r_sensor_set_exp_time) referenced 2 times from sp2509.o(.data)
 <LI><a href="#[32]">sp2509_r_sensor_set_fmt</a> from sp2509.o(i.sp2509_r_sensor_set_fmt) referenced 2 times from sp2509.o(.data)
 <LI><a href="#[33]">sp2509_r_sensor_set_gain</a> from sp2509.o(i.sp2509_r_sensor_set_gain) referenced 2 times from sp2509.o(.data)
 <LI><a href="#[31]">sp2509_sensor_enum_fmt</a> from sp2509.o(i.sp2509_sensor_enum_fmt) referenced 4 times from sp2509.o(.data)
 <LI><a href="#[7c]">svcRtxDelay</a> from rtx_delay.o(i.svcRtxDelay) referenced from rtx_delay.o(i.osDelay)
 <LI><a href="#[a3]">svcRtxEventFlagsClear</a> from rtx_evflags.o(i.svcRtxEventFlagsClear) referenced from rtx_evflags.o(i.osEventFlagsClear)
 <LI><a href="#[a4]">svcRtxEventFlagsNew</a> from rtx_evflags.o(i.svcRtxEventFlagsNew) referenced from rtx_evflags.o(i.osEventFlagsNew)
 <LI><a href="#[7d]">svcRtxEventFlagsSet</a> from rtx_evflags.o(i.svcRtxEventFlagsSet) referenced from rtx_evflags.o(i.osEventFlagsSet)
 <LI><a href="#[7e]">svcRtxEventFlagsWait</a> from rtx_evflags.o(i.svcRtxEventFlagsWait) referenced from rtx_evflags.o(i.osEventFlagsWait)
 <LI><a href="#[7f]">svcRtxKernelGetInfo</a> from rtx_kernel.o(i.svcRtxKernelGetInfo) referenced from rtx_kernel.o(i.osKernelGetInfo)
 <LI><a href="#[80]">svcRtxKernelGetState</a> from rtx_kernel.o(i.svcRtxKernelGetState) referenced from rtx_kernel.o(i.osKernelGetState)
 <LI><a href="#[a5]">svcRtxKernelGetTickCount</a> from rtx_kernel.o(i.svcRtxKernelGetTickCount) referenced from rtx_kernel.o(i.osKernelGetTickCount)
 <LI><a href="#[a6]">svcRtxKernelInitialize</a> from rtx_kernel.o(i.svcRtxKernelInitialize) referenced from rtx_kernel.o(i.osKernelInitialize)
 <LI><a href="#[81]">svcRtxKernelStart</a> from rtx_kernel.o(i.svcRtxKernelStart) referenced from rtx_kernel.o(i.osKernelStart)
 <LI><a href="#[82]">svcRtxMessageQueueGet</a> from rtx_msgqueue.o(i.svcRtxMessageQueueGet) referenced from rtx_msgqueue.o(i.osMessageQueueGet)
 <LI><a href="#[83]">svcRtxMessageQueuePut</a> from rtx_msgqueue.o(i.svcRtxMessageQueuePut) referenced from rtx_msgqueue.o(i.osMessageQueuePut)
 <LI><a href="#[84]">svcRtxMutexAcquire</a> from rtx_mutex.o(i.svcRtxMutexAcquire) referenced from rtx_mutex.o(i.osMutexAcquire)
 <LI><a href="#[a7]">svcRtxMutexNew</a> from rtx_mutex.o(i.svcRtxMutexNew) referenced from rtx_mutex.o(i.osMutexNew)
 <LI><a href="#[a8]">svcRtxMutexRelease</a> from rtx_mutex.o(i.svcRtxMutexRelease) referenced from rtx_mutex.o(i.osMutexRelease)
 <LI><a href="#[86]">svcRtxSemaphoreAcquire</a> from rtx_semaphore.o(i.svcRtxSemaphoreAcquire) referenced from rtx_semaphore.o(i.osSemaphoreAcquire)
 <LI><a href="#[aa]">svcRtxSemaphoreNew</a> from rtx_semaphore.o(i.svcRtxSemaphoreNew) referenced from rtx_semaphore.o(i.osSemaphoreNew)
 <LI><a href="#[87]">svcRtxSemaphoreRelease</a> from rtx_semaphore.o(i.svcRtxSemaphoreRelease) referenced from rtx_semaphore.o(i.osSemaphoreRelease)
 <LI><a href="#[b5]">svcRtxThreadExit</a> from rtx_thread.o(i.svcRtxThreadExit) referenced from rtx_thread.o(i.osThreadExit)
 <LI><a href="#[ab]">svcRtxThreadFlagsClear</a> from rtx_thread.o(i.svcRtxThreadFlagsClear) referenced from rtx_thread.o(i.osThreadFlagsClear)
 <LI><a href="#[88]">svcRtxThreadFlagsGet</a> from rtx_thread.o(i.svcRtxThreadFlagsGet) referenced from rtx_thread.o(i.osThreadFlagsGet)
 <LI><a href="#[89]">svcRtxThreadFlagsSet</a> from rtx_thread.o(i.svcRtxThreadFlagsSet) referenced from rtx_thread.o(i.osThreadFlagsSet)
 <LI><a href="#[ac]">svcRtxThreadFlagsWait</a> from rtx_thread.o(i.svcRtxThreadFlagsWait) referenced from rtx_thread.o(i.osThreadFlagsWait)
 <LI><a href="#[ad]">svcRtxThreadGetId</a> from rtx_thread.o(i.svcRtxThreadGetId) referenced from rtx_thread.o(i.osThreadGetId)
 <LI><a href="#[ae]">svcRtxThreadGetPriority</a> from rtx_thread.o(i.svcRtxThreadGetPriority) referenced from rtx_thread.o(i.osThreadGetPriority)
 <LI><a href="#[8a]">svcRtxThreadNew</a> from rtx_thread.o(i.svcRtxThreadNew) referenced from rtx_thread.o(i.osThreadNew)
 <LI><a href="#[af]">svcRtxThreadSetPriority</a> from rtx_thread.o(i.svcRtxThreadSetPriority) referenced from rtx_thread.o(i.osThreadSetPriority)
 <LI><a href="#[8b]">svcRtxTimerDelete</a> from rtx_timer.o(i.svcRtxTimerDelete) referenced from rtx_timer.o(i.osTimerDelete)
 <LI><a href="#[b0]">svcRtxTimerIsRunning</a> from rtx_timer.o(i.svcRtxTimerIsRunning) referenced from rtx_timer.o(i.osTimerIsRunning)
 <LI><a href="#[b1]">svcRtxTimerNew</a> from rtx_timer.o(i.svcRtxTimerNew) referenced from rtx_timer.o(i.osTimerNew)
 <LI><a href="#[b2]">svcRtxTimerStart</a> from rtx_timer.o(i.svcRtxTimerStart) referenced from rtx_timer.o(i.osTimerStart)
 <LI><a href="#[b3]">svcRtxTimerStop</a> from rtx_timer.o(i.svcRtxTimerStop) referenced from rtx_timer.o(i.osTimerStop)
 <LI><a href="#[97]">system_isr</a> from system.o(i.system_isr) referenced from system.o(i.system_init)
 <LI><a href="#[9c]">user_io_light_sensor_get</a> from user_io.o(i.user_io_light_sensor_get) referenced from user_io.o(i.user_io_init)
 <LI><a href="#[4d]">user_lwcom_parser</a> from kdp_comm_and_gui_fdr.o(i.user_lwcom_parser) referenced 2 times from kdp_comm_and_gui_fdr.o(.data)
 <LI><a href="#[3b]">virtual_dp_clear</a> from virtual_dp.o(i.virtual_dp_clear) referenced 2 times from virtual_dp.o(.data)
 <LI><a href="#[3a]">virtual_dp_init</a> from virtual_dp.o(i.virtual_dp_init) referenced 2 times from virtual_dp.o(.data)
 <LI><a href="#[3e]">virtual_dp_preproc_nir</a> from virtual_dp.o(i.virtual_dp_preproc_nir) referenced 2 times from virtual_dp.o(.data)
 <LI><a href="#[3d]">virtual_dp_preproc_rgb</a> from virtual_dp.o(i.virtual_dp_preproc_rgb) referenced 2 times from virtual_dp.o(.data)
 <LI><a href="#[3c]">virtual_dp_read_display_id</a> from virtual_dp.o(i.virtual_dp_read_display_id) referenced 2 times from virtual_dp.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[48c]"></a>DSM_Uart_Get_Cur_Part</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, kdp_comm_app.o(i.DSM_Uart_Get_Cur_Part))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = DSM_Uart_Get_Cur_Part &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_get_scpu_flag_status
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[47d]"></a>DSM_Uart_Get_Version_Info_zhian</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, kdp_comm_app.o(i.DSM_Uart_Get_Version_Info_zhian))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DSM_Uart_Get_Version_Info_zhian &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_scpu_version
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[488]"></a>DSM_Uart_SnapImage</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, kdp_comm_app.o(i.DSM_Uart_SnapImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DSM_Uart_SnapImage
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[194]"></a>DSM_Uart_StopOta</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, kdp_comm_app.o(i.DSM_Uart_StopOta))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_ota_process
</UL>

<P><STRONG><a name="[4d1]"></a>DecBytes</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, kdp_comm_aes.o(i.DecBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DecBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PkgDecrypt
</UL>

<P><STRONG><a name="[4ba]"></a>Drv_OTA_Thread</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, ota.o(i.Drv_OTA_Thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = Drv_OTA_Thread &rArr; kl520_com_init &rArr; kdp_uart_app_com &rArr; kdp_uart_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_bus_init
</UL>

<P><STRONG><a name="[129]"></a>MD5Encode</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, kdp_comm_md5.o(i.MD5Encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MD5Encode
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Final
</UL>

<P><STRONG><a name="[447]"></a>OS_Tick_Enable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, os_systick.o(i.OS_Tick_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[70]"></a>PWMTMR4_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, kdp520_pwm_timer.o(i.PWMTMR4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWMTMR4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_tmr4_user
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_int_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_pwm_timer.o(i.kdp_timer_init)
</UL>
<P><STRONG><a name="[72]"></a>PWMTMR6_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, kdp520_pwm_timer.o(i.PWMTMR6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWMTMR6_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_tmr6_user
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_int_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_pwm_timer.o(i.kdp_timer_init)
</UL>
<P><STRONG><a name="[371]"></a>PkgDecrypt</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, kdp_comm_protoco.o(i.PkgDecrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = PkgDecrypt &rArr; aesDecrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesDecrypt
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kneron_lwcom_packet_analyze
</UL>

<P><STRONG><a name="[4d4]"></a>SetClkSource</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, kdp520_tmr.o(i.SetClkSource))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_IOCtrl
</UL>

<P><STRONG><a name="[4d3]"></a>SetTick</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, kdp520_tmr.o(i.SetTick))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_IOCtrl
</UL>

<P><STRONG><a name="[46e]"></a>SysWaitDelayTime</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, kdp_comm_app.o(i.SysWaitDelayTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysWaitDelayTime &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_add_timeout
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[13f]"></a>Timer_IOCtrl</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, kdp520_tmr.o(i.Timer_IOCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Timer_IOCtrl &rArr; ResetAllTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTick
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetClkSource
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetAllTimer
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
</UL>

<P><STRONG><a name="[77]"></a>UART4_callback</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, host_uart_com.o(i.UART4_callback))
<BR>[Address Reference Count : 1]<UL><LI> host_uart_com.o(i.kdp_uart_app_com)
</UL>
<P><STRONG><a name="[4d5]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[501]"></a>__1vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[502]"></a>__2vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[503]"></a>__c89vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[2fc]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_printf_nocrlf
</UL>

<P><STRONG><a name="[169]"></a>_api_fdfr_chk_timeout</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, kl520_api_fdfr.o(i._api_fdfr_chk_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _api_fdfr_chk_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_current_t3_tick
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_liveness_event
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_handle_face_recog_error
</UL>

<P><STRONG><a name="[200]"></a>_api_fdfr_rst_timeout</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i._api_fdfr_rst_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _api_fdfr_rst_timeout &rArr; kl520_api_timer_init &rArr; kdp_timer_init &rArr; kdp_timer_ioctrl &rArr; kdp_timer_resetall
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_timer_init
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_current_t3_tick
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_open_event
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_face_add_normal_face
</UL>

<P><STRONG><a name="[1cc]"></a>_decide_age_group_enable</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i._decide_age_group_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _decide_age_group_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_only
</UL>

<P><STRONG><a name="[1cd]"></a>_decide_motion_detect_enable</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i._decide_motion_detect_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _decide_motion_detect_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_only
</UL>

<P><STRONG><a name="[1cf]"></a>_decide_nir_aec_continuous_tune_enable</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i._decide_nir_aec_continuous_tune_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _decide_nir_aec_continuous_tune_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_only
</UL>

<P><STRONG><a name="[1ce]"></a>_decide_nose_lm_diff_detect_enable</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i._decide_nose_lm_diff_detect_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _decide_nose_lm_diff_detect_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_only
</UL>

<P><STRONG><a name="[1d0]"></a>_decide_rgb_led_when_reg_enable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i._decide_rgb_led_when_reg_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _decide_rgb_led_when_reg_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_only
</UL>

<P><STRONG><a name="[4e4]"></a>_set_timer_tick</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kdp520_pwm_timer.o(i._set_timer_tick))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_ioctrl
</UL>

<P><STRONG><a name="[18b]"></a>_uart_face_del_some_users</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, kdp_comm_app.o(i._uart_face_del_some_users))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _uart_face_del_some_users &rArr; kl520_api_face_del &rArr; kl520_api_fdfr_model_init &rArr; kdp_e2e_face_init &rArr; kdp_e2e_config_image &rArr; kdp_app_get_pixel_size &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_find_exist_id
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_del
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_delete_user
</UL>

<P><STRONG><a name="[1f6]"></a>addRoundKey</STRONG> (Thumb, 62 bytes, Stack size 36 bytes, kdp_comm_aes.o(i.addRoundKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = addRoundKey
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesEncrypt
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesDecrypt
</UL>

<P><STRONG><a name="[260]"></a>calc_framesize</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, media.o(i.calc_framesize))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_virtual_dp_set_params
</UL>

<P><STRONG><a name="[21f]"></a>ddr_wakeup</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ddr.o(i.ddr_wakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ddr_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddr_init
</UL>

<P><STRONG><a name="[398]"></a>delay_ms</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, delay.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = delay_ms &rArr; delay_ms_enable &rArr; kdp_tmr_init &rArr; Timer_Init &rArr; Timer_SetIsr
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentT1Tick
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_get_info
</UL>

<P><STRONG><a name="[468]"></a>delay_ms_disable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, delay.o(i.delay_ms_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = delay_ms_disable &rArr; Timer_Close
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Close
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[460]"></a>delay_ms_enable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, delay.o(i.delay_ms_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = delay_ms_enable &rArr; kdp_tmr_init &rArr; Timer_Init &rArr; Timer_SetIsr
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_tmr_init
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[227]"></a>drv_read_all_model_crc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ota.o(i.drv_read_all_model_crc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = drv_read_all_model_crc &rArr; kdp_memxfer_flash_to_ddr &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_get_fwinfo_offset
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_crc_offset_in_fwinfo
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_main
</UL>

<P><STRONG><a name="[16d]"></a>fdfr_update_fr_entry</STRONG> (Thumb, 42 bytes, Stack size 48 bytes, kl520_api_fdfr.o(i.fdfr_update_fr_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = fdfr_update_fr_entry &rArr; osThreadNew
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_handle_fr_db_match
</UL>

<P><STRONG><a name="[173]"></a>get_mid</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, kdp_e2e_camera.o(i.get_mid))
<BR><BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_calc_skin_value_lm
</UL>

<P><STRONG><a name="[1f8]"></a>invSubBytes</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, kdp_comm_aes.o(i.invSubBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = invSubBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesDecrypt
</UL>

<P><STRONG><a name="[38b]"></a>kdp520_gpio_setdir</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, kdp520_gpio.o(i.kdp520_gpio_setdir))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp520_gpio_setdir
</UL>
<BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_camera_rst
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_led_init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_camera_power_on
</UL>

<P><STRONG><a name="[394]"></a>kdp520_spi_switch_fail</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, kdp520_spi.o(i.kdp520_spi_switch_fail))
<BR><BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_running
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_get_info
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_chip_erase
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_busy_check
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_64k_erase
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_4k_erase
</UL>

<P><STRONG><a name="[396]"></a>kdp520_spi_switch_org</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, kdp520_spi.o(i.kdp520_spi_switch_org))
<BR><BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_running
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_read
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_get_info
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_chip_erase
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_busy_check
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_64k_erase
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_4k_erase
</UL>

<P><STRONG><a name="[39b]"></a>kdp520_spi_write_Tx_FIFO</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, kdp520_spi.o(i.kdp520_spi_write_Tx_FIFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = kdp520_spi_write_Tx_FIFO
</UL>
<BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_wait_tx_empty
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_running
</UL>

<P><STRONG><a name="[390]"></a>kdp520_spi_write_data</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, kdp520_spi.o(i.kdp520_spi_write_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp520_spi_write_data
</UL>
<BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_wait_tx_empty
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_txfifo_depth
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nor_flash_quad_mode_en
</UL>

<P><STRONG><a name="[16]"></a>kdp520_virtual_dp_set_source</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, kdp520_virtual_dp.o(i.kdp520_virtual_dp_set_source))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp520_virtual_dp_set_source
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[150]"></a>kdp_api_camera_on_0</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, kl520_api_camera.o(i.kdp_api_camera_on_0))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_camera_open
</UL>

<P><STRONG><a name="[2aa]"></a>kdp_app_db_extra_data_write</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, kdp_app_db.o(i.kdp_app_db_extra_data_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_app_db_extra_data_write
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_usr_idx
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_extra_write
</UL>

<P><STRONG><a name="[4dc]"></a>kdp_app_db_init</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, kdp_app_db.o(i.kdp_app_db_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = kdp_app_db_init &rArr; kdp_ddr_reserve &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ddr_reserve
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_init
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_init_flash_load
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_init
</UL>

<P><STRONG><a name="[4dd]"></a>kdp_app_db_init_flash_load</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, kdp_app_db.o(i.kdp_app_db_init_flash_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = kdp_app_db_init_flash_load &rArr; kdp_memxfer_flash_to_ddr &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_init_flash_load
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_init
</UL>

<P><STRONG><a name="[33a]"></a>kdp_camera_close</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kdp_camera.o(i.kdp_camera_close))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_ctrl
</UL>

<P><STRONG><a name="[152]"></a>kdp_camera_open</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp_camera.o(i.kdp_camera_open))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_camera_open
</UL>

<P><STRONG><a name="[4b0]"></a>kdp_camera_query_capability</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, kdp_camera.o(i.kdp_camera_query_capability))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_camera_query_capability
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_get_device_info
</UL>

<P><STRONG><a name="[156]"></a>kdp_camera_set_exp_time</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, kdp_camera.o(i.kdp_camera_set_exp_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_camera_set_exp_time
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_camera_open
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_dual_cam_state
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aec_e2e_multiply_factor_set
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_preproc
</UL>

<P><STRONG><a name="[154]"></a>kdp_camera_set_frame_format</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, kdp_camera.o(i.kdp_camera_set_frame_format))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_camera_set_frame_format
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_camera_open
</UL>

<P><STRONG><a name="[337]"></a>kdp_camera_start</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp_camera.o(i.kdp_camera_start))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_ctrl
</UL>

<P><STRONG><a name="[225]"></a>kdp_clc_all_model_size</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, kdp_model.o(i.kdp_clc_all_model_size))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_main
</UL>

<P><STRONG><a name="[4b2]"></a>kdp_com_get_image_active</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, kdp_com.o(i.kdp_com_get_image_active))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = kdp_com_get_image_active
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_avail_com
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run
</UL>

<P><STRONG><a name="[36d]"></a>kdp_comm_post_process</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, kdp_comm.o(i.kdp_comm_post_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp_comm_post_process
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_comm_check_header
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_thread
</UL>

<P><STRONG><a name="[2fa]"></a>kdp_dma_disable_ch</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, kdp520_dma.o(i.kdp_dma_disable_ch))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snapshot_dma
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_to_ddr_dma_copy
</UL>

<P><STRONG><a name="[2f7]"></a>kdp_dma_enable_dma_int</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, kdp520_dma.o(i.kdp_dma_enable_dma_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_dma_enable_dma_int
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snapshot_dma
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_to_ddr_dma_copy
</UL>

<P><STRONG><a name="[2f5]"></a>kdp_dma_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, kdp520_dma.o(i.kdp_dma_init))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snapshot_dma
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_to_ddr_dma_copy
</UL>

<P><STRONG><a name="[4c5]"></a>kdp_drv_i2c_read</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, kdp520_i2c.o(i.kdp_drv_i2c_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kdp_drv_i2c_read
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_i2c_dev_drv
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_read_reg
</UL>

<P><STRONG><a name="[37d]"></a>kdp_drv_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, drivers.o(i.kdp_drv_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = kdp_drv_init &rArr; kdp_drv_i2c_init
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_drv_i2c_init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e3]"></a>kdp_e2e_db_extra_read</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, kdp_e2e_db.o(i.kdp_e2e_db_extra_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kdp_e2e_db_extra_read &rArr; mutex_unlock &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_unlock
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_lock_timeout
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_extra_data_read
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_usr_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_GetUserInfo
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_min_user_meet_thers
</UL>

<P><STRONG><a name="[e4]"></a>kdp_e2e_db_get_user_info_by_idx</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, kdp_e2e_db.o(i.kdp_e2e_db_get_user_info_by_idx))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = kdp_e2e_db_get_user_info_by_idx &rArr; kdp_e2e_db_ready_check &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_get_user_info_by_idx
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_usr_idx
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_ready_check
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_query_first_avail_user_idx
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_query_all
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_GetUserInfo
</UL>

<P><STRONG><a name="[355]"></a>kdp_e2e_db_init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, kdp_e2e_db.o(i.kdp_e2e_db_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = kdp_e2e_db_init &rArr; kdp_app_db_init &rArr; kdp_ddr_reserve &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ddr_reserve
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_init
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_model_init
</UL>

<P><STRONG><a name="[1e3]"></a>kdp_e2e_db_init_flash_load</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, kdp_e2e_db.o(i.kdp_e2e_db_init_flash_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = kdp_e2e_db_init_flash_load &rArr; kdp_app_db_init_flash_load &rArr; kdp_memxfer_flash_to_ddr &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_query
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_init_flash_load
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tasks_init_flash_load_thread_each
</UL>

<P><STRONG><a name="[1f0]"></a>kdp_e2e_nir_gain_clip_bound</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, kdp_e2e_camera.o(i.kdp_e2e_nir_gain_clip_bound))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_e2e_nir_gain_clip_bound
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aec_e2e_multiply_factor_set
</UL>

<P><STRONG><a name="[168]"></a>kdp_e2e_nir_led_flag_off</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, kdp_e2e_ctrl.o(i.kdp_e2e_nir_led_flag_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_e2e_nir_led_flag_off
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_handle_face_recog_error
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_dual_cam_state
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_fd_lm_combo
</UL>

<P><STRONG><a name="[2d3]"></a>kdp_e2e_nir_led_flag_on</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, kdp_e2e_ctrl.o(i.kdp_e2e_nir_led_flag_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_e2e_nir_led_flag_on
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_dual_cam_state
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_aec_tune_for_fd_search
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_preproc
</UL>

<P><STRONG><a name="[2cc]"></a>kdp_e2e_rst_n1_lm</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, kdp_e2e_face.o(i.kdp_e2e_rst_n1_lm))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_e2e_rst_n1_lm
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1
</UL>

<P><STRONG><a name="[2ca]"></a>kdp_e2e_rst_r1_fr</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, kdp_e2e_face.o(i.kdp_e2e_rst_r1_fr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp_e2e_rst_r1_fr
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1
</UL>

<P><STRONG><a name="[2c9]"></a>kdp_e2e_rst_r1_lm</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, kdp_e2e_face.o(i.kdp_e2e_rst_r1_lm))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_e2e_rst_r1_lm
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1
</UL>

<P><STRONG><a name="[4b8]"></a>kdp_e2e_settings_delete</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, kdp_e2e_settings.o(i.kdp_e2e_settings_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = kdp_e2e_settings_delete &rArr; kdp_memxfer_ddr_to_flash &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_ddr_to_flash
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_unlock
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_lock_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_settings_delete
</UL>

<P><STRONG><a name="[29e]"></a>kdp_e2e_settings_write</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, kdp_e2e_settings.o(i.kdp_e2e_settings_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = kdp_e2e_settings_write &rArr; kdp_memxfer_ddr_to_flash &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_ddr_to_flash
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_unlock
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_lock_timeout
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_add
</UL>

<P><STRONG><a name="[15b]"></a>kdp_e2e_util_get_person_position</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, kdp_e2e_util.o(i.kdp_e2e_util_get_person_position))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kdp_e2e_util_get_person_position
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_fd
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_util_collection
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_face_note
</UL>

<P><STRONG><a name="[164]"></a>kdp_fb_mgr_inf_done</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, kdp_fb_mgr.o(i.kdp_fb_mgr_inf_done))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = kdp_fb_mgr_inf_done &rArr; osSemaphoreRelease &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fb_sem_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_cam_prepare
</UL>

<P><STRONG><a name="[1a9]"></a>kdp_memxfer_ddr_to_flash</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, kdp_memxfer.o(i.kdp_memxfer_ddr_to_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = kdp_memxfer_ddr_to_flash &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_program_data
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_erase_multi_sectors
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_customer_write
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_update_force_switch_active_partition
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_delete
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_handle_first_time_boot
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_init_partition_boot_cfg
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_main
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_burn_in_config
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_save_ddr_to_flash
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_write
</UL>

<P><STRONG><a name="[1a8]"></a>kdp_memxfer_ddr_to_flash_wo_erase</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, kdp_memxfer.o(i.kdp_memxfer_ddr_to_flash_wo_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = kdp_memxfer_ddr_to_flash_wo_erase &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_program_data
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_save_ddr_to_flash
</UL>

<P><STRONG><a name="[273]"></a>kdp_memxfer_flash_sector_erase4k</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, kdp_memxfer.o(i.kdp_memxfer_flash_sector_erase4k))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kdp_memxfer_flash_sector_erase4k &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_erase_4k
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_delete
</UL>

<P><STRONG><a name="[310]"></a>kdp_model_get_raw_img</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, kdp_model.o(i.kdp_model_get_raw_img))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kdp_model_get_raw_img &rArr; kdp_model_get_raw_img_idx
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_output_ptr
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_raw_img_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run_ex
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_fr
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_face_quality
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_nir_lv
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_nir_hsn_lv
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_nir_eye_lv
</UL>

<P><STRONG><a name="[ec]"></a>kdp_model_load_model</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, kdp_model.o(i.kdp_model_load_model))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = kdp_model_load_model &rArr; _kdp_model_load_model_info &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_load_model_info
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_load_model
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tasks_init_flash_load_thread_each
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Kn_DeviceInfo
</UL>

<P><STRONG><a name="[101]"></a>kdp_printf_nocrlf</STRONG> (Thumb, 40 bytes, Stack size 280 bytes, dbg.o(i.kdp_printf_nocrlf))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = kdp_printf_nocrlf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_write
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_bin_double_check
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ota_MD5_checksum
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_OtaHeader
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_db_export
</UL>

<P><STRONG><a name="[4ad]"></a>kdp_sensor_get_device_id</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kdp_sensor.o(i.kdp_sensor_get_device_id))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_get_device_id
</UL>

<P><STRONG><a name="[4c4]"></a>kdp_sensor_register</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, kdp_sensor.o(i.kdp_sensor_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_sensor_register
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_r_sensor_init
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_l_sensor_init
</UL>

<P><STRONG><a name="[4a5]"></a>kdp_sensor_set_exp_time</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, kdp_sensor.o(i.kdp_sensor_set_exp_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_sensor_set_exp_time
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_set_exp_time
</UL>

<P><STRONG><a name="[4a6]"></a>kdp_sensor_set_flip</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp_sensor.o(i.kdp_sensor_set_flip))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_set_flip
</UL>

<P><STRONG><a name="[4a7]"></a>kdp_sensor_set_fps</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp_sensor.o(i.kdp_sensor_set_fps))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_set_fps
</UL>

<P><STRONG><a name="[4aa]"></a>kdp_sensor_set_mirror</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp_sensor.o(i.kdp_sensor_set_mirror))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_set_mirror
</UL>

<P><STRONG><a name="[31e]"></a>kdp_timer_enable</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, kdp520_pwm_timer.o(i.kdp_timer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_init
</UL>

<P><STRONG><a name="[137]"></a>kdp_timer_int_clear</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, kdp520_pwm_timer.o(i.kdp_timer_int_clear))
<BR><BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMTMR6_IRQHandler
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMTMR5_IRQHandler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMTMR4_IRQHandler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMTMR3_IRQHandler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMTMR2_IRQHandler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMTMR1_IRQHandler
</UL>

<P><STRONG><a name="[31d]"></a>kdp_timer_int_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp520_pwm_timer.o(i.kdp_timer_int_enable))
<BR><BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_init
</UL>

<P><STRONG><a name="[31b]"></a>kdp_timer_ioctrl</STRONG> (Thumb, 64 bytes, Stack size 4 bytes, kdp520_pwm_timer.o(i.kdp_timer_ioctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = kdp_timer_ioctrl &rArr; kdp_timer_resetall
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_resetall
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_timer_tick
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_timer_clk_source
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_timer_tick
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_init
</UL>

<P><STRONG><a name="[28c]"></a>kdp_uart_GetRxBufSize</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kdp_uart.o(i.kdp_uart_GetRxBufSize))
<BR><BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_comm_receive_data
</UL>

<P><STRONG><a name="[28d]"></a>kdp_uart_SetReadIndex</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp_uart.o(i.kdp_uart_SetReadIndex))
<BR><BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_comm_receive_data
</UL>

<P><STRONG><a name="[331]"></a>kdp_video_renderer_connect_display_panel</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, video_renderer.o(i.kdp_video_renderer_connect_display_panel))
<BR><BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_video_renderer_open
</UL>

<P><STRONG><a name="[188]"></a>kl520_api_cam_disp_state_rst</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, kl520_api_camera.o(i.kl520_api_cam_disp_state_rst))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = kl520_api_cam_disp_state_rst &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_reset_hmi_external_interface
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_user_com_fdfr_thread
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_delete_user
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_face_enroll_correct_direction
</UL>

<P><STRONG><a name="[f9]"></a>kl520_api_customer_chk_key_exist</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, kl520_api.o(i.kl520_api_customer_chk_key_exist))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kl520_api_customer_chk_key_exist
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Init_Encryption
</UL>

<P><STRONG><a name="[347]"></a>kl520_api_dp_five_face_disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_api_dp_five_face_disable))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
</UL>

<P><STRONG><a name="[f1]"></a>kl520_api_dp_get_device_id</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, kl520_api.o(i.kl520_api_dp_get_device_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = kl520_api_dp_get_device_id &rArr; kl520_api_dp_open &rArr; kdp_video_renderer_setting
</UL>
<BR>[Calls]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_display_get_device_id
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_dp_open
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_dp_close
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Kn_DeviceInfo
</UL>

<P><STRONG><a name="[1c1]"></a>kl520_api_face_preexecute_stage1</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i.kl520_api_face_preexecute_stage1))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = kl520_api_face_preexecute_stage1 &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_ctrl
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tasks_init_cameras_thread
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_face_preexecute
</UL>

<P><STRONG><a name="[4a0]"></a>kl520_api_fdfr_start</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i.kl520_api_fdfr_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = kl520_api_fdfr_start &rArr; osEventFlagsClear &rArr; svcRtxEventFlagsClear
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_event
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_thread_event
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsClear
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_try_create_thread
</UL>

<P><STRONG><a name="[ea]"></a>kl520_api_get_scpu_version</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_api_get_scpu_version))
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msgZhian
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;info
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_check_info
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_StartOta
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info_zhian_prd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info_zhian_hard
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info_zhian
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Kn_DeviceInfo
</UL>

<P><STRONG><a name="[210]"></a>kl520_api_save_to_snap_ddr</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, kl520_api_snapshot.o(i.kl520_api_save_to_snap_ddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = kl520_api_save_to_snap_ddr &rArr; kl520_api_snapshot_dma &rArr; kdp_dma_wait_dma_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snapshot_dma
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_snap_image_event
</UL>

<P><STRONG><a name="[498]"></a>kl520_engineering_calibration</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, kl520_api.o(i.kl520_engineering_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = kl520_engineering_calibration &rArr; kl520_api_face_add_internal &rArr; kl520_api_face_add &rArr; kl520_api_face_query_all &rArr; kl520_api_fdfr_model_init &rArr; kdp_e2e_face_init &rArr; kdp_e2e_config_image &rArr; kdp_app_get_pixel_size &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_set_add_mode
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add_set_timeout
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add_internal
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add_get_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_Uart_MP_Calibration
</UL>

<P><STRONG><a name="[213]"></a>kl520_face_recognition_note</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, kdp_comm_app.o(i.kl520_face_recognition_note))
<BR><BR>[Stack]<UL><LI>Max Depth = 804<LI>Call Chain = kl520_face_recognition_note &rArr; _api_face_note &rArr; send_EnrollOrVerify_note_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_get_result
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_face_note
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
</UL>

<P><STRONG><a name="[1f5]"></a>loadStateArray</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, kdp_comm_aes.o(i.loadStateArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = loadStateArray
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesEncrypt
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesDecrypt
</UL>

<P><STRONG><a name="[379]"></a>load_ncpu_fw</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, system.o(i.load_ncpu_fw))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = load_ncpu_fw &rArr; kdp_memxfer_flash_to_niram &rArr; ota_get_active_ncpu_partition &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_niram
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_init
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_niram_enable
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_niram_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[281]"></a>log_set_level_scpu</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, dbg.o(i.log_set_level_scpu))
<BR><BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_init
</UL>

<P><STRONG><a name="[fe]"></a>md5_HexDevide2DoubleHex</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, kdp_comm_md5.o(i.md5_HexDevide2DoubleHex))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = md5_HexDevide2DoubleHex
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Init_Encryption
</UL>

<P><STRONG><a name="[4e9]"></a>mpu_niram_disable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mpu.o(i.mpu_niram_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mpu_niram_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARM_MPU_SetRegionEx
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARM_MPU_Enable
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARM_MPU_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_ncpu_fw
</UL>

<P><STRONG><a name="[395]"></a>norflash_busy_check</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, w25q256jv.o(i.norflash_busy_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = norflash_busy_check &rArr; kdp520_spi_read_Rx_FIFO
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_wait_command_complete
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_switch_org
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_switch_fail
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_set_commands
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_read_Rx_FIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_running
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_get_status
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_chip_erase
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_64k_erase
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_4k_erase
</UL>

<P><STRONG><a name="[45]"></a>norflash_chip_erase</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, w25q256jv.o(i.norflash_chip_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = norflash_chip_erase &rArr; norflash_busy_check &rArr; kdp520_spi_read_Rx_FIFO
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_wait_command_complete
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_switch_org
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_switch_fail
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_set_commands
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_control
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_busy_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> w25q256jv.o(.data)
</UL>
<P><STRONG><a name="[38e]"></a>norflash_quad_mode_read</STRONG> (Thumb, 40 bytes, Stack size 48 bytes, w25q256jv.o(i.norflash_quad_mode_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = norflash_quad_mode_read &rArr; kdp520_spi_read_Rx_FIFO
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_wait_command_complete
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_set_commands
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_read_Rx_FIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nor_flash_quad_mode_en
</UL>

<P><STRONG><a name="[392]"></a>norflash_write_control</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, w25q256jv.o(i.norflash_write_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = norflash_write_control &rArr; kdp520_spi_set_commands
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_wait_command_complete
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_set_commands
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nor_flash_quad_mode_en
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_running
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_chip_erase
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_64k_erase
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_4k_erase
</UL>

<P><STRONG><a name="[1bc]"></a>osEventFlagsClear</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rtx_evflags.o(i.osEventFlagsClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = osEventFlagsClear &rArr; svcRtxEventFlagsClear
</UL>
<BR>[Calls]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsClear
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsClear
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_stop
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_start
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_init_thrd
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_event_interrupt
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_run
</UL>

<P><STRONG><a name="[1b9]"></a>osEventFlagsNew</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, rtx_evflags.o(i.osEventFlagsNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osEventFlagsNew
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsNew
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_event
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_stop
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_user_com_thread
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_run
</UL>

<P><STRONG><a name="[15d]"></a>osKernelGetTickCount</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, rtx_kernel.o(i.osKernelGetTickCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osKernelGetTickCount &rArr; svcRtxKernelGetTickCount
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetTickCount
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdfr_recognition_note_check
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_enroll_reply_msg
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_cpu_idle
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_wait_receive
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_verify_reply_msg
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_face_note
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_db_import_request_reply_msg
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysWaitDelayTime
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_response_data
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_run
</UL>

<P><STRONG><a name="[37b]"></a>osKernelInitialize</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, rtx_kernel.o(i.osKernelInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osKernelInitialize
</UL>
<BR>[Calls]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelPreInit
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelInitialize
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[199]"></a>osMutexNew</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, rtx_mutex.o(i.osMutexNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osMutexNew
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexNew
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_init
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snapshot_dma
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_init
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_init_thrd
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_create
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_probe
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_thread
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_write_unlock
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_write_lock
</UL>

<P><STRONG><a name="[19c]"></a>osMutexRelease</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rtx_mutex.o(i.osMutexRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexRelease
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_ddr_to_flash
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_sector_multi_erase
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_sector_erase4k
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_ddr_to_flash_wo_erase
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_init
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snapshot_dma
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_stop
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_start
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_unlock
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_write
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_read_bytes
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_read
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_write_unlock
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_response_data
</UL>

<P><STRONG><a name="[3ed]"></a>osRtxMemoryFree</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, rtx_memory.o(i.osRtxMemoryFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osRtxMemoryFree
</UL>
<BR>[Calls]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryFree
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerDelete
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadFree
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
</UL>

<P><STRONG><a name="[443]"></a>osRtxMemoryInit</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, rtx_memory.o(i.osRtxMemoryInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osRtxMemoryInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryInit
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelInitialize
</UL>

<P><STRONG><a name="[444]"></a>osRtxMemoryPoolInit</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, rtx_mempool.o(i.osRtxMemoryPoolInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osRtxMemoryPoolInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryBlockInit
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelInitialize
</UL>

<P><STRONG><a name="[4f3]"></a>osRtxMessageQueueTimerSetup</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, rtx_msgqueue.o(i.osRtxMessageQueueTimerSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osRtxMessageQueueTimerSetup &rArr; svcRtxMessageQueueNew &rArr; osRtxMemoryAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerSetup
</UL>

<P><STRONG><a name="[3f0]"></a>osRtxThreadListPut</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, rtx_thread.o(i.osRtxThreadListPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osRtxThreadListPut
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreAcquire
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
</UL>

<P><STRONG><a name="[43b]"></a>osRtxThreadWaitEnter</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, rtx_thread.o(i.osRtxThreadWaitEnter))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = osRtxThreadWaitEnter &rArr; osRtxThreadDelayInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayInsert
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadBlocked
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxDelay
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsWait
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreAcquire
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
</UL>

<P><STRONG><a name="[3c1]"></a>osRtxThreadWaitExit</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rtx_thread.o(i.osRtxThreadWaitExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayRemove
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadRegPtr
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadUnblocked
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxEventFlagsPostProcess
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsSet
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadPostProcess
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadJoinWakeup
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreRelease
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxSemaphorePostProcess
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
</UL>

<P><STRONG><a name="[b7]"></a>osRtxTimerSetup</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, rtx_timer.o(i.osRtxTimerSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = osRtxTimerSetup &rArr; osRtxMessageQueueTimerSetup &rArr; svcRtxMessageQueueNew &rArr; osRtxMemoryAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueueTimerSetup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_lib.o(.rodata)
</UL>
<P><STRONG><a name="[2f3]"></a>osSemaphoreNew</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, rtx_semaphore.o(i.osSemaphoreNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osSemaphoreNew
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreNew
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreError
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_init
</UL>

<P><STRONG><a name="[171]"></a>osThreadFlagsClear</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, rtx_thread.o(i.osThreadFlagsClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osThreadFlagsClear
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsError
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsClear
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_open_event
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_set_event
</UL>

<P><STRONG><a name="[415]"></a>osThreadFlagsWait</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, rtx_thread.o(i.osThreadFlagsWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osThreadFlagsWait
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWait
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsError
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_thread
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scpu_wait_reset
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_update_sleep
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_update_deep_sleep
</UL>

<P><STRONG><a name="[4fa]"></a>osThreadGetId</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, rtx_thread.o(i.osThreadGetId))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osThreadGetId &rArr; svcRtxThreadGetId
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadGetId
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scpu_wait_reset
</UL>

<P><STRONG><a name="[34f]"></a>osThreadGetPriority</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rtx_thread.o(i.osThreadGetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osThreadGetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_thread_rst_priority
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_init_thrd
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
</UL>

<P><STRONG><a name="[350]"></a>osThreadSetPriority</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, rtx_thread.o(i.osThreadSetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osThreadSetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadSetPriority
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_thread_rst_priority
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_thread
</UL>

<P><STRONG><a name="[1d9]"></a>osTimerIsRunning</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rtx_timer.o(i.osTimerIsRunning))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osTimerIsRunning
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerIsRunning
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_fdfr_drawing_timer_create
</UL>

<P><STRONG><a name="[1d8]"></a>osTimerNew</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, rtx_timer.o(i.osTimerNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osTimerNew
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerNew
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerError
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_fdfr_drawing_timer_create
</UL>

<P><STRONG><a name="[1db]"></a>osTimerStart</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, rtx_timer.o(i.osTimerStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osTimerStart
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerStart
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerError
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_fdfr_drawing_timer_create
</UL>

<P><STRONG><a name="[1da]"></a>osTimerStop</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rtx_timer.o(i.osTimerStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osTimerStop
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerStop
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerError
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_fdfr_drawing_timer_create
</UL>

<P><STRONG><a name="[226]"></a>ota_crc32</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ota_update.o(i.ota_crc32))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ota_crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_main
</UL>

<P><STRONG><a name="[119]"></a>ota_update_ncpu_flag_status</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ota_update.o(i.ota_update_ncpu_flag_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ota_update_ncpu_flag_status
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_flash_action_doing
</UL>

<P><STRONG><a name="[4bd]"></a>power_manager_cpu_idle</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, power_manager.o(i.power_manager_cpu_idle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = power_manager_cpu_idle &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_get_date_time_in_secs
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxIdleThread
</UL>

<P><STRONG><a name="[399]"></a>program_address_check</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, w25q256jv.o(i.program_address_check))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_program
</UL>

<P><STRONG><a name="[461]"></a>reset_handler</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, system.o(i.reset_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = reset_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mgr_ops
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_mgr_set_scuclkin
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[487]"></a>response_get_user_info_msg</STRONG> (Thumb, 46 bytes, Stack size 72 bytes, kdp_comm_protoco.o(i.response_get_user_info_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 692<LI>Call Chain = response_get_user_info_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[47c]"></a>response_get_version_info_msg</STRONG> (Thumb, 44 bytes, Stack size 56 bytes, kdp_comm_protoco.o(i.response_get_version_info_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = response_get_version_info_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[47e]"></a>response_get_version_info_msg_zhian_hard</STRONG> (Thumb, 52 bytes, Stack size 56 bytes, kdp_comm_protoco.o(i.response_get_version_info_msg_zhian_hard))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = response_get_version_info_msg_zhian_hard &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[47b]"></a>send_Get_Kn_DeviceInfo_reply_msg</STRONG> (Thumb, 44 bytes, Stack size 168 bytes, kdp_comm_protoco.o(i.send_Get_Kn_DeviceInfo_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 788<LI>Call Chain = send_Get_Kn_DeviceInfo_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[490]"></a>send_InitEncryption_reply_msg</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, kdp_comm_protoco.o(i.send_InitEncryption_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = send_InitEncryption_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ddr_reserve
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[492]"></a>send_SetReleaseOrDebugEncKey_reply_msg</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, kdp_comm_protoco.o(i.send_SetReleaseOrDebugEncKey_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = send_SetReleaseOrDebugEncKey_reply_msg &rArr; user_com_response_data &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_cal
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_response_data
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[4c2]"></a>send_SwPart_reply_msg</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, kdp_comm_protoco.o(i.send_SwPart_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = send_SwPart_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_SwitchPart_reply_msg
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GetCurPart_reply_msg
</UL>

<P><STRONG><a name="[123]"></a>send_exp_mass_data_reply_msg</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, kdp_comm_protoco.o(i.send_exp_mass_data_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = send_exp_mass_data_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_imp_mass_data
</UL>

<P><STRONG><a name="[486]"></a>send_status_reply_msg</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, kdp_comm_protoco.o(i.send_status_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = send_status_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[24b]"></a>send_upload_data_reply_msg</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, kdp_comm_protoco.o(i.send_upload_data_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = send_upload_data_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_upload_data
</UL>

<P><STRONG><a name="[375]"></a>system_init_ncpu</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, system.o(i.system_init_ncpu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = system_init_ncpu &rArr; clk_enable &rArr; clk_control
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_reset
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_enable
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(.text)
</UL>
<P><STRONG><a name="[504]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[b8]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d1]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[505]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[506]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[507]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[508]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[509]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[50a]"></a>__asm___13_rtx_evflags_c_ab3a5ffb__atomic_wr8</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[496]"></a>__asm___13_rtx_evflags_c_ab3a5ffb__atomic_set32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsSet
</UL>

<P><STRONG><a name="[43d]"></a>__asm___13_rtx_evflags_c_ab3a5ffb__atomic_clr32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsClear
</UL>

<P><STRONG><a name="[4cc]"></a>__asm___13_rtx_evflags_c_ab3a5ffb__atomic_chk32_all</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
</UL>

<P><STRONG><a name="[4cd]"></a>__asm___13_rtx_evflags_c_ab3a5ffb__atomic_chk32_any</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
</UL>

<P><STRONG><a name="[50b]"></a>__asm___13_rtx_evflags_c_ab3a5ffb__atomic_inc32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[50c]"></a>__asm___13_rtx_evflags_c_ab3a5ffb__atomic_inc16_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[50d]"></a>__asm___13_rtx_evflags_c_ab3a5ffb__atomic_inc16_lim</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[50e]"></a>__asm___13_rtx_evflags_c_ab3a5ffb__atomic_dec32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[50f]"></a>__asm___13_rtx_evflags_c_ab3a5ffb__atomic_dec32_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[510]"></a>__asm___13_rtx_evflags_c_ab3a5ffb__atomic_dec16_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[511]"></a>__asm___13_rtx_evflags_c_ab3a5ffb__atomic_link_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[ba]"></a>__asm___13_rtx_evflags_c_ab3a5ffb__atomic_link_put</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_evflags_c_ab3a5ffb__atomic_link_put
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_evflags_c_ab3a5ffb__atomic_link_put
</UL>

<P><STRONG><a name="[512]"></a>__asm___13_rtx_mempool_c_c97899d2__atomic_wr8</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[513]"></a>__asm___13_rtx_mempool_c_c97899d2__atomic_set32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[514]"></a>__asm___13_rtx_mempool_c_c97899d2__atomic_clr32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[515]"></a>__asm___13_rtx_mempool_c_c97899d2__atomic_chk32_all</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[516]"></a>__asm___13_rtx_mempool_c_c97899d2__atomic_chk32_any</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[3c5]"></a>__asm___13_rtx_mempool_c_c97899d2__atomic_inc32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
</UL>

<P><STRONG><a name="[517]"></a>__asm___13_rtx_mempool_c_c97899d2__atomic_inc16_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[518]"></a>__asm___13_rtx_mempool_c_c97899d2__atomic_inc16_lim</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[3c9]"></a>__asm___13_rtx_mempool_c_c97899d2__atomic_dec32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
</UL>

<P><STRONG><a name="[519]"></a>__asm___13_rtx_mempool_c_c97899d2__atomic_dec32_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[51a]"></a>__asm___13_rtx_mempool_c_c97899d2__atomic_dec16_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[3c4]"></a>__asm___13_rtx_mempool_c_c97899d2__atomic_link_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
</UL>

<P><STRONG><a name="[bb]"></a>__asm___13_rtx_mempool_c_c97899d2__atomic_link_put</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_c97899d2__atomic_link_put
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_c97899d2__atomic_link_put
</UL>

<P><STRONG><a name="[12f]"></a>__asm___14_rtx_msgqueue_c_6fef6d89__atomic_wr8</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueGet
</UL>

<P><STRONG><a name="[51b]"></a>__asm___14_rtx_msgqueue_c_6fef6d89__atomic_set32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[51c]"></a>__asm___14_rtx_msgqueue_c_6fef6d89__atomic_clr32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[51d]"></a>__asm___14_rtx_msgqueue_c_6fef6d89__atomic_chk32_all</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[51e]"></a>__asm___14_rtx_msgqueue_c_6fef6d89__atomic_chk32_any</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[4ce]"></a>__asm___14_rtx_msgqueue_c_6fef6d89__atomic_inc32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueuePut
</UL>

<P><STRONG><a name="[51f]"></a>__asm___14_rtx_msgqueue_c_6fef6d89__atomic_inc16_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[520]"></a>__asm___14_rtx_msgqueue_c_6fef6d89__atomic_inc16_lim</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[521]"></a>__asm___14_rtx_msgqueue_c_6fef6d89__atomic_dec32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[12e]"></a>__asm___14_rtx_msgqueue_c_6fef6d89__atomic_dec32_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueGet
</UL>

<P><STRONG><a name="[522]"></a>__asm___14_rtx_msgqueue_c_6fef6d89__atomic_dec16_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[523]"></a>__asm___14_rtx_msgqueue_c_6fef6d89__atomic_link_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[bc]"></a>__asm___14_rtx_msgqueue_c_6fef6d89__atomic_link_put</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_rtx_msgqueue_c_6fef6d89__atomic_link_put
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_rtx_msgqueue_c_6fef6d89__atomic_link_put
</UL>

<P><STRONG><a name="[524]"></a>__asm___15_rtx_semaphore_c_7b131ed0__atomic_wr8</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_semaphore.o(.emb_text), UNUSED)

<P><STRONG><a name="[525]"></a>__asm___15_rtx_semaphore_c_7b131ed0__atomic_set32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtx_semaphore.o(.emb_text), UNUSED)

<P><STRONG><a name="[526]"></a>__asm___15_rtx_semaphore_c_7b131ed0__atomic_clr32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtx_semaphore.o(.emb_text), UNUSED)

<P><STRONG><a name="[527]"></a>__asm___15_rtx_semaphore_c_7b131ed0__atomic_chk32_all</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtx_semaphore.o(.emb_text), UNUSED)

<P><STRONG><a name="[528]"></a>__asm___15_rtx_semaphore_c_7b131ed0__atomic_chk32_any</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtx_semaphore.o(.emb_text), UNUSED)

<P><STRONG><a name="[529]"></a>__asm___15_rtx_semaphore_c_7b131ed0__atomic_inc32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_semaphore.o(.emb_text), UNUSED)

<P><STRONG><a name="[49b]"></a>__asm___15_rtx_semaphore_c_7b131ed0__atomic_inc16_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtx_semaphore.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SemaphoreTokenIncrement
</UL>

<P><STRONG><a name="[52a]"></a>__asm___15_rtx_semaphore_c_7b131ed0__atomic_inc16_lim</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_semaphore.o(.emb_text), UNUSED)

<P><STRONG><a name="[52b]"></a>__asm___15_rtx_semaphore_c_7b131ed0__atomic_dec32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_semaphore.o(.emb_text), UNUSED)

<P><STRONG><a name="[52c]"></a>__asm___15_rtx_semaphore_c_7b131ed0__atomic_dec32_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_semaphore.o(.emb_text), UNUSED)

<P><STRONG><a name="[49a]"></a>__asm___15_rtx_semaphore_c_7b131ed0__atomic_dec16_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_semaphore.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SemaphoreTokenDecrement
</UL>

<P><STRONG><a name="[52d]"></a>__asm___15_rtx_semaphore_c_7b131ed0__atomic_link_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_semaphore.o(.emb_text), UNUSED)

<P><STRONG><a name="[bd]"></a>__asm___15_rtx_semaphore_c_7b131ed0__atomic_link_put</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtx_semaphore.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___15_rtx_semaphore_c_7b131ed0__atomic_link_put
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___15_rtx_semaphore_c_7b131ed0__atomic_link_put
</UL>

<P><STRONG><a name="[52e]"></a>__asm___12_rtx_system_c_024f2f18__atomic_wr8</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[52f]"></a>__asm___12_rtx_system_c_024f2f18__atomic_set32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[530]"></a>__asm___12_rtx_system_c_024f2f18__atomic_clr32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[531]"></a>__asm___12_rtx_system_c_024f2f18__atomic_chk32_all</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[532]"></a>__asm___12_rtx_system_c_024f2f18__atomic_chk32_any</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[533]"></a>__asm___12_rtx_system_c_024f2f18__atomic_inc32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[3d7]"></a>__asm___12_rtx_system_c_024f2f18__atomic_inc16_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtx_system.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
</UL>

<P><STRONG><a name="[3d5]"></a>__asm___12_rtx_system_c_024f2f18__atomic_inc16_lim</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_system.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPendSV_Handler
</UL>

<P><STRONG><a name="[534]"></a>__asm___12_rtx_system_c_024f2f18__atomic_dec32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[535]"></a>__asm___12_rtx_system_c_024f2f18__atomic_dec32_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[3d4]"></a>__asm___12_rtx_system_c_024f2f18__atomic_dec16_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_system.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPendSV_Handler
</UL>

<P><STRONG><a name="[536]"></a>__asm___12_rtx_system_c_024f2f18__atomic_link_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[be]"></a>__asm___12_rtx_system_c_024f2f18__atomic_link_put</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_link_put
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_link_put
</UL>

<P><STRONG><a name="[537]"></a>__asm___12_rtx_thread_c_3927f09d__atomic_wr8</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[49d]"></a>__asm___12_rtx_thread_c_3927f09d__atomic_set32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsSet
</UL>

<P><STRONG><a name="[453]"></a>__asm___12_rtx_thread_c_3927f09d__atomic_clr32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsClear
</UL>

<P><STRONG><a name="[13a]"></a>__asm___12_rtx_thread_c_3927f09d__atomic_chk32_all</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsCheck
</UL>

<P><STRONG><a name="[13b]"></a>__asm___12_rtx_thread_c_3927f09d__atomic_chk32_any</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsCheck
</UL>

<P><STRONG><a name="[538]"></a>__asm___12_rtx_thread_c_3927f09d__atomic_inc32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[539]"></a>__asm___12_rtx_thread_c_3927f09d__atomic_inc16_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[53a]"></a>__asm___12_rtx_thread_c_3927f09d__atomic_inc16_lim</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[53b]"></a>__asm___12_rtx_thread_c_3927f09d__atomic_dec32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[53c]"></a>__asm___12_rtx_thread_c_3927f09d__atomic_dec32_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[53d]"></a>__asm___12_rtx_thread_c_3927f09d__atomic_dec16_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[53e]"></a>__asm___12_rtx_thread_c_3927f09d__atomic_link_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[bf]"></a>__asm___12_rtx_thread_c_3927f09d__atomic_link_put</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_thread_c_3927f09d__atomic_link_put
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_thread_c_3927f09d__atomic_link_put
</UL>

<P><STRONG><a name="[54]"></a>SVC_Handler</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, irq_armv7m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>PendSV_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, irq_armv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PendSV_Handler &rArr; osRtxPendSV_Handler &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, irq_armv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SysTick_Handler &rArr; osRtxTick_Handler &rArr; osRtxThreadDelayTick &rArr; osRtxMutexOwnerRestore &rArr; osRtxThreadListSort &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rtx_kernel.o(i.svcRtxKernelStart)
<LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>Interrupt0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>Interrupt1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>Interrupt2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>Interrupt4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>Interrupt5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>Interrupt6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>Interrupt7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>Interrupt8_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt8_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt8_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>Interrupt9_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt9_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupt9_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[e6]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_customer_get
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_set_frame_info
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_get_latest_frame_info
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ap_com_import_fm_mode_split
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kneron_lwcom_packet_analyze
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_comm_receive_data
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_comm_post_process
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Update
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_verify_reply_msg
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_exp_mass_data_reply_msg
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_EnrollOrVerify_note_msg
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_check_info
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_bin_double_check
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_add_timeout
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_upload_data_reply_msg
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_uploadImage_reply_msg
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_db_export_reply_msg
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_InitEncryption_reply_msg
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_Get_Kn_DeviceInfo_reply_msg
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg_zhian_prd
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg_zhian_hard
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg_zhian
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_user_info_msg
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_Alluser_info_msg
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_import
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_OtaPacket
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_OtaHeader
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info_zhian_prd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info_zhian_hard
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info_zhian
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_GetUserInfo
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_enroll_msg
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_download_data
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesEncrypt
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesDecrypt
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_img
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_load_model_info
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetInfo
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_extra_data_write
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_extra_data_read
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_read
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_write
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_get_frame_info
</UL>

<P><STRONG><a name="[fc]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_dp_open
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_util_collection
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_video_renderer_setting
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ap_com_import_fm_r1n1_inject
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ap_com_import_fm_n1_inject
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_tasks_init
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_init_thrd
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fdfr_update_fr_entry
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tasks_init_flash_load_thread_each
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_init
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_switch_board_params
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_virtual_dp_set_params
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_virtual_dp_get_params
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_register
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_set_format
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_get_format
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_user_com_thread
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OTA_Thread
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_bin_double_check
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Init_Encryption
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_set_model
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_liveness_img
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_compare_five_faces_both_test
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_extra_write
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_r1_update_pt_array
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_n1_update_pt_array
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_config_image
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_e2e_face_fd_lm
</UL>

<P><STRONG><a name="[53f]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[540]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[541]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kneron_lwcom_packet_analyze
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg_zhian_prd
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg_zhian_hard
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg_zhian
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Init_Encryption
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Kn_DeviceInfo
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_GetUserInfo
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_GetAllUserInfo
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_enroll_msg
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_XOREncrypt
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_AesEncrypt
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_load_model_info
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_rst_variables
</UL>

<P><STRONG><a name="[e2]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_camera_open
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_add_wait_and_get
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init_ncpu
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_init
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_sample_face_del_all
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_to_ddr_dma_copy
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_open
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_bin_double_check
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_clr_mass_data_header
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Init_Encryption
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info_zhian_prd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info_zhian_hard
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info_zhian
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_GetUserInfo
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_init
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_liveness_img
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_img
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_load_model_info
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_nose_skin_value
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_rst_r1_lm
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_rst_r1_fr
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_rst_r1_fd
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_rst_n1_lm
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_rst_n1_fr
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_rst_n1_fd
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_rst_variables
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_compare_five_faces_both_test
</UL>

<P><STRONG><a name="[542]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[357]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
</UL>

<P><STRONG><a name="[2fd]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_printf_nocrlf
</UL>

<P><STRONG><a name="[10d]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SetReleaseEncKey
</UL>

<P><STRONG><a name="[25b]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_query_capability
</UL>

<P><STRONG><a name="[c5]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2c5]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_init
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_only_environmental_adaptation
</UL>

<P><STRONG><a name="[543]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[1de]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c7]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[c8]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[544]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[545]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[c6]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[ca]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[cb]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[cd]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[ce]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[cf]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[d0]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[182]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b9]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[546]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[547]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[548]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[549]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[54a]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>AHB_DMA_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, kdp520_dma.o(i.AHB_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AHB_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Address Reference Count : 2]<UL><LI> kdp520_dma.o(i.kdp_dma_enable_dma_int)
<LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[140]"></a>Clear_IntrStateRegister</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, kdp520_tmr.o(i.Clear_IntrStateRegister))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TickTimer3
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TickTimer2
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TickTimer1
</UL>

<P><STRONG><a name="[d3]"></a>DSM_AesEncrypt</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, kdp_comm_protoco.o(i.DSM_AesEncrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_cal
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesEncrypt
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
</UL>

<P><STRONG><a name="[d6]"></a>DSM_Uart_ConfigBaudrate</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, kdp_comm_app.o(i.DSM_Uart_ConfigBaudrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = DSM_Uart_ConfigBaudrate &rArr; kl520_com_reconfig_baud_rate &rArr; kdp_uart_app_com &rArr; kdp_uart_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_reconfig_baud_rate
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ConfigBaurate_reply_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[db]"></a>DSM_Uart_GetAllUserInfo</STRONG> (Thumb, 84 bytes, Stack size 128 bytes, kdp_comm_app.o(i.DSM_Uart_GetAllUserInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = DSM_Uart_GetAllUserInfo &rArr; kl520_api_face_query_all &rArr; kl520_api_fdfr_model_init &rArr; kdp_e2e_face_init &rArr; kdp_e2e_config_image &rArr; kdp_app_get_pixel_size &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_query_all
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortType_BigToSmallEnd
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[de]"></a>DSM_Uart_GetOtaStatus</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, kdp_comm_app.o(i.DSM_Uart_GetOtaStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = DSM_Uart_GetOtaStatus &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[df]"></a>DSM_Uart_GetUserInfo</STRONG> (Thumb, 164 bytes, Stack size 112 bytes, kdp_comm_app.o(i.DSM_Uart_GetUserInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = DSM_Uart_GetUserInfo &rArr; kdp_e2e_db_get_user_info_by_idx &rArr; kdp_e2e_db_ready_check &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_get_user_info_by_idx
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_get_user_id
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_extra_read
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_user_id
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[e7]"></a>DSM_Uart_Get_Kn_DeviceInfo</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, kdp_comm_app.o(i.DSM_Uart_Get_Kn_DeviceInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = DSM_Uart_Get_Kn_DeviceInfo &rArr; kl520_api_camera_get_id &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_memxfer_get_device_id
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_unique_id
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_scpu_version
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_ncpu_version
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_dp_get_device_id
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_touch_get_device_id
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_camera_get_id
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sys_get_spl_version
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_load_model
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_model_info
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_model_count
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[f3]"></a>DSM_Uart_Get_Version_Info</STRONG> (Thumb, 72 bytes, Stack size 72 bytes, kdp_comm_app.o(i.DSM_Uart_Get_Version_Info))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DSM_Uart_Get_Version_Info &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_scpu_version
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_ncpu_version
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[f5]"></a>DSM_Uart_Get_Version_Info_zhian_hard</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, kdp_comm_app.o(i.DSM_Uart_Get_Version_Info_zhian_hard))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DSM_Uart_Get_Version_Info_zhian_hard &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_scpu_version
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[f6]"></a>DSM_Uart_Get_Version_Info_zhian_prd</STRONG> (Thumb, 70 bytes, Stack size 72 bytes, kdp_comm_app.o(i.DSM_Uart_Get_Version_Info_zhian_prd))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DSM_Uart_Get_Version_Info_zhian_prd &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_scpu_version
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[f7]"></a>DSM_Uart_Init_Encryption</STRONG> (Thumb, 236 bytes, Stack size 272 bytes, kdp_comm_app.o(i.DSM_Uart_Init_Encryption))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = DSM_Uart_Init_Encryption &rArr; md5_main &rArr; MD5Final &rArr; MD5Update &rArr; MD5Transform &rArr; MD5Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_customer_get
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_customer_chk_key_exist
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sys_get_unique_id
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5_HexDevide2DoubleHex
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntType_BigToSmallEnd
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5_main
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[ff]"></a>DSM_Uart_OtaHeader</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, kdp_comm_app.o(i.DSM_Uart_OtaHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = DSM_Uart_OtaHeader &rArr; kdp_printf_nocrlf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ddr_reserve
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_printf_nocrlf
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_thread_event_ota_copy_to_flash
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[103]"></a>DSM_Uart_OtaPacket</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, kdp_comm_app.o(i.DSM_Uart_OtaPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = DSM_Uart_OtaPacket &rArr; user_com_thread_event_ota_copy_to_flash &rArr; user_com_event_interrupt &rArr; sample_face_close &rArr; kl520_api_face_close &rArr; kl520_api_reset_hmi_external_interface &rArr; kl520_api_cam_disp_state_rst &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ota_final_packet
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_thread_event_ota_copy_to_flash
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_event_start
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[106]"></a>DSM_Uart_SET_THRESHOLD_LEVEL</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, kdp_comm_app.o(i.DSM_Uart_SET_THRESHOLD_LEVEL))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = DSM_Uart_SET_THRESHOLD_LEVEL &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_set_rgb_to_nir_ratio
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_fr_threshold_level
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[109]"></a>DSM_Uart_SavedImage</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, kdp_comm_app.o(i.DSM_Uart_SavedImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = DSM_Uart_SavedImage &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_save_snap_img_addr
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl_htonl
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[10c]"></a>DSM_Uart_SetReleaseEncKey</STRONG> (Thumb, 70 bytes, Stack size 56 bytes, kdp_comm_app.o(i.DSM_Uart_SetReleaseEncKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = DSM_Uart_SetReleaseEncKey &rArr; kl520_api_customer_get &rArr; kdp_ddr_reserve &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_customer_write
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_customer_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[10f]"></a>DSM_Uart_StartOrStopDemoMode</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, kdp_comm_app.o(i.DSM_Uart_StartOrStopDemoMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = DSM_Uart_StartOrStopDemoMode &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[110]"></a>DSM_Uart_StartOta</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, kdp_comm_app.o(i.DSM_Uart_StartOta))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = DSM_Uart_StartOta &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_scpu_version
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[111]"></a>DSM_Uart_SwitchPart</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, kdp_comm_app.o(i.DSM_Uart_SwitchPart))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = DSM_Uart_SwitchPart &rArr; SwitchScpu &rArr; kl520_api_ota_switch_SCPU &rArr; ota_update_force_switch_active_partition &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_get_scpu_flag_status
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchScpu
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[114]"></a>DSM_Uart_UploadImage</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, kdp_comm_app.o(i.DSM_Uart_UploadImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = DSM_Uart_UploadImage &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[115]"></a>DSM_XOREncrypt</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, kdp_comm_protoco.o(i.DSM_XOREncrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = DSM_XOREncrypt &rArr; encBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_cal
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encBytes
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
</UL>

<P><STRONG><a name="[414]"></a>Drv_OTA_init</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, ota.o(i.Drv_OTA_init))
<BR><BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_update_case
</UL>

<P><STRONG><a name="[117]"></a>Drv_flash_action_doing</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, ota.o(i.Drv_flash_action_doing))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Drv_flash_action_doing &rArr; ota_update_scpu_flag_status
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_update_scpu_flag_status
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_update_ncpu_flag_status
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_main
</UL>

<P><STRONG><a name="[11a]"></a>Drv_flash_erase_area</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, ota.o(i.Drv_flash_erase_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Drv_flash_erase_area &rArr; kdp_memxfer_flash_sector_multi_erase &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_sector_multi_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_main
</UL>

<P><STRONG><a name="[252]"></a>GMul</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, kdp_comm_aes.o(i.GMul))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GMul
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mixColumns
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invMixColumns
</UL>

<P><STRONG><a name="[11c]"></a>KDP_imp_fm_inejct_data</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, kdp_comm_app.o(i.KDP_imp_fm_inejct_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KDP_imp_fm_inejct_data &rArr; kl520_api_ap_com_import_fm_r1n1_inject
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ap_com_import_fm_r1n1_inject
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ap_com_import_fm_n1_inject
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
</UL>

<P><STRONG><a name="[11f]"></a>KDP_imp_mass_data</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, kdp_comm_app.o(i.KDP_imp_mass_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 684<LI>Call Chain = KDP_imp_mass_data &rArr; send_exp_mass_data_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ap_com_import_fm_mode_split
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StreamsToBigEndU16
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_exp_mass_data_reply_msg
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_exp_mass_data_done_note_msg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_imp_mass_data_result_middleware_process
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_clr_mass_data_header
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[122]"></a>KDP_imp_mass_data_result_middleware_process</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, kdp_comm_app.o(i.KDP_imp_mass_data_result_middleware_process))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_imp_mass_data
</UL>

<P><STRONG><a name="[126]"></a>KDP_set_mass_data_header</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, kdp_comm_app.o(i.KDP_set_mass_data_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = KDP_set_mass_data_header &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StreamsToBigEndU16
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StreamsToBigEndU32
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_clr_mass_data_header
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[12c]"></a>MD5Decode</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, kdp_comm_md5.o(i.MD5Decode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MD5Decode
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Transform
</UL>

<P><STRONG><a name="[128]"></a>MD5Final</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, kdp_comm_md5.o(i.MD5Final))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = MD5Final &rArr; MD5Update &rArr; MD5Transform &rArr; MD5Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Update
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Encode
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5_main
</UL>

<P><STRONG><a name="[384]"></a>MD5Init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp_comm_md5.o(i.MD5Init))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5_main
</UL>

<P><STRONG><a name="[12b]"></a>MD5Transform</STRONG> (Thumb, 1646 bytes, Stack size 280 bytes, kdp_comm_md5.o(i.MD5Transform))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = MD5Transform &rArr; MD5Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Decode
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Update
</UL>

<P><STRONG><a name="[12a]"></a>MD5Update</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, kdp_comm_md5.o(i.MD5Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = MD5Update &rArr; MD5Transform &rArr; MD5Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Transform
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Final
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5_main
</UL>

<P><STRONG><a name="[445]"></a>OS_Tick_Setup</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, os_systick.o(i.OS_Tick_Setup))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[132]"></a>OtaProcess_run</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, kdp_comm_app.o(i.OtaProcess_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = OtaProcess_run &rArr; ota_auto_update &rArr; ota_bin_double_check &rArr; md5_main &rArr; MD5Final &rArr; MD5Update &rArr; MD5Transform &rArr; MD5Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_auto_update
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ota_MD5_checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_ota_process
</UL>

<P><STRONG><a name="[133]"></a>Ota_MD5_checksum</STRONG> (Thumb, 110 bytes, Stack size 72 bytes, kdp_comm_app.o(i.Ota_MD5_checksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = Ota_MD5_checksum &rArr; md5_main &rArr; MD5Final &rArr; MD5Update &rArr; MD5Transform &rArr; MD5Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_printf_nocrlf
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5_main
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5_covers
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtaProcess_run
</UL>

<P><STRONG><a name="[6f]"></a>PWMTMR3_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, kdp520_pwm_timer.o(i.PWMTMR3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWMTMR3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_tmr3_user
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_int_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_pwm_timer.o(i.kdp_timer_init)
</UL>
<P><STRONG><a name="[71]"></a>PWMTMR5_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, kdp520_pwm_timer.o(i.PWMTMR5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWMTMR5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_tmr5_user
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_int_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_pwm_timer.o(i.kdp_timer_init)
</UL>
<P><STRONG><a name="[37a]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_armcm4.o(i.SystemCoreClockUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>SystemInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, system_armcm4.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(.text)
</UL>
<P><STRONG><a name="[13c]"></a>Timer_Close</STRONG> (Thumb, 66 bytes, Stack size 4 bytes, kdp520_tmr.o(i.Timer_Close))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Timer_Close
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms_disable
</UL>

<P><STRONG><a name="[13d]"></a>Timer_Disable</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, kdp520_tmr.o(i.Timer_Disable))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Close
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetAllTimer
</UL>

<P><STRONG><a name="[144]"></a>Timer_Enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp520_tmr.o(i.Timer_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
</UL>

<P><STRONG><a name="[13e]"></a>Timer_Init</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, kdp520_tmr.o(i.Timer_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Timer_Init &rArr; Timer_SetIsr
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_IntEnable
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_SetIsr
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_IOCtrl
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Enable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_IntrStateRegister
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_tmr_init
</UL>

<P><STRONG><a name="[143]"></a>Timer_IntEnable</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, kdp520_tmr.o(i.Timer_IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms_enable
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
</UL>

<P><STRONG><a name="[141]"></a>Timer_SetIsr</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, kdp520_tmr.o(i.Timer_SetIsr))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Timer_SetIsr
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
</UL>

<P><STRONG><a name="[145]"></a>UART_ISR</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, kdp_uart.o(i.UART_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART_ISR &rArr; UART_RX_ISR_new
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_get_drv_hdl
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TX_ISR
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RX_ISR_new
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_ISR
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_ISR
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_ISR
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ISR
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_ISR
</UL>

<P><STRONG><a name="[321]"></a>Write_CR</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, kdp520_tmr.o(i.Write_CR))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_tmr_init
</UL>

<P><STRONG><a name="[14b]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[54b]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[f4]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info_zhian_prd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info_zhian_hard
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info_zhian
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info
</UL>

<P><STRONG><a name="[54c]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[54d]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[14d]"></a>__hardfp_sqrtf</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sqrtf.o(i.__hardfp_sqrtf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ap_com_import_fm_mode_split
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_get_eye_range
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_avg_eye_range
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_nir_eye_lv
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_crop_center_radius
</UL>

<P><STRONG><a name="[54e]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[54f]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[550]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[15a]"></a>_api_face_note</STRONG> (Thumb, 328 bytes, Stack size 128 bytes, kdp_comm_app.o(i._api_face_note))
<BR><BR>[Stack]<UL><LI>Max Depth = 796<LI>Call Chain = _api_face_note &rArr; send_EnrollOrVerify_note_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_video_renderer_get_params
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_get_person_position
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_EnrollOrVerify_note_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_face_recognition_note
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_face_add_internal
</UL>

<P><STRONG><a name="[165]"></a>_api_fdfr_check_eye</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i._api_fdfr_check_eye))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _api_fdfr_check_eye
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_util_collection
</UL>

<P><STRONG><a name="[1d6]"></a>_api_fdfr_ckeck_position_xy</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i._api_fdfr_ckeck_position_xy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _api_fdfr_ckeck_position_xy
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_util_collection
</UL>

<P><STRONG><a name="[167]"></a>_api_fdfr_set_event</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, kl520_api_fdfr.o(i._api_fdfr_set_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = _api_fdfr_set_event &rArr; set_event &rArr; osEventFlagsSet &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_event
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_event
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsGet
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsClear
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_snap_image_event
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_liveness_event
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_error
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_face_add_other_face
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_face_add_normal_face
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_handle_fr_db_match
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_handle_face_recog_error
</UL>

<P><STRONG><a name="[172]"></a>_calc_skin_value_lm</STRONG> (Thumb, 606 bytes, Stack size 88 bytes, kdp_e2e_camera.o(i._calc_skin_value_lm))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _calc_skin_value_lm
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mid
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_nose_skin_value
</UL>

<P><STRONG><a name="[174]"></a>_decide_check_bad_pose_enable</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i._decide_check_bad_pose_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _decide_check_bad_pose_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_only
</UL>

<P><STRONG><a name="[175]"></a>_decide_face_check_move_enable</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i._decide_face_check_move_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _decide_face_check_move_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_only
</UL>

<P><STRONG><a name="[176]"></a>_decide_face_check_position_enable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i._decide_face_check_position_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _decide_face_check_position_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_only
</UL>

<P><STRONG><a name="[177]"></a>_decide_liveness_enable</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i._decide_liveness_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _decide_liveness_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_only
</UL>

<P><STRONG><a name="[178]"></a>_face_add_internal</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, kdp_comm_app.o(i._face_add_internal))
<BR><BR>[Stack]<UL><LI>Max Depth = 836<LI>Call Chain = _face_add_internal &rArr; _api_face_note &rArr; send_EnrollOrVerify_note_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_flash_to_ddr
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_is_fdfr_abort
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add_ex
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_add_wait_and_get
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_enroll_customize_uid
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_enroll_customize_uid
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_face_note
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_add_timeout
</UL>

<P><STRONG><a name="[17f]"></a>_fdfr_recognition_note_check</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i._fdfr_recognition_note_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _fdfr_recognition_note_check &rArr; kdp_e2e_util_get_person_to_camera_distance &rArr; kdp_e2e_get_avg_eye_range &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_get_person_to_camera_distance
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
</UL>

<P><STRONG><a name="[4e3]"></a>_get_timer_tick</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, kdp520_pwm_timer.o(i._get_timer_tick))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_ioctrl
</UL>

<P><STRONG><a name="[1b5]"></a>_kdp_model_run</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, kdp_model.o(i._kdp_model_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsClear
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_ncpu_trigger_int
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_output_ptr
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_input_ptr
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_avail_com
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_raw_img_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run
</UL>

<P><STRONG><a name="[1c0]"></a>_kl520_api_face_preexecute</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, kl520_api_fdfr.o(i._kl520_api_face_preexecute))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = _kl520_api_face_preexecute &rArr; kl520_api_face_preexecute_stage2 &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_dp_layout_enable
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_disp_resolution_set
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_ctrl
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_dual_cam_state
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_dual_cam_state
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_preexecute_stage2
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_preexecute_stage1
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snap_image
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_recognition
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_liveness
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add
</UL>

<P><STRONG><a name="[4e5]"></a>_set_timer_clk_source</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp520_pwm_timer.o(i._set_timer_clk_source))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_ioctrl
</UL>

<P><STRONG><a name="[1df]"></a>_spi020_check_status_til_ready_2</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, w25q256jv.o(i._spi020_check_status_til_ready_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _spi020_check_status_til_ready_2 &rArr; kdp520_spi_set_commands
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_wait_command_complete
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_set_commands
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_flash_check_status_til_ready
</UL>

<P><STRONG><a name="[4c6]"></a>_str_uart_reply</STRONG> (Thumb, 222 bytes, Stack size 0 bytes, kl520_api.o(i._str_uart_reply))
<BR><BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_uart_reply
</UL>

<P><STRONG><a name="[7b]"></a>_tasks_init_flash_load_thread_each</STRONG> (Thumb, 170 bytes, Stack size 56 bytes, kl520_api_fdfr.o(i._tasks_init_flash_load_thread_each))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = _tasks_init_flash_load_thread_each &rArr; kdp_model_load_model &rArr; _kdp_model_load_model_info &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_load_model
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_model_info
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_model_count
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_ui_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_load_flag
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_info_reload
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_init_done
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_init_flash_load
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kl520_api_fdfr.o(i.kl520_api_tasks_init)
</UL>
<P><STRONG><a name="[1ee]"></a>address_protect_check</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, w25q256jv.o(i.address_protect_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = address_protect_check &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_protect_check
</UL>

<P><STRONG><a name="[2a5]"></a>adjust_fr_threshold_level</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, kdp_e2e_db.o(i.adjust_fr_threshold_level))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare
</UL>

<P><STRONG><a name="[1f3]"></a>aesDecrypt</STRONG> (Thumb, 198 bytes, Stack size 440 bytes, kdp_comm_aes.o(i.aesDecrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = aesDecrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storeStateArray
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadStateArray
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyExpansion
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invSubBytes
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invShiftRows
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invMixColumns
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addRoundKey
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PkgDecrypt
</UL>

<P><STRONG><a name="[d4]"></a>aesEncrypt</STRONG> (Thumb, 202 bytes, Stack size 416 bytes, kdp_comm_aes.o(i.aesEncrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subBytes
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storeStateArray
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shiftRows
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mixColumns
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadStateArray
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyExpansion
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addRoundKey
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_AesEncrypt
</UL>

<P><STRONG><a name="[1f2]"></a>an_nir_gain_setting</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, kdp_e2e_camera.o(i.an_nir_gain_setting))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = an_nir_gain_setting &rArr; kdp_camera_set_gain
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_set_gain
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_dual_cam_state
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aec_e2e_multiply_factor_set
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_preproc
</UL>

<P><STRONG><a name="[21b]"></a>camera_sensor_rst</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, kdp_e2e_camera.o(i.camera_sensor_rst))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = camera_sensor_rst
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_only_surrond
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_continuous_gain_tune
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_aec_tune_for_fd_search
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_preproc
</UL>

<P><STRONG><a name="[463]"></a>clock_mgr_change_pll3_clock</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, clock.o(i.clock_mgr_change_pll3_clock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clock_mgr_change_pll3_clock
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[21c]"></a>clock_mgr_change_pll5_clock</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, clock.o(i.clock_mgr_change_pll5_clock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clock_mgr_change_pll5_clock
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[4a2]"></a>clock_mgr_set_muxsel</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, clock.o(i.clock_mgr_set_muxsel))
<BR><BR>[Called By]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_mgr_init
</UL>

<P><STRONG><a name="[466]"></a>clock_mgr_set_scuclkin</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, clock.o(i.clock_mgr_set_scuclkin))
<BR><BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_handler
</UL>

<P><STRONG><a name="[21e]"></a>ddr_init</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, ddr.o(i.ddr_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ddr_init &rArr; ddr_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddr_wakeup
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d2]"></a>delay_us</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, delay.o(i.delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddr_wakeup
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_camera_rst
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_wait_dma_int
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mgr_set_domain
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init_ncpu
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddr_init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_camera_power_on
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_initialize
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_xfer
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_power
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_running
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHB_DMA_IRQHandler
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_mgr_change_pll5_clock
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_open
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_close
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csi2rx_init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_chip_erase
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_64k_erase
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_4k_erase
</UL>

<P><STRONG><a name="[25c]"></a>dpi2ahb_enable</STRONG> (Thumb, 128 bytes, Stack size 12 bytes, kdp_camera_kl520.o(i.dpi2ahb_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dpi2ahb_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_set_format
</UL>

<P><STRONG><a name="[220]"></a>dpi2ahb_reset</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, kdp_camera_kl520.o(i.dpi2ahb_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = dpi2ahb_reset &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_open
</UL>

<P><STRONG><a name="[221]"></a>drv_flash_main</STRONG> (Thumb, 484 bytes, Stack size 24 bytes, ota.o(i.drv_flash_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = drv_flash_main &rArr; kl520_api_face_close &rArr; kl520_api_reset_hmi_external_interface &rArr; kl520_api_cam_disp_state_rst &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_ddr_to_flash
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_sector_multi_erase
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_init
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_info_reload
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_reload_model_info
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_info_get
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_clc_all_model_size
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_bin_check
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_read_all_model_crc
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_flash_erase_area
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_flash_action_doing
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_update_case
</UL>

<P><STRONG><a name="[116]"></a>encBytes</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, kdp_comm_aes.o(i.encBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = encBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_XOREncrypt
</UL>

<P><STRONG><a name="[229]"></a>estimate_nose_skin_value</STRONG> (Thumb, 78 bytes, Stack size 48 bytes, kdp_e2e_camera.o(i.estimate_nose_skin_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = estimate_nose_skin_value &rArr; _calc_skin_value_lm
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_get_inst
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_get_eye_range
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_calc_skin_value_lm
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_continuous_gain_tune
</UL>

<P><STRONG><a name="[22b]"></a>fdfr_update_fr_thr</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, kl520_api_fdfr.o(i.fdfr_update_fr_thr))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = fdfr_update_fr_thr &rArr; _kl520_api_fdfr_add &rArr; kdp_e2e_db_register &rArr; kdp_app_db_both_register &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_add
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_get_user_info
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_set_last_register_id_preprocess
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_find_exist_id
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fdfr_update_fr_thread
</UL>

<P><STRONG><a name="[1b2]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_free_device_info
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_close
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_load_model_info
</UL>

<P><STRONG><a name="[24d]"></a>info</STRONG> (Thumb, 158 bytes, Stack size 64 bytes, main.o(i.info))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = info &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_scpu_version
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_ncpu_version
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sys_get_spl_version
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24f]"></a>init_user_com_thread</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, kdp_comm_and_gui_fdr.o(i.init_user_com_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = init_user_com_thread &rArr; osThreadNew
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_event
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_thread
</UL>

<P><STRONG><a name="[1f9]"></a>invMixColumns</STRONG> (Thumb, 144 bytes, Stack size 96 bytes, kdp_comm_aes.o(i.invMixColumns))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = invMixColumns &rArr; GMul
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GMul
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesDecrypt
</UL>

<P><STRONG><a name="[1f7]"></a>invShiftRows</STRONG> (Thumb, 84 bytes, Stack size 36 bytes, kdp_comm_aes.o(i.invShiftRows))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = invShiftRows
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesDecrypt
</UL>

<P><STRONG><a name="[253]"></a>kdp520_adc_init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, kdp520_adc.o(i.kdp520_adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp520_adc_init &rArr; osDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_adc_config
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_io_light_sensor_get
</UL>

<P><STRONG><a name="[3f]"></a>kdp520_spi_initialize</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, kdp520_spi.o(i.kdp520_spi_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = kdp520_spi_initialize &rArr; nor_flash_quad_mode_en &rArr; norflash_quad_mode_read &rArr; kdp520_spi_read_Rx_FIFO
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nor_flash_quad_mode_en
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_pre_log
</UL>
<BR>[Address Reference Count : 1]<UL><LI> w25q256jv.o(.data)
</UL>
<P><STRONG><a name="[397]"></a>kdp520_spi_read_Rx_FIFO</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, kdp520_spi.o(i.kdp520_spi_read_Rx_FIFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = kdp520_spi_read_Rx_FIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_quad_mode_read
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_get_info
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_busy_check
</UL>

<P><STRONG><a name="[151]"></a>kdp_api_camera_on_1</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, kl520_api_camera.o(i.kdp_api_camera_on_1))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_camera_open
</UL>

<P><STRONG><a name="[265]"></a>kdp_app_db_add</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, kdp_app_db.o(i.kdp_app_db_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = kdp_app_db_add &rArr; _kdp_app_db_save_ddr_to_flash &rArr; kdp_memxfer_ddr_to_flash &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_get_db_idx
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_usr_idx
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_save_ddr_to_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_add
</UL>

<P><STRONG><a name="[267]"></a>kdp_app_db_both_register</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, kdp_app_db.o(i.kdp_app_db_both_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = kdp_app_db_both_register &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_update
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_flush_register_data
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_find_space
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_find_exist_id
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_register
</UL>

<P><STRONG><a name="[e0]"></a>kdp_app_db_check_user_id</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, kdp_app_db.o(i.kdp_app_db_check_user_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp_app_db_check_user_id
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_app_calc_db_uid
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_register
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_get_user_info
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare_self
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_add
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_import_request
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_GetUserInfo
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_delete_user
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_find_exist_id
</UL>

<P><STRONG><a name="[26c]"></a>kdp_app_db_compare_five_faces_both_test</STRONG> (Thumb, 470 bytes, Stack size 272 bytes, kdp_app_db.o(i.kdp_app_db_compare_five_faces_both_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = kdp_app_db_compare_five_faces_both_test &rArr; _kdp_app_db_find_fr_min_dist_mix_2_test &rArr; _kdp_app_db_calc_fr_dist_mix_2_test &rArr; _kdp_app_db_calc_fr_dist_test
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_is_abort_flag
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_get_rgb_to_nir_ratio
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_get_user_info_by_idx
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_extra_data_read
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_find_fr_min_dist_mix_2_test
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_calc_fr_dist_mix_2_test
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare
</UL>

<P><STRONG><a name="[270]"></a>kdp_app_db_compare_self</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, kdp_app_db.o(i.kdp_app_db_compare_self))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = kdp_app_db_compare_self &rArr; _kdp_app_db_calc_fr_dist_test
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_get_db_idx
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_usr_idx
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_calc_fr_dist_test
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare_self
</UL>

<P><STRONG><a name="[271]"></a>kdp_app_db_delete</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, kdp_app_db.o(i.kdp_app_db_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = kdp_app_db_delete &rArr; _kdp_app_db_save_ddr_to_flash &rArr; kdp_memxfer_ddr_to_flash &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_sector_erase4k
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_list
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_save_ddr_to_flash
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_flush_register_data
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_find_exist_id
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_delete
</UL>

<P><STRONG><a name="[26e]"></a>kdp_app_db_extra_data_read</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, kdp_app_db.o(i.kdp_app_db_extra_data_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_app_db_extra_data_read
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_usr_idx
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_extra_read
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_compare_five_faces_both_test
</UL>

<P><STRONG><a name="[17e]"></a>kdp_app_db_flash_to_ddr</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, kdp_app_db.o(i.kdp_app_db_flash_to_ddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = kdp_app_db_flash_to_ddr &rArr; kdp_memxfer_flash_to_ddr &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_find_exist_id
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add_internal
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_face_add_internal
</UL>

<P><STRONG><a name="[26f]"></a>kdp_app_db_get_user_info_by_idx</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, kdp_app_db.o(i.kdp_app_db_get_user_info_by_idx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kdp_app_db_get_user_info_by_idx
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_slot_is_used
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_get_user_info_by_idx
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_get_user_info
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_compare_five_faces_both_test
</UL>

<P><STRONG><a name="[239]"></a>kdp_app_db_import</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, kdp_app_db.o(i.kdp_app_db_import))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = kdp_app_db_import &rArr; _kdp_app_db_save_ddr_to_flash &rArr; kdp_memxfer_ddr_to_flash &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_get_db_idx
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_usr_idx
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_save_ddr_to_flash
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_download_data
</UL>

<P><STRONG><a name="[236]"></a>kdp_app_db_import_request</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, kdp_app_db.o(i.kdp_app_db_import_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = kdp_app_db_import_request &rArr; kdp_app_db_find_exist_id &rArr; _kdp_app_db_find_exist_id &rArr; kdp_app_db_check_user_id
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_find_exist_id
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_get_db_idx
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_app_calc_db_uid
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_user_id
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_find_space
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_db_import
</UL>

<P><STRONG><a name="[1ff]"></a>kdp_app_db_set_last_register_id_preprocess</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, kdp_app_db.o(i.kdp_app_db_set_last_register_id_preprocess))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp_app_db_set_last_register_id_preprocess
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_app_calc_db_uid
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_usr_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_face_add_normal_face
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fdfr_update_fr_thr
</UL>

<P><STRONG><a name="[274]"></a>kdp_app_get_pixel_size</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, kdp_app.o(i.kdp_app_get_pixel_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = kdp_app_get_pixel_size &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_config_image
</UL>

<P><STRONG><a name="[275]"></a>kdp_app_imp_fm_chk</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, kdp_app_db.o(i.kdp_app_imp_fm_chk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp_app_imp_fm_chk
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_show
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ap_com_import_fm_mode_split
</UL>

<P><STRONG><a name="[276]"></a>kdp_app_nir_face_seg_mask</STRONG> (Thumb, 180 bytes, Stack size 88 bytes, kdp_app_fid.o(i.kdp_app_nir_face_seg_mask))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = kdp_app_nir_face_seg_mask &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run_ex
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_pad_value_extend
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_crop_box_center
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_lmk_to_bbox
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_face_seg
</UL>

<P><STRONG><a name="[159]"></a>kdp_camera_buffer_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp_camera.o(i.kdp_camera_buffer_init))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_camera_open
</UL>

<P><STRONG><a name="[27c]"></a>kdp_camera_controller_register</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, kdp_camera.o(i.kdp_camera_controller_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_camera_controller_register
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_kl520_init
</UL>

<P><STRONG><a name="[33b]"></a>kdp_camera_get_device_id</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp_camera.o(i.kdp_camera_get_device_id))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_camera_get_id
</UL>

<P><STRONG><a name="[158]"></a>kdp_camera_get_frame_format</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, kdp_camera.o(i.kdp_camera_get_frame_format))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_camera_get_frame_format
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_camera_open
</UL>

<P><STRONG><a name="[27a]"></a>kdp_camera_init</STRONG> (Thumb, 48 bytes, Stack size 56 bytes, kdp_camera.o(i.kdp_camera_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = kdp_camera_init &rArr; kl520_api_customer_get &rArr; kdp_ddr_reserve &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_customer_get
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_kl520_init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27b]"></a>kdp_camera_kl520_init</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, kdp_camera_kl520.o(i.kdp_camera_kl520_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kdp_camera_kl520_init &rArr; sp2509_r_sensor_init &rArr; kdp_sensor_register
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_r_sensor_init
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_l_sensor_init
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_camera_global_init
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_controller_register
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_init
</UL>

<P><STRONG><a name="[157]"></a>kdp_camera_set_fps</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, kdp_camera.o(i.kdp_camera_set_fps))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_camera_set_fps
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_camera_open
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_preproc
</UL>

<P><STRONG><a name="[155]"></a>kdp_camera_set_gain</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, kdp_camera.o(i.kdp_camera_set_gain))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_camera_set_gain
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_camera_open
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;an_nir_gain_setting
</UL>

<P><STRONG><a name="[2e9]"></a>kdp_camera_set_sleep</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kdp_camera.o(i.kdp_camera_set_sleep))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_dual_cam_state
</UL>

<P><STRONG><a name="[339]"></a>kdp_camera_stop</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp_camera.o(i.kdp_camera_stop))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_ctrl
</UL>

<P><STRONG><a name="[1b6]"></a>kdp_com_get_avail_com</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kdp_com.o(i.kdp_com_get_avail_com))
<BR><BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_set_model_active
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_set_image_active
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_image_active
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_raw_img_idx
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_run
</UL>

<P><STRONG><a name="[280]"></a>kdp_com_init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, kdp_com.o(i.kdp_com_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = kdp_com_init &rArr; kdp_ddr_reserve &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ddr_reserve
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_ipc_enable_to_ncpu_int
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_set_level_scpu
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_set_level_ncpu
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ipc_init
</UL>

<P><STRONG><a name="[1ba]"></a>kdp_com_ncpu_trigger_int</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, kdp_com.o(i.kdp_com_ncpu_trigger_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_ipc_trigger_to_ncpu_int
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_run
</UL>

<P><STRONG><a name="[1bf]"></a>kdp_com_set_image_active</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, kdp_com.o(i.kdp_com_set_image_active))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = kdp_com_set_image_active &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_avail_com
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_set_raw_img_idx
</UL>

<P><STRONG><a name="[288]"></a>kdp_com_set_model</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, kdp_com.o(i.kdp_com_set_model))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kdp_com_set_model
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_model
</UL>

<P><STRONG><a name="[4de]"></a>kdp_comm_check_header</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, kdp_comm.o(i.kdp_comm_check_header))
<BR><BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_comm_post_process
</UL>

<P><STRONG><a name="[289]"></a>kdp_comm_receive_data</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, kdp_comm.o(i.kdp_comm_receive_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kdp_comm_receive_data
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_SetReadIndex
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_GetWriteIndex
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_GetRxBufSize
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_GetReadIndex
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_wait_receive
</UL>

<P><STRONG><a name="[100]"></a>kdp_ddr_reserve</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, kdp_memory.o(i.kdp_ddr_reserve))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = kdp_ddr_reserve &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_customer_get
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snapshot_adv_init
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_init
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_init
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_virtual_dp_set_camera
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_init
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_InitEncryption_reply_msg
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_OtaHeader
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_init
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run_ex
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_model
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_init
</UL>

<P><STRONG><a name="[294]"></a>kdp_dma_ch_data_ctrl</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, kdp520_dma.o(i.kdp_dma_ch_data_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_dma_ch_data_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_to_ddr_dma_copy
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_linkmode
</UL>

<P><STRONG><a name="[2f9]"></a>kdp_dma_enable_ch</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, kdp520_dma.o(i.kdp_dma_enable_ch))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snapshot_dma
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_to_ddr_dma_copy
</UL>

<P><STRONG><a name="[28f]"></a>kdp_dma_linkmode</STRONG> (Thumb, 478 bytes, Stack size 60 bytes, kdp520_dma.o(i.kdp_dma_linkmode))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = kdp_dma_linkmode &rArr; kdp_dma_ch_data_ctrl
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_set_ch_cfg
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_clear_ch_int_status
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_ch_linklist
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_ch_int_mask
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_ch_data_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_normal_mode
</UL>

<P><STRONG><a name="[295]"></a>kdp_dma_normal_mode</STRONG> (Thumb, 56 bytes, Stack size 72 bytes, kdp520_dma.o(i.kdp_dma_normal_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = kdp_dma_normal_mode &rArr; kdp_dma_linkmode &rArr; kdp_dma_ch_data_ctrl
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_linkmode
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snapshot_dma
</UL>

<P><STRONG><a name="[2f6]"></a>kdp_dma_reset_ch</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, kdp520_dma.o(i.kdp_dma_reset_ch))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snapshot_dma
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_to_ddr_dma_copy
</UL>

<P><STRONG><a name="[296]"></a>kdp_dma_wait_dma_int</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, kdp520_dma.o(i.kdp_dma_wait_dma_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = kdp_dma_wait_dma_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snapshot_dma
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_to_ddr_dma_copy
</UL>

<P><STRONG><a name="[297]"></a>kdp_drv_i2c_init</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, kdp520_i2c.o(i.kdp_drv_i2c_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = kdp_drv_i2c_init
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_i2c_dev_drv
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_drv_init
</UL>

<P><STRONG><a name="[299]"></a>kdp_drv_i2c_write</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, kdp520_i2c.o(i.kdp_drv_i2c_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kdp_drv_i2c_write
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_i2c_dev_drv
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_sensor_set_gain
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_sensor_set_exp_time
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_write_reg
</UL>

<P><STRONG><a name="[29a]"></a>kdp_e2e_check_face_move</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, kdp_e2e_util.o(i.kdp_e2e_check_face_move))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = kdp_e2e_check_face_move &rArr; kdp_e2e_util_get_person_to_camera_distance &rArr; kdp_e2e_get_avg_eye_range &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_get_person_to_camera_distance
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[29b]"></a>kdp_e2e_check_face_position</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, kdp_e2e_util.o(i.kdp_e2e_check_face_position))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_e2e_check_face_position
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_fd
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[29d]"></a>kdp_e2e_config_image</STRONG> (Thumb, 78 bytes, Stack size 88 bytes, kdp_e2e_face.o(i.kdp_e2e_config_image))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = kdp_e2e_config_image &rArr; kdp_app_get_pixel_size &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_get_pixel_size
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_init
</UL>

<P><STRONG><a name="[1ca]"></a>kdp_e2e_db_add</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, kdp_e2e_db.o(i.kdp_e2e_db_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = kdp_e2e_db_add &rArr; kdp_app_db_add &rArr; _kdp_app_db_save_ddr_to_flash &rArr; kdp_memxfer_ddr_to_flash &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_is_abort_flag
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_get_inst
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_write_unlock
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_write_lock
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_user_id
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_add
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_add
</UL>

<P><STRONG><a name="[16c]"></a>kdp_e2e_db_compare</STRONG> (Thumb, 838 bytes, Stack size 152 bytes, kdp_e2e_db.o(i.kdp_e2e_db_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = kdp_e2e_db_compare &rArr; kdp_app_db_compare_five_faces_both_test &rArr; _kdp_app_db_find_fr_min_dist_mix_2_test &rArr; _kdp_app_db_calc_fr_dist_mix_2_test &rArr; _kdp_app_db_calc_fr_dist_test
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_r1_fr
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_fr
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_find_exist_id
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_extra_read
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_compare_five_faces_both_test
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adjust_fr_threshold_level
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_min_user_meet_thers
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_cra_adj_ratio
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_r1n1_occ
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_face_add_pose_chk
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_face_add_normal_face
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_handle_fr_db_match
</UL>

<P><STRONG><a name="[202]"></a>kdp_e2e_db_compare_self</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, kdp_e2e_db.o(i.kdp_e2e_db_compare_self))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = kdp_e2e_db_compare_self &rArr; kdp_app_db_compare_self &rArr; _kdp_app_db_calc_fr_dist_test
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_r1_fr
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_fr
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_user_id
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_compare_self
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_face_add_other_face
</UL>

<P><STRONG><a name="[2a6]"></a>kdp_e2e_db_delete</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, kdp_e2e_db.o(i.kdp_e2e_db_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = kdp_e2e_db_delete &rArr; kdp_e2e_db_ready_check &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_delete
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_ready_check
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_del
</UL>

<P><STRONG><a name="[22c]"></a>kdp_e2e_db_get_user_info</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, kdp_e2e_db.o(i.kdp_e2e_db_get_user_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = kdp_e2e_db_get_user_info &rArr; kdp_e2e_db_ready_check &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_get_db_idx
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_user_id
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_get_user_info_by_idx
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_ready_check
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fdfr_update_fr_thr
</UL>

<P><STRONG><a name="[2a7]"></a>kdp_e2e_db_ready_check</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, kdp_e2e_db.o(i.kdp_e2e_db_ready_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = kdp_e2e_db_ready_check &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_get_user_info_by_idx
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_get_user_info
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_delete
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_abort_reg
</UL>

<P><STRONG><a name="[1c9]"></a>kdp_e2e_db_register</STRONG> (Thumb, 302 bytes, Stack size 40 bytes, kdp_e2e_db.o(i.kdp_e2e_db_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = kdp_e2e_db_register &rArr; kdp_app_db_both_register &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_r1_fr
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_fr
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_get_inst
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_r1_lm
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_lm
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_find_exist_id
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_user_id
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_both_register
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_extra_write
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_calc_offset_from_nir_rgb_xy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_add
</UL>

<P><STRONG><a name="[242]"></a>kdp_e2e_db_write_lock</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, kdp_e2e_db.o(i.kdp_e2e_db_write_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kdp_e2e_db_write_lock &rArr; osMutexAcquire
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_add
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_face_reset
</UL>

<P><STRONG><a name="[2ac]"></a>kdp_e2e_face_get_frame_info</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, kdp_e2e_face.o(i.kdp_e2e_face_get_frame_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp_e2e_face_get_frame_info
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_get_latest_frame_info
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_nir_tile_value_mean
</UL>

<P><STRONG><a name="[2ae]"></a>kdp_e2e_face_init</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, kdp_e2e_face.o(i.kdp_e2e_face_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = kdp_e2e_face_init &rArr; kdp_e2e_config_image &rArr; kdp_app_get_pixel_size &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ddr_reserve
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_switch_board_params
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_config_image
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_model_init
</UL>

<P><STRONG><a name="[2b0]"></a>kdp_e2e_face_n1</STRONG> (Thumb, 644 bytes, Stack size 56 bytes, kdp_e2e_face.o(i.kdp_e2e_face_n1))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = kdp_e2e_face_n1 &rArr; kdp_e2e_face_n1_fd_lm_combo &rArr; _kdp_e2e_face_fd_lm &rArr; kdp_model_lm &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_img_cfg
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_continuous_gain_tune
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_aec_tune_for_fd_search
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_img_mem_addr
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_n1_update_rect
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_n1_update_pt_array
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_r1n1_occ
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_fd_lm_combo
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_face_pose
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_e2e_face_quality
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_n1_sunlit_face_det
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_norm_delta
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_lm_postproc
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_face_seg
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_uint_subtract_abs
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_n1_chk_mask
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_face_recog_pose_chk
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_face_add_pose_chk
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_chk_position
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_check_face_position
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_check_face_move
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1
</UL>

<P><STRONG><a name="[2b1]"></a>kdp_e2e_face_n1_fd_lm_combo</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, kdp_e2e_face.o(i.kdp_e2e_face_n1_fd_lm_combo))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = kdp_e2e_face_n1_fd_lm_combo &rArr; _kdp_e2e_face_fd_lm &rArr; kdp_model_lm &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_is_abort_flag
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_dual_cam_state
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_nir_led_flag_off
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_dual_cam_state
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_e2e_face_fd_lm
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[2c3]"></a>kdp_e2e_face_n1_only_environmental_adaptation</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, kdp_e2e_n1_only.o(i.kdp_e2e_face_n1_only_environmental_adaptation))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = kdp_e2e_face_n1_only_environmental_adaptation &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_only_surrond
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_img_mem_addr
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_nir_tile_value_mean
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_preproc
</UL>

<P><STRONG><a name="[1d1]"></a>kdp_e2e_face_n1r1</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, kdp_e2e_n1r1.o(i.kdp_e2e_face_n1r1))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = kdp_e2e_face_n1r1 &rArr; kdp_e2e_face_n1 &rArr; kdp_e2e_face_n1_fd_lm_combo &rArr; _kdp_e2e_face_fd_lm &rArr; kdp_model_lm &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_rst_r1_lm
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_rst_r1_fr
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_rst_r1_fd
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_rst_n1_lm
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_rst_n1_fr
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_rst_n1_fd
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_preproc
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_postproc
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_ctrl_get_ops
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_only
</UL>

<P><STRONG><a name="[2d0]"></a>kdp_e2e_face_n1r1_postproc</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, kdp_e2e_face.o(i.kdp_e2e_face_n1r1_postproc))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = kdp_e2e_face_n1r1_postproc &rArr; kdp_model_fr &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_update_db_comp_params
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_img_cfg
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_fr
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_norm_variance
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1
</UL>

<P><STRONG><a name="[2ce]"></a>kdp_e2e_face_n1r1_preproc</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, kdp_e2e_face.o(i.kdp_e2e_face_n1r1_preproc))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = kdp_e2e_face_n1r1_preproc &rArr; kdp_e2e_face_n1_only_environmental_adaptation &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_set_fps
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_set_exp_time
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_get_inst
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_dual_cam_state
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_sensor_rst
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_nir_led_flag_on
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;an_nir_gain_setting
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_ctrl_get_ops
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_only_environmental_adaptation
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_nir_tile_value_mean
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1
</UL>

<P><STRONG><a name="[2cf]"></a>kdp_e2e_face_r1</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, kdp_e2e_face.o(i.kdp_e2e_face_r1))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = kdp_e2e_face_r1 &rArr; kdp_e2e_face_r1n1_ncpu_liveness &rArr; kdp_e2e_face_nir_combo_liveness &rArr; kdp_app_nir_hsn_lv &rArr; kdp_model_nir_hsn_lv &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_img_cfg
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_ctrl_get_ops
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_ncpu_liveness
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_r1_update_pt_array
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_n1_update_rect
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_fd_lm_combo
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1_lm_postproc
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_norm_delta
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_lm_mapping_check
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_r1_chk_mask
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_chk_r1_lm
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_chk_position
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1
</UL>

<P><STRONG><a name="[1d3]"></a>kdp_e2e_face_r1n1_invalid_score</STRONG> (Thumb, 280 bytes, Stack size 16 bytes, kdp_e2e_r1n1.o(i.kdp_e2e_face_r1n1_invalid_score))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp_e2e_face_r1n1_invalid_score
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_only
</UL>

<P><STRONG><a name="[2de]"></a>kdp_e2e_face_r1n1_ncpu_liveness</STRONG> (Thumb, 400 bytes, Stack size 64 bytes, kdp_e2e_r1n1.o(i.kdp_e2e_face_r1n1_ncpu_liveness))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = kdp_e2e_face_r1n1_ncpu_liveness &rArr; kdp_e2e_face_nir_combo_liveness &rArr; kdp_app_nir_hsn_lv &rArr; kdp_model_nir_hsn_lv &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_get_inst
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_r1_lm
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_lm
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_img_cfg
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_fuse_lv
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_r1n1_tune
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_r1n1_lv
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_r1n1_dlm_2
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_r1n1_dlm
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_r1_lm_s
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_lm_s
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_img_mem_addr
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_nir_combo_liveness
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1
</UL>

<P><STRONG><a name="[2e6]"></a>kdp_e2e_face_rst_variables</STRONG> (Thumb, 420 bytes, Stack size 16 bytes, kdp_e2e_face.o(i.kdp_e2e_face_rst_variables))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp_e2e_face_rst_variables
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_reset
</UL>

<P><STRONG><a name="[2af]"></a>kdp_e2e_face_switch_board_params</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, kdp_e2e_face.o(i.kdp_e2e_face_switch_board_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = kdp_e2e_face_switch_board_params
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_init
</UL>

<P><STRONG><a name="[2e7]"></a>kdp_e2e_get_avg_eye_range</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, kdp_e2e_util.o(i.kdp_e2e_get_avg_eye_range))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kdp_e2e_get_avg_eye_range &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_get_person_to_camera_distance
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_update_db_comp_params
</UL>

<P><STRONG><a name="[2e8]"></a>kdp_e2e_get_mapping_bbox_from_nir</STRONG> (Thumb, 424 bytes, Stack size 64 bytes, kdp_e2e_util.o(i.kdp_e2e_get_mapping_bbox_from_nir))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = kdp_e2e_get_mapping_bbox_from_nir &rArr; kdp_e2e_util_predict_xy_from_offset_xy
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_get_inst
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_lm
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_img_cfg
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_get_eye_range
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_fd
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_predict_xy_from_offset_xy
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_iou_fd_by_mapping
</UL>

<P><STRONG><a name="[2df]"></a>kdp_e2e_iou_fd_by_mapping</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, kdp_e2e_util.o(i.kdp_e2e_iou_fd_by_mapping))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = kdp_e2e_iou_fd_by_mapping &rArr; kdp_e2e_get_mapping_bbox_from_nir &rArr; kdp_e2e_util_predict_xy_from_offset_xy
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_get_inst
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_img_cfg
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_mapping_bbox_from_nir
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1_lm_postproc
</UL>

<P><STRONG><a name="[1f1]"></a>kdp_e2e_nir_aec_clip_bound</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, kdp_e2e_camera.o(i.kdp_e2e_nir_aec_clip_bound))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_e2e_nir_aec_clip_bound
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aec_e2e_multiply_factor_set
</UL>

<P><STRONG><a name="[2c4]"></a>kdp_e2e_nir_tile_value_mean</STRONG> (Thumb, 144 bytes, Stack size 96 bytes, kdp_e2e_ctrl.o(i.kdp_e2e_nir_tile_value_mean))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = kdp_e2e_nir_tile_value_mean &rArr; kdp_e2e_face_get_frame_info
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_get_frame_info
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_preproc
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_only_environmental_adaptation
</UL>

<P><STRONG><a name="[354]"></a>kdp_e2e_prop_init</STRONG> (Thumb, 280 bytes, Stack size 0 bytes, kdp_e2e_prop.o(i.kdp_e2e_prop_init))
<BR><BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_model_init
</UL>

<P><STRONG><a name="[2b2]"></a>kdp_e2e_prop_n1_update_rect</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, kdp_e2e_prop.o(i.kdp_e2e_prop_n1_update_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_e2e_prop_n1_update_rect
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[206]"></a>kdp_e2e_prop_update_db_comp_params</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, kdp_e2e_prop.o(i.kdp_e2e_prop_update_db_comp_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = kdp_e2e_prop_update_db_comp_params &rArr; kdp_e2e_get_avg_eye_range &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_r1_lm
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_lm
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_avg_eye_range
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_postproc
</UL>

<P><STRONG><a name="[2cd]"></a>kdp_e2e_rst_n1_fr</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, kdp_e2e_face.o(i.kdp_e2e_rst_n1_fr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp_e2e_rst_n1_fr
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1
</UL>

<P><STRONG><a name="[1c7]"></a>kdp_e2e_set_dual_cam_state</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, kdp_e2e_camera.o(i.kdp_e2e_set_dual_cam_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = kdp_e2e_set_dual_cam_state &rArr; an_nir_gain_setting &rArr; kdp_camera_set_gain
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_set_exp_time
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_nir_led_flag_off
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_set_sleep
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_nir_led_flag_on
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;an_nir_gain_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_face_preexecute
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_only_surrond
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_continuous_gain_tune
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_aec_tune_for_fd_search
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_preproc
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_fd_lm_combo
</UL>

<P><STRONG><a name="[2ea]"></a>kdp_e2e_settings_init</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, kdp_e2e_settings.o(i.kdp_e2e_settings_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = kdp_e2e_settings_init &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_create
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_req_free_space
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_read
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_model_init
</UL>

<P><STRONG><a name="[2ec]"></a>kdp_e2e_settings_read</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, kdp_e2e_settings.o(i.kdp_e2e_settings_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = kdp_e2e_settings_read &rArr; kdp_memxfer_flash_to_ddr &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_unlock
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_lock_timeout
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_init
</UL>

<P><STRONG><a name="[2ab]"></a>kdp_e2e_util_calc_offset_from_nir_rgb_xy</STRONG> (Thumb, 126 bytes, Stack size 56 bytes, kdp_e2e_util.o(i.kdp_e2e_util_calc_offset_from_nir_rgb_xy))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = kdp_e2e_util_calc_offset_from_nir_rgb_xy &rArr; kdp_e2e_util_get_eye_range &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_lm
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_get_eye_range
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_register
</UL>

<P><STRONG><a name="[2bc]"></a>kdp_e2e_util_chk_position</STRONG> (Thumb, 196 bytes, Stack size 128 bytes, kdp_e2e_util.o(i.kdp_e2e_util_chk_position))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = kdp_e2e_util_chk_position &rArr; _kdp_e2e_util_mirror_point
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_e2e_util_mirror_point
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[2dc]"></a>kdp_e2e_util_chk_r1_lm</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, kdp_e2e_util.o(i.kdp_e2e_util_chk_r1_lm))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kdp_e2e_util_chk_r1_lm
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1
</UL>

<P><STRONG><a name="[2a4]"></a>kdp_e2e_util_face_add_pose_chk</STRONG> (Thumb, 420 bytes, Stack size 40 bytes, kdp_e2e_util.o(i.kdp_e2e_util_face_add_pose_chk))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = kdp_e2e_util_face_add_pose_chk
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_fd
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[22a]"></a>kdp_e2e_util_get_eye_range</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, kdp_e2e_util.o(i.kdp_e2e_util_get_eye_range))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kdp_e2e_util_get_eye_range &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_nose_skin_value
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_lm_mapping_check
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_calc_offset_from_nir_rgb_xy
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_mapping_bbox_from_nir
</UL>

<P><STRONG><a name="[180]"></a>kdp_e2e_util_get_person_to_camera_distance</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, kdp_e2e_util.o(i.kdp_e2e_util_get_person_to_camera_distance))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = kdp_e2e_util_get_person_to_camera_distance &rArr; kdp_e2e_get_avg_eye_range &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_lm
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_avg_eye_range
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdfr_recognition_note_check
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_lm_postproc
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_check_face_move
</UL>

<P><STRONG><a name="[2c2]"></a>kdp_e2e_util_predict_xy_from_offset_xy</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, kdp_e2e_util.o(i.kdp_e2e_util_predict_xy_from_offset_xy))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kdp_e2e_util_predict_xy_from_offset_xy
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_lm_mapping_check
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_mapping_bbox_from_nir
</UL>

<P><STRONG><a name="[2dd]"></a>kdp_e2e_util_r1_chk_mask</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, kdp_e2e_util.o(i.kdp_e2e_util_r1_chk_mask))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp_e2e_util_r1_chk_mask
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_fd
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1
</UL>

<P><STRONG><a name="[219]"></a>kdp_fb_mgr_buffer_write_next</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, kdp_fb_mgr.o(i.kdp_fb_mgr_buffer_write_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = kdp_fb_mgr_buffer_write_next &rArr; osSemaphoreRelease &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inc_write_next_idx
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fb_sem_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_isr
</UL>

<P><STRONG><a name="[2f1]"></a>kdp_fb_mgr_free_inf_buf</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, kdp_fb_mgr.o(i.kdp_fb_mgr_free_inf_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = kdp_fb_mgr_free_inf_buf &rArr; osSemaphoreRelease &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fb_sem_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
</UL>

<P><STRONG><a name="[2f2]"></a>kdp_fb_mgr_free_write_buf</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, kdp_fb_mgr.o(i.kdp_fb_mgr_free_write_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = kdp_fb_mgr_free_write_buf &rArr; osSemaphoreRelease &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fb_sem_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
</UL>

<P><STRONG><a name="[2ad]"></a>kdp_fb_mgr_get_latest_frame_info</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, kdp_fb_mgr.o(i.kdp_fb_mgr_get_latest_frame_info))
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_get_frame_info
</UL>

<P><STRONG><a name="[255]"></a>kdp_fb_mgr_init</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, kdp_fb_mgr.o(i.kdp_fb_mgr_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = kdp_fb_mgr_init &rArr; kdp_ddr_reserve &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ddr_reserve
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_buffer_init
</UL>

<P><STRONG><a name="[160]"></a>kdp_fb_mgr_next_inf</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, kdp_fb_mgr.o(i.kdp_fb_mgr_next_inf))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = kdp_fb_mgr_next_inf &rArr; osSemaphoreRelease &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fb_sem_lock
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_cam_capture
</UL>

<P><STRONG><a name="[256]"></a>kdp_fb_mgr_next_write</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, kdp_fb_mgr.o(i.kdp_fb_mgr_next_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = kdp_fb_mgr_next_write &rArr; osSemaphoreRelease &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inc_write_next_idx
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fb_sem_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_buffer_init
</UL>

<P><STRONG><a name="[2f4]"></a>kdp_flash_to_ddr_dma_copy</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, kdp520_dma.o(i.kdp_flash_to_ddr_dma_copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = kdp_flash_to_ddr_dma_copy &rArr; kdp_dma_wait_dma_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_wait_dma_int
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_reset_ch
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_init
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_enable_dma_int
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_enable_ch
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_disable_ch
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_dma_read_stop
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_set_ch_cn_cfg
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_set_ch_cfg
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_ch_data_ctrl
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_read
</UL>

<P><STRONG><a name="[d7]"></a>kdp_level_printf</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, dbg.o(i.kdp_level_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_write
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ddr_reserve
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_snap_image_event
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_liveness_event
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_only
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_add
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_handle_fr_db_match
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_handle_face_recog_error
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_camera_open
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_update_force_switch_active_partition
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_get_active_ncpu_partition
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_wait_dma_int
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_init
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_user_db_offset
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_customer_info_init
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_add_wait_and_get
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tasks_init_flash_load_thread_each
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_handle_first_time_boot
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msgZhian
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;info
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_open
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_enroll_reply_msg
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mgr_sw_reset
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_update_show_config
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_probe
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_thread
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_error_notify
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scpu_usage_fault
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scpu_mem_mnmt
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scpu_hard_fault
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scpu_bus_fault
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_do_shutdown
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_init
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_write_reg
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dpi2ahb_reset
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_isr
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_get_info
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_protect_check
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kneron_lwcom_packet_analyze
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_thread
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_update_sleep
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_update_deep_sleep
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_update_case
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_burn_in_config
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_verify_reply_msg
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_check_info
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_bin_double_check
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_auto_update
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_face_add_internal
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_face_note
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ota_MD5_checksum
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_fr_update_thread
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_snap_image
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_add_timeout
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_db_import_request_reply_msg
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtaProcess_run
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_set_mass_data_header
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_imp_mass_data
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_UploadImage
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SwitchPart
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_StartOta
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_StartOrStopDemoMode
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SetReleaseEncKey
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SavedImage
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SET_THRESHOLD_LEVEL
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_OtaPacket
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_OtaHeader
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Init_Encryption
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Kn_DeviceInfo
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Cur_Part
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_GetOtaStatus
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_ConfigBaudrate
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_thread_event_ota_copy_to_flash
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_thread_event_check_set
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_response_data
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_enroll_msg
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_user_rotate_sensor
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_upload_data
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_kid_verify
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_kid_enroll
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_face_reset
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_enroll_itg
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_download_data
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_db_import
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_db_export
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_face_enroll_seq
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_user_com_fdfr_thread
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_ota_process
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_delete_user
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_face_enroll_correct_direction
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyExpansion
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesEncrypt
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesDecrypt
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_set_image_active
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_ncpu_trigger_int
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_ready_check
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_model
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmdw_model_ipc_handler
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_load_model_info
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NCPU_IRQHandler
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_both_register
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_ready_check
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_only_environmental_adaptation
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_get_pixel_size
</UL>

<P><STRONG><a name="[11b]"></a>kdp_memxfer_flash_sector_multi_erase</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, kdp_memxfer.o(i.kdp_memxfer_flash_sector_multi_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kdp_memxfer_flash_sector_multi_erase &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_erase_multi_sectors
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_init_partition_boot_cfg
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_flash_erase_area
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_main
</UL>

<P><STRONG><a name="[1b0]"></a>kdp_memxfer_flash_to_ddr</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, kdp_memxfer.o(i.kdp_memxfer_flash_to_ddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = kdp_memxfer_flash_to_ddr &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_read_data
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_customer_get
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_get_active_ncpu_partition
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_niram
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ddr_img_user
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_flash_to_ddr
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_handle_first_time_boot
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_update_show_config
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_init_partition_boot_cfg
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_read_all_model_crc
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_main
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_get_scpu_flag_status
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_burn_in_config
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_load_model_info
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_load_model
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_init_flash_load
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_read
</UL>

<P><STRONG><a name="[301]"></a>kdp_memxfer_flash_to_niram</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, kdp_memxfer.o(i.kdp_memxfer_flash_to_niram))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = kdp_memxfer_flash_to_niram &rArr; ota_get_active_ncpu_partition &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_get_active_ncpu_partition
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_ncpu_fw
</UL>

<P><STRONG><a name="[1b4]"></a>kdp_memxfer_init</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, kdp_memxfer.o(i.kdp_memxfer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kdp_memxfer_init &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_initialize
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_get_info
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_get_id
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ddr_img_init
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_handle_first_time_boot
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_ncpu_fw
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_main
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_load_model_info
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_init
</UL>

<P><STRONG><a name="[306]"></a>kdp_model_config_img</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, kdp_model.o(i.kdp_model_config_img))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = kdp_model_config_img &rArr; _kdp_model_set_raw_img_idx &rArr; kdp_com_set_image_active &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_output_ptr
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_raw_img_idx
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_set_raw_img_idx
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run_ex
</UL>

<P><STRONG><a name="[307]"></a>kdp_model_config_liveness_img</STRONG> (Thumb, 482 bytes, Stack size 40 bytes, kdp_model.o(i.kdp_model_config_liveness_img))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = kdp_model_config_liveness_img &rArr; _kdp_model_set_raw_img_idx &rArr; kdp_com_set_image_active &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_output_ptr
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_set_raw_img_idx
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_fuse_lv
</UL>

<P><STRONG><a name="[308]"></a>kdp_model_config_model</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, kdp_model.o(i.kdp_model_config_model))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = kdp_model_config_model &rArr; _kdp_model_load_model_info &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ddr_reserve
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_set_model_active
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_set_model
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_output_ptr
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_raw_img_by_idx
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_model_type_to_slot_index
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_load_model_info
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run_ex
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_fuse_lv
</UL>

<P><STRONG><a name="[30c]"></a>kdp_model_config_result_addr</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, kdp_model.o(i.kdp_model_config_result_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kdp_model_config_result_addr &rArr; kdp_model_get_raw_img_idx
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_output_ptr
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_input_ptr
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_raw_img_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run_ex
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_fuse_lv
</UL>

<P><STRONG><a name="[30d]"></a>kdp_model_face_pose</STRONG> (Thumb, 158 bytes, Stack size 80 bytes, kdp_app_fid.o(i.kdp_model_face_pose))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = kdp_model_face_pose &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run_ex
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_pad_value
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_crop_box_one_side
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_lmk_to_bbox
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_face_pose
</UL>

<P><STRONG><a name="[30f]"></a>kdp_model_face_quality</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, kdp_app_fid.o(i.kdp_model_face_quality))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = kdp_model_face_quality &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run_ex
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_raw_img
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_e2e_face_quality
</UL>

<P><STRONG><a name="[1ac]"></a>kdp_model_fd</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, kdp_app_fid.o(i.kdp_model_fd))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = kdp_model_fd &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_e2e_face_fd_lm
</UL>

<P><STRONG><a name="[2d1]"></a>kdp_model_fr</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, kdp_app_fid.o(i.kdp_model_fr))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = kdp_model_fr &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run_ex
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_raw_img
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_postproc
</UL>

<P><STRONG><a name="[2e5]"></a>kdp_model_fuse_lv</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, kdp_model.o(i.kdp_model_fuse_lv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = kdp_model_fuse_lv &rArr; kdp_model_config_liveness_img &rArr; _kdp_model_set_raw_img_idx &rArr; kdp_com_set_image_active &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_output_ptr
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_raw_img_idx
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_result_addr
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_model
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_liveness_img
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_ncpu_liveness
</UL>

<P><STRONG><a name="[ee]"></a>kdp_model_get_model_info</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kdp_model.o(i.kdp_model_get_model_info))
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tasks_init_flash_load_thread_each
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Kn_DeviceInfo
</UL>

<P><STRONG><a name="[228]"></a>kdp_model_info_get</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, kdp_model.o(i.kdp_model_info_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = kdp_model_info_get
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_main
</UL>

<P><STRONG><a name="[1ae]"></a>kdp_model_lm</STRONG> (Thumb, 100 bytes, Stack size 64 bytes, kdp_app_fid.o(i.kdp_model_lm))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = kdp_model_lm &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run_ex
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_pad_value_extend
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crop_bbox_lm
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_e2e_face_fd_lm
</UL>

<P><STRONG><a name="[312]"></a>kdp_model_nir_eye_lv</STRONG> (Thumb, 272 bytes, Stack size 80 bytes, kdp_app_fid.o(i.kdp_model_nir_eye_lv))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = kdp_model_nir_eye_lv &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run_ex
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_raw_img
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_pad_value
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_crop_box_fl
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_nir_eye_lv
</UL>

<P><STRONG><a name="[313]"></a>kdp_model_nir_hsn_lv</STRONG> (Thumb, 230 bytes, Stack size 112 bytes, kdp_app_fid.o(i.kdp_model_nir_hsn_lv))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = kdp_model_nir_hsn_lv &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run_ex
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_raw_img
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_crop_center_radius
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_crop_pad_hsn
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_nir_hsn_lv
</UL>

<P><STRONG><a name="[315]"></a>kdp_model_nir_lv</STRONG> (Thumb, 210 bytes, Stack size 96 bytes, kdp_app_fid.o(i.kdp_model_nir_lv))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = kdp_model_nir_lv &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run_ex
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_raw_img
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_crop_center_radius
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_pad_value
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_crop_box
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_nir_lv
</UL>

<P><STRONG><a name="[317]"></a>kdp_model_ready_check</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, kdp_model.o(i.kdp_model_ready_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = kdp_model_ready_check &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_load_flag
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_model_type_to_slot_index
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run_ex
</UL>

<P><STRONG><a name="[279]"></a>kdp_model_run_ex</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, kdp_model.o(i.kdp_model_run_ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ddr_reserve
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_output_ptr
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_ready_check
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_raw_img
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_result_addr
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_model
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_img
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_lm
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_fr
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_fd
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_face_quality
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_face_pose
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_nir_face_seg_mask
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_nir_lv
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_nir_hsn_lv
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_nir_eye_lv
</UL>

<P><STRONG><a name="[4a3]"></a>kdp_sensor_get_lux</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, kdp_sensor.o(i.kdp_sensor_get_lux))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kdp_sensor_get_lux
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_get_lux
</UL>

<P><STRONG><a name="[4ae]"></a>kdp_sensor_set_aec_en</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp_sensor.o(i.kdp_sensor_set_aec_en))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_set_aec_en
</UL>

<P><STRONG><a name="[4a4]"></a>kdp_sensor_set_aec_roi</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, kdp_sensor.o(i.kdp_sensor_set_aec_roi))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = kdp_sensor_set_aec_roi
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_set_aec_roi
</UL>

<P><STRONG><a name="[25d]"></a>kdp_sensor_set_fmt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp_sensor.o(i.kdp_sensor_set_fmt))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_set_format
</UL>

<P><STRONG><a name="[4a8]"></a>kdp_sensor_set_gain</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, kdp_sensor.o(i.kdp_sensor_set_gain))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_sensor_set_gain
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_set_gain
</UL>

<P><STRONG><a name="[4a9]"></a>kdp_sensor_set_led</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp_sensor.o(i.kdp_sensor_set_led))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_set_led
</UL>

<P><STRONG><a name="[4ab]"></a>kdp_sensor_sleep</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp_sensor.o(i.kdp_sensor_sleep))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_sleep
</UL>

<P><STRONG><a name="[329]"></a>kdp_serial_init</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, kdp_uart.o(i.kdp_serial_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = kdp_serial_init
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_control
</UL>

<P><STRONG><a name="[31c]"></a>kdp_timer_autoreloadenable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp520_pwm_timer.o(i.kdp_timer_autoreloadenable))
<BR><BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_init
</UL>

<P><STRONG><a name="[318]"></a>kdp_timer_close</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, kdp520_pwm_timer.o(i.kdp_timer_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_timer_close
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_timer_close
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_init
</UL>

<P><STRONG><a name="[319]"></a>kdp_timer_disable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, kdp520_pwm_timer.o(i.kdp_timer_disable))
<BR><BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_close
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_resetall
</UL>

<P><STRONG><a name="[31a]"></a>kdp_timer_init</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, kdp520_pwm_timer.o(i.kdp_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = kdp_timer_init &rArr; kdp_timer_ioctrl &rArr; kdp_timer_resetall
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_close
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_ioctrl
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_int_enable
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_int_clear
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_enable
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_autoreloadenable
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_timer_init
</UL>

<P><STRONG><a name="[31f]"></a>kdp_tmr_init</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, kdp520_tmr.o(i.kdp_tmr_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = kdp_tmr_init &rArr; Timer_Init &rArr; Timer_SetIsr
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_CR
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Counter
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_measure_init
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms_enable
</UL>

<P><STRONG><a name="[28b]"></a>kdp_uart_GetReadIndex</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kdp_uart.o(i.kdp_uart_GetReadIndex))
<BR><BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_comm_receive_data
</UL>

<P><STRONG><a name="[28a]"></a>kdp_uart_GetWriteIndex</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kdp_uart.o(i.kdp_uart_GetWriteIndex))
<BR><BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_comm_receive_data
</UL>

<P><STRONG><a name="[322]"></a>kdp_uart_app_com</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, host_uart_com.o(i.kdp_uart_app_com))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = kdp_uart_app_com &rArr; kdp_uart_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_power_control
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_open
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_control
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_read
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_close
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_reconfig_baud_rate
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_init
</UL>

<P><STRONG><a name="[328]"></a>kdp_uart_app_uart0_log</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, dbg.o(i.kdp_uart_app_uart0_log))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = kdp_uart_app_uart0_log &rArr; kdp_uart_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_power_control
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_open
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_control
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[323]"></a>kdp_uart_close</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, kdp_uart.o(i.kdp_uart_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kdp_uart_close &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_app_com
</UL>

<P><STRONG><a name="[326]"></a>kdp_uart_control</STRONG> (Thumb, 484 bytes, Stack size 40 bytes, kdp_uart.o(i.kdp_uart_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_get_default_timeout
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_serial_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_write
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_power_control
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_app_uart0_log
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_read
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_app_com
</UL>

<P><STRONG><a name="[32b]"></a>kdp_uart_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, kdp_uart.o(i.kdp_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_uart_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[324]"></a>kdp_uart_open</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, kdp_uart.o(i.kdp_uart_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = kdp_uart_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_app_uart0_log
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_app_com
</UL>

<P><STRONG><a name="[325]"></a>kdp_uart_power_control</STRONG> (Thumb, 520 bytes, Stack size 16 bytes, kdp_uart.o(i.kdp_uart_power_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = kdp_uart_power_control &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_control
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_app_uart0_log
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_app_com
</UL>

<P><STRONG><a name="[327]"></a>kdp_uart_read</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, kdp_uart.o(i.kdp_uart_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = kdp_uart_read &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_calculate_fifo_cfg
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_control
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_rx_busy_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_app_com
</UL>

<P><STRONG><a name="[2fe]"></a>kdp_uart_write</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, kdp_uart.o(i.kdp_uart_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_calculate_fifo_cfg
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TX_ISR
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_control
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_check_tx_status
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_printf_nocrlf
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_response_data
</UL>

<P><STRONG><a name="[15c]"></a>kdp_video_renderer_get_params</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, video_renderer.o(i.kdp_video_renderer_get_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_video_renderer_get_params
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_face_note
</UL>

<P><STRONG><a name="[32f]"></a>kdp_video_renderer_open</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, video_renderer.o(i.kdp_video_renderer_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp_video_renderer_open
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_video_renderer_connect_display_panel
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_video_renderer_assign_display_device
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_dp_open
</UL>

<P><STRONG><a name="[332]"></a>kdp_video_renderer_setting</STRONG> (Thumb, 136 bytes, Stack size 72 bytes, video_renderer.o(i.kdp_video_renderer_setting))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = kdp_video_renderer_setting
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_dp_open
</UL>

<P><STRONG><a name="[1f4]"></a>keyExpansion</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, kdp_comm_aes.o(i.keyExpansion))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesEncrypt
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesDecrypt
</UL>

<P><STRONG><a name="[17a]"></a>kl520_api_add_wait_and_get</STRONG> (Thumb, 280 bytes, Stack size 136 bytes, kl520_api_fdfr.o(i.kl520_api_add_wait_and_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = kl520_api_add_wait_and_get &rArr; kl520_api_get_device_info &rArr; kl520_api_camera_get_id &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_event
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_free_device_info
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_event
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_get_result
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add_internal
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_face_add_internal
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_add_timeout
</UL>

<P><STRONG><a name="[121]"></a>kl520_api_ap_com_import_fm_mode_split</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, kl520_api_extra_fmap.o(i.kl520_api_ap_com_import_fm_mode_split))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = kl520_api_ap_com_import_fm_mode_split &rArr; kdp_app_imp_fm_chk
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_imp_fm_chk_int8
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_imp_fm_chk
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_imp_mass_data
</UL>

<P><STRONG><a name="[11d]"></a>kl520_api_ap_com_import_fm_r1n1_inject</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, kl520_api_extra_fmap.o(i.kl520_api_ap_com_import_fm_r1n1_inject))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kl520_api_ap_com_import_fm_r1n1_inject
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_r1_fr
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_fr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_imp_fm_inejct_data
</UL>

<P><STRONG><a name="[186]"></a>kl520_api_cam_disp_close_perm_state_chk</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, kl520_api_camera.o(i.kl520_api_cam_disp_close_perm_state_chk))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = kl520_api_cam_disp_close_perm_state_chk &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_reset_hmi_external_interface
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_user_com_fdfr_thread
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_delete_user
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_face_enroll_correct_direction
</UL>

<P><STRONG><a name="[1c4]"></a>kl520_api_cam_disp_ctrl</STRONG> (Thumb, 298 bytes, Stack size 48 bytes, kl520_api_camera.o(i.kl520_api_cam_disp_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_stop
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_start
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_close
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;permanent_state_set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_camera_open
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_state_rst
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_close_perm_state_chk
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_camera_get_id
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_preexecute_stage2
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_preexecute_stage1
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_face_preexecute
</UL>

<P><STRONG><a name="[ef]"></a>kl520_api_camera_get_id</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, kl520_api_camera.o(i.kl520_api_camera_get_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = kl520_api_camera_get_id &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_get_device_id
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Kn_DeviceInfo
</UL>

<P><STRONG><a name="[479]"></a>kl520_api_camera_register_hook</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kl520_api_camera.o(i.kl520_api_camera_register_hook))
<BR><BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_io_init
</UL>

<P><STRONG><a name="[f8]"></a>kl520_api_customer_get</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, kl520_api.o(i.kl520_api_customer_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = kl520_api_customer_get &rArr; kdp_ddr_reserve &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ddr_reserve
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_user_db_offset
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_customer_info_init
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_init
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SetReleaseEncKey
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Init_Encryption
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_user_rotate_sensor
</UL>

<P><STRONG><a name="[341]"></a>kl520_api_dp_five_face_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_api_dp_five_face_enable))
<BR><BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_add_timeout
</UL>

<P><STRONG><a name="[33c]"></a>kl520_api_dp_open</STRONG> (Thumb, 82 bytes, Stack size 96 bytes, kl520_api.o(i.kl520_api_dp_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = kl520_api_dp_open &rArr; kdp_video_renderer_setting
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_power_on
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_video_renderer_setting
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_video_renderer_open
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_video_renderer_get_idx
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_dp_get_device_id
</UL>

<P><STRONG><a name="[33f]"></a>kl520_api_face_add</STRONG> (Thumb, 192 bytes, Stack size 160 bytes, kl520_api_fdfr.o(i.kl520_api_face_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = kl520_api_face_add &rArr; kl520_api_face_query_all &rArr; kl520_api_fdfr_model_init &rArr; kdp_e2e_face_init &rArr; kdp_e2e_config_image &rArr; kdp_app_get_pixel_size &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_event
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_dp_five_face_enable
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_try_create_thread
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_thread_event
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_event
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_model_init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_query_all
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_enroll_customize_uid
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_face_preexecute
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add_internal
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add_ex
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_add_timeout
</UL>

<P><STRONG><a name="[179]"></a>kl520_api_face_add_ex</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, kl520_api_fdfr.o(i.kl520_api_face_add_ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = kl520_api_face_add_ex &rArr; kl520_api_face_add &rArr; kl520_api_face_query_all &rArr; kl520_api_fdfr_model_init &rArr; kdp_e2e_face_init &rArr; kdp_e2e_config_image &rArr; kdp_app_get_pixel_size &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_face_add_internal
</UL>

<P><STRONG><a name="[343]"></a>kl520_api_face_add_internal</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, kl520_api_fdfr.o(i.kl520_api_face_add_internal))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = kl520_api_face_add_internal &rArr; kl520_api_face_add &rArr; kl520_api_face_query_all &rArr; kl520_api_fdfr_model_init &rArr; kdp_e2e_face_init &rArr; kdp_e2e_config_image &rArr; kdp_app_get_pixel_size &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_flash_to_ddr
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_add_wait_and_get
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_enroll_customize_uid
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_engineering_calibration
</UL>

<P><STRONG><a name="[222]"></a>kl520_api_face_close</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, kl520_api_fdfr.o(i.kl520_api_face_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = kl520_api_face_close &rArr; kl520_api_reset_hmi_external_interface &rArr; kl520_api_cam_disp_state_rst &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_dp_five_face_disable
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_recognition_variable_reset
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_thread_rst_priority
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerDelete
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_free_write_buf
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_free_inf_buf
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_dual_cam_state
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_abort_reg
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_reset_hmi_external_interface
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_engineering_calibration
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sample_face_close
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_main
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_add_timeout
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[243]"></a>kl520_api_face_del</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, kl520_api_fdfr.o(i.kl520_api_face_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = kl520_api_face_del &rArr; kl520_api_fdfr_model_init &rArr; kdp_e2e_face_init &rArr; kdp_e2e_config_image &rArr; kdp_app_get_pixel_size &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_delete
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_model_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_sample_face_del_all
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_sample_face_del_user
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_uart_face_del_some_users
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_face_reset
</UL>

<P><STRONG><a name="[333]"></a>kl520_api_face_get_result</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.kl520_api_face_get_result))
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_face_recognition_note
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_add_wait_and_get
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_snap_image
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
</UL>

<P><STRONG><a name="[34a]"></a>kl520_api_face_liveness</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, kl520_api_fdfr.o(i.kl520_api_face_liveness))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = kl520_api_face_liveness &rArr; _kl520_api_face_preexecute &rArr; kl520_api_face_preexecute_stage2 &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_event
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_try_create_thread
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_event
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_model_init
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_face_preexecute
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
</UL>

<P><STRONG><a name="[1c2]"></a>kl520_api_face_preexecute_stage2</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i.kl520_api_face_preexecute_stage2))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = kl520_api_face_preexecute_stage2 &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tasks_init_cameras_thread
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_face_preexecute
</UL>

<P><STRONG><a name="[dc]"></a>kl520_api_face_query_all</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, kl520_api_fdfr.o(i.kl520_api_face_query_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = kl520_api_face_query_all &rArr; kl520_api_fdfr_model_init &rArr; kdp_e2e_face_init &rArr; kdp_e2e_config_image &rArr; kdp_app_get_pixel_size &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_get_user_info_by_idx
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_get_user_id
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_model_init
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_sample_face_del_all
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_GetAllUserInfo
</UL>

<P><STRONG><a name="[208]"></a>kl520_api_face_query_first_avail_user_idx</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, kl520_api_fdfr.o(i.kl520_api_face_query_first_avail_user_idx))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = kl520_api_face_query_first_avail_user_idx &rArr; kl520_api_fdfr_model_init &rArr; kdp_e2e_face_init &rArr; kdp_e2e_config_image &rArr; kdp_app_get_pixel_size &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_get_user_info_by_idx
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_model_init
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
</UL>

<P><STRONG><a name="[34b]"></a>kl520_api_face_recognition</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, kl520_api_fdfr.o(i.kl520_api_face_recognition))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = kl520_api_face_recognition &rArr; _kl520_api_face_preexecute &rArr; kl520_api_face_preexecute_stage2 &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_event
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_try_create_thread
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_event
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_model_init
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_face_preexecute
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
</UL>

<P><STRONG><a name="[205]"></a>kl520_api_fdfr_element</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, kl520_api_fdfr.o(i.kl520_api_fdfr_element))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = kl520_api_fdfr_element &rArr; _kl520_api_fdfr_only &rArr; kdp_e2e_face_n1r1 &rArr; kdp_e2e_face_n1 &rArr; kdp_e2e_face_n1_fd_lm_combo &rArr; _kdp_e2e_face_fd_lm &rArr; kdp_model_lm &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_only
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_thread_data_prepare
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_cam_capture
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_state_get
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_sensor_delay_fdfr
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSetPriority
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetPriority
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_sensor_delay_fdfr
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_sim_is_running
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_is_abort_flag
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_dual_cam_state
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_dual_cam_state
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_sensor_rst
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_snap_image_event
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_liveness_event
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
</UL>

<P><STRONG><a name="[351]"></a>kl520_api_fdfr_init_thrd</STRONG> (Thumb, 78 bytes, Stack size 48 bytes, kl520_api_fdfr.o(i.kl520_api_fdfr_init_thrd))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = kl520_api_fdfr_init_thrd &rArr; osEventFlagsClear &rArr; svcRtxEventFlagsClear
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_event
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetPriority
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsClear
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_thread
</UL>

<P><STRONG><a name="[340]"></a>kl520_api_fdfr_model_init</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, kl520_api_fdfr.o(i.kl520_api_fdfr_model_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = kl520_api_fdfr_model_init &rArr; kdp_e2e_face_init &rArr; kdp_e2e_config_image &rArr; kdp_app_get_pixel_size &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_recognition_variable_reset
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_init_addr
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_init
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_init
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_init
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_init
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_customer_info_init
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snap_image
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_recognition
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_query_first_avail_user_idx
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_query_all
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_liveness
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_del
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tasks_init_models_thread
</UL>

<P><STRONG><a name="[344]"></a>kl520_api_fdfr_stop</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, kl520_api_fdfr.o(i.kl520_api_fdfr_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = kl520_api_fdfr_stop &rArr; osEventFlagsClear &rArr; svcRtxEventFlagsClear
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_thread_event
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsClear
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
</UL>

<P><STRONG><a name="[334]"></a>kl520_api_get_device_info</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, kl520_api.o(i.kl520_api_get_device_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = kl520_api_get_device_info &rArr; kl520_api_camera_get_id &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ddr_reserve
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_comm_get_protocol_version
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_memxfer_get_flash_device_id
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_scpu_version
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_ncpu_version
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_dp_get_device_id
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_io_get_extra_device_name
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_io_get_extra_device_id
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_io_get_extra_device_cnt
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_touch_get_device_id
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_camera_get_id
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sys_get_unique_id
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sys_get_spl_version
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_load_model
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_model_info
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_model_count
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_add_wait_and_get
</UL>

<P><STRONG><a name="[eb]"></a>kl520_api_get_ncpu_version</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_api_get_ncpu_version))
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;info
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_check_info
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Kn_DeviceInfo
</UL>

<P><STRONG><a name="[35c]"></a>kl520_api_log_set_user_level</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, kl520_api.o(i.kl520_api_log_set_user_level))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kl520_api_log_set_user_level
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_is_inited
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_set_user_level_scpu
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_set_user_level_ncpu
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[348]"></a>kl520_api_reset_hmi_external_interface</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i.kl520_api_reset_hmi_external_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = kl520_api_reset_hmi_external_interface &rArr; kl520_api_cam_disp_state_rst &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_hmi_ctrl_state_set
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_state_rst
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_close_perm_state_chk
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
</UL>

<P><STRONG><a name="[10a]"></a>kl520_api_save_snap_img_addr</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, kl520_api_snapshot.o(i.kl520_api_save_snap_img_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = kl520_api_save_snap_img_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SavedImage
</UL>

<P><STRONG><a name="[360]"></a>kl520_api_snap_image</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, kl520_api_fdfr.o(i.kl520_api_snap_image))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = kl520_api_snap_image &rArr; _kl520_api_face_preexecute &rArr; kl520_api_face_preexecute_stage2 &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_try_create_thread
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_model_init
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_face_preexecute
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_snap_image
</UL>

<P><STRONG><a name="[361]"></a>kl520_api_snapshot_adv_init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, kl520_api_snapshot.o(i.kl520_api_snapshot_adv_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = kl520_api_snapshot_adv_init &rArr; kdp_ddr_reserve &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ddr_reserve
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_snap_image
</UL>

<P><STRONG><a name="[362]"></a>kl520_api_snapshot_dma</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, kl520_api_snapshot.o(i.kl520_api_snapshot_dma))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = kl520_api_snapshot_dma &rArr; kdp_dma_wait_dma_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_wait_dma_int
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_reset_ch
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_normal_mode
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_is_ch_busy
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_init
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_enable_dma_int
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_enable_ch
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_disable_ch
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_clear_interrupt
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_save_to_snap_ddr
</UL>

<P><STRONG><a name="[365]"></a>kl520_api_tasks_init</STRONG> (Thumb, 68 bytes, Stack size 80 bytes, kl520_api_fdfr.o(i.kl520_api_tasks_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = kl520_api_tasks_init &rArr; osThreadNew
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[366]"></a>kl520_api_tasks_init_wait_ready</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, kl520_api_fdfr.o(i.kl520_api_tasks_init_wait_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kl520_api_tasks_init_wait_ready &rArr; osDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_thread
</UL>

<P><STRONG><a name="[368]"></a>kl520_com_buf_addr_init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, kdp_comm.o(i.kl520_com_buf_addr_init))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_reconfig_baud_rate
</UL>

<P><STRONG><a name="[367]"></a>kl520_com_init</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, kdp_comm.o(i.kl520_com_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = kl520_com_init &rArr; kdp_uart_app_com &rArr; kdp_uart_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ddr_reserve
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_app_com
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OTA_Thread
</UL>

<P><STRONG><a name="[da]"></a>kl520_com_reconfig_baud_rate</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, kdp_comm.o(i.kl520_com_reconfig_baud_rate))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = kl520_com_reconfig_baud_rate &rArr; kdp_uart_app_com &rArr; kdp_uart_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_buf_addr_init
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_app_com
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_ConfigBaudrate
</UL>

<P><STRONG><a name="[36c]"></a>kl520_com_response_Done_check</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, kdp_comm.o(i.kl520_com_response_Done_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kl520_com_response_Done_check
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_thread
</UL>

<P><STRONG><a name="[a1]"></a>kl520_com_thread</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, kdp_comm.o(i.kl520_com_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = kl520_com_thread &rArr; kneron_lwcom_packet_analyze &rArr; PkgDecrypt &rArr; aesDecrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSetPriority
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_tasks_init_wait_ready
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_init_thrd
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kneron_com_parser
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_system_ready_note_msg
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_error_reply_msg
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_user_com_thread
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kneron_lwcom_packet_analyze
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_wait_receive
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_response_Done_check
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_comm_post_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ota.o(i.Drv_OTA_Thread)
</UL>
<P><STRONG><a name="[36a]"></a>kl520_com_wait_receive</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, kdp_comm.o(i.kl520_com_wait_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = kl520_com_wait_receive &rArr; kneron_lwcom_packet_size
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kneron_lwcom_packet_size
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_comm_receive_data
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_thread
</UL>

<P><STRONG><a name="[352]"></a>kl520_customer_info_init</STRONG> (Thumb, 124 bytes, Stack size 56 bytes, kl520_api_fdfr.o(i.kl520_customer_info_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = kl520_customer_info_init &rArr; kl520_api_customer_get &rArr; kdp_ddr_reserve &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_customer_write
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_customer_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_set_rgb_to_nir_ratio
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_fr_threshold_level
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_model_init
</UL>

<P><STRONG><a name="[4c]"></a>kneron_lwcom_packet_analyze</STRONG> (Thumb, 568 bytes, Stack size 40 bytes, kdp_comm.o(i.kneron_lwcom_packet_analyze))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = kneron_lwcom_packet_analyze &rArr; PkgDecrypt &rArr; aesDecrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ota_data_status
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_cal
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StreamsToBigEndU16
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PkgDecrypt
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_thread
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_comm_and_gui_fdr.o(.data)
</UL>
<P><STRONG><a name="[36f]"></a>kneron_lwcom_packet_size</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, kdp_comm.o(i.kneron_lwcom_packet_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kneron_lwcom_packet_size
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ota_data_status
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StreamsToBigEndU16
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_wait_receive
</UL>

<P><STRONG><a name="[63]"></a>main</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = main &rArr; kl520_com_bus_init &rArr; Drv_OTA_Thread &rArr; kl520_com_init &rArr; kdp_uart_app_com &rArr; kdp_uart_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_measure_init
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_log_set_user_level
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_tasks_init
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_io_init
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_init
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init_ncpu
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_init
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinmux_init
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_handle_first_time_boot
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_ncpu_fw
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_bus_init
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_init
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_drv_init
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ddr_init
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_init
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddr_init
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msgZhian
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;info
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_app_uart0_log
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ipc_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[1b3]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_init
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_open
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_load_model_info
</UL>

<P><STRONG><a name="[135]"></a>md5_covers</STRONG> (Thumb, 50 bytes, Stack size 28 bytes, kdp_comm_md5.o(i.md5_covers))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = md5_covers
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_bin_double_check
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ota_MD5_checksum
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_db_export
</UL>

<P><STRONG><a name="[fd]"></a>md5_main</STRONG> (Thumb, 34 bytes, Stack size 96 bytes, kdp_comm_md5.o(i.md5_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = md5_main &rArr; MD5Final &rArr; MD5Update &rArr; MD5Transform &rArr; MD5Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Update
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Final
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_bin_double_check
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ota_MD5_checksum
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Init_Encryption
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_db_export
</UL>

<P><STRONG><a name="[1fd]"></a>mixColumns</STRONG> (Thumb, 144 bytes, Stack size 96 bytes, kdp_comm_aes.o(i.mixColumns))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = mixColumns &rArr; GMul
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GMul
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesEncrypt
</UL>

<P><STRONG><a name="[385]"></a>model_protect_check</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, w25q256jv.o(i.model_protect_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = model_protect_check &rArr; address_protect_check &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_protect_check
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_program
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_erase_multi_sector
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_64k_erase
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_4k_erase
</UL>

<P><STRONG><a name="[386]"></a>mpu_niram_enable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mpu.o(i.mpu_niram_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mpu_niram_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARM_MPU_SetRegionEx
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARM_MPU_Enable
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARM_MPU_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_ncpu_fw
</UL>

<P><STRONG><a name="[381]"></a>msgZhian</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, main.o(i.msgZhian))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = msgZhian &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_scpu_version
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2c0]"></a>nir_aec_tune_for_fd_search</STRONG> (Thumb, 382 bytes, Stack size 32 bytes, kdp_e2e_camera.o(i.nir_aec_tune_for_fd_search))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = nir_aec_tune_for_fd_search &rArr; kdp_e2e_set_dual_cam_state &rArr; an_nir_gain_setting &rArr; kdp_camera_set_gain
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_dual_cam_state
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_sensor_rst
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_nir_led_flag_on
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aec_e2e_multiply_factor_set
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_fd
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[2b5]"></a>nir_continuous_gain_tune</STRONG> (Thumb, 222 bytes, Stack size 48 bytes, kdp_e2e_camera.o(i.nir_continuous_gain_tune))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = nir_continuous_gain_tune &rArr; estimate_nose_skin_value &rArr; _calc_skin_value_lm
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_dual_cam_state
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_r1_lm
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_lm
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_sensor_rst
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_nose_skin_value
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aec_e2e_multiply_factor_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[38a]"></a>nir_led_init</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, user_io.o(i.nir_led_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nir_led_init &rArr; kdp520_gpio_setdir
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_gpio_setdata
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_gpio_cleardata
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_gpio_setdir
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_led_open
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_io_init
</UL>

<P><STRONG><a name="[2c6]"></a>nir_only_surrond</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, kdp_e2e_camera.o(i.nir_only_surrond))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nir_only_surrond &rArr; kdp_e2e_set_dual_cam_state &rArr; an_nir_gain_setting &rArr; kdp_camera_set_gain
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_dual_cam_state
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_sensor_rst
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aec_e2e_multiply_factor_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_only_environmental_adaptation
</UL>

<P><STRONG><a name="[25f]"></a>nor_flash_quad_mode_en</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, w25q256jv.o(i.nor_flash_quad_mode_en))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = nor_flash_quad_mode_en &rArr; norflash_quad_mode_read &rArr; kdp520_spi_read_Rx_FIFO
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_write_data
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_set_commands
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_control_volatile
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_control
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_quad_mode_read
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_flash_check_status_til_ready
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_initialize
</UL>

<P><STRONG><a name="[393]"></a>norflash_4Bytes_ctrl</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, w25q256jv.o(i.norflash_4Bytes_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = norflash_4Bytes_ctrl &rArr; kdp520_spi_set_commands
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_wait_command_complete
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_set_commands
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_read
</UL>

<P><STRONG><a name="[43]"></a>norflash_4k_erase</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, w25q256jv.o(i.norflash_4k_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = norflash_4k_erase &rArr; model_protect_check &rArr; address_protect_check &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_wait_command_complete
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_switch_org
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_switch_fail
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_set_commands
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_control
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_busy_check
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_protect_check
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_erase_multi_sector
</UL>
<BR>[Address Reference Count : 1]<UL><LI> w25q256jv.o(.data)
</UL>
<P><STRONG><a name="[44]"></a>norflash_64k_erase</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, w25q256jv.o(i.norflash_64k_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = norflash_64k_erase &rArr; model_protect_check &rArr; address_protect_check &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_wait_command_complete
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_switch_org
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_switch_fail
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_set_commands
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_control
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_busy_check
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_protect_check
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_erase_multi_sector
</UL>
<BR>[Address Reference Count : 1]<UL><LI> w25q256jv.o(.data)
</UL>
<P><STRONG><a name="[42]"></a>norflash_erase_multi_sector</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, w25q256jv.o(i.norflash_erase_multi_sector))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = norflash_erase_multi_sector &rArr; norflash_64k_erase &rArr; model_protect_check &rArr; address_protect_check &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_64k_erase
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_4k_erase
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_protect_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> w25q256jv.o(.data)
</UL>
<P><STRONG><a name="[46]"></a>norflash_get_info</STRONG> (Thumb, 794 bytes, Stack size 64 bytes, w25q256jv.o(i.norflash_get_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = norflash_get_info &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_wait_command_complete
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_switch_org
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_switch_fail
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_set_commands
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_read_Rx_FIFO
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_control_volatile
</UL>
<BR>[Address Reference Count : 1]<UL><LI> w25q256jv.o(.data)
</UL>
<P><STRONG><a name="[40]"></a>norflash_program</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, w25q256jv.o(i.norflash_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = norflash_program &rArr; model_protect_check &rArr; address_protect_check &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_running
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_address_check
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_protect_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> w25q256jv.o(.data)
</UL>
<P><STRONG><a name="[41]"></a>norflash_read</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, w25q256jv.o(i.norflash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = norflash_read &rArr; kdp_flash_to_ddr_dma_copy &rArr; kdp_dma_wait_dma_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_switch_org
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_set_commands
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_to_ddr_dma_copy
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_4Bytes_ctrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> w25q256jv.o(.data)
</UL>
<P><STRONG><a name="[38f]"></a>norflash_write_control_volatile</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, w25q256jv.o(i.norflash_write_control_volatile))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = norflash_write_control_volatile &rArr; kdp520_spi_set_commands
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_wait_command_complete
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_set_commands
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nor_flash_quad_mode_en
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_get_info
</UL>

<P><STRONG><a name="[39a]"></a>norflash_write_running</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, w25q256jv.o(i.norflash_write_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = norflash_write_running &rArr; norflash_busy_check &rArr; kdp520_spi_read_Rx_FIFO
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_write_Tx_FIFO
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_wait_command_complete
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_switch_org
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_switch_fail
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_set_commands
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_control
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_busy_check
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_program
</UL>

<P><STRONG><a name="[d9]"></a>osDelay</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, rtx_delay.o(i.osDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelayError
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelay
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_open_event
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_error
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add_internal
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_next_inf
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_init_flash_load
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_tasks_init_wait_ready
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_reset_hmi_external_interface
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_start
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_preexecute_stage1
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tasks_init_flash_load_thread_each
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_adc_init
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_read
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_thread
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_face_add_internal
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_fr_update_thread
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_snap_image
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysWaitDelayTime
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_ConfigBaudrate
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_thread_event_ota_copy_to_flash
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_thread_event_check_set
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_face_reset
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_ota_process
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_ncpu_trigger_int
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_ready_check
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_model
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_set_raw_img_idx
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_ready_check
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_fd_lm_combo
</UL>

<P><STRONG><a name="[1ed]"></a>osEventFlagsSet</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, rtx_evflags.o(i.osEventFlagsSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = osEventFlagsSet &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsSetDone
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsSet
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsSet
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_open_event
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_event
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_user_com_fdfr_thread
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmdw_model_ipc_handler
</UL>

<P><STRONG><a name="[1bb]"></a>osEventFlagsWait</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, rtx_evflags.o(i.osEventFlagsWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osEventFlagsWait
</UL>
<BR>[Calls]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitNotCompleted
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitCompleted
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWait
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_event
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_stop
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_event_interrupt
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_run
</UL>

<P><STRONG><a name="[24e]"></a>osKernelGetInfo</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, rtx_kernel.o(i.osKernelGetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = osKernelGetInfo &rArr; svcRtxKernelGetInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetInfo
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelGetInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;info
</UL>

<P><STRONG><a name="[382]"></a>osKernelGetState</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rtx_kernel.o(i.osKernelGetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetState
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[383]"></a>osKernelStart</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rtx_kernel.o(i.osKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osKernelStart
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelStart
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b0]"></a>osMessageQueueGet</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, rtx_msgqueue.o(i.osMessageQueueGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = osMessageQueueGet &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueGet
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueRetrieved
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueNotRetrieved
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGet
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerThread
</UL>

<P><STRONG><a name="[3b7]"></a>osMessageQueuePut</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, rtx_msgqueue.o(i.osMessageQueuePut))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = osMessageQueuePut &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueuePut
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueNotInserted
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueInsertPending
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerTick
</UL>

<P><STRONG><a name="[19b]"></a>osMutexAcquire</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, rtx_mutex.o(i.osMutexAcquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osMutexAcquire
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_ddr_to_flash
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_sector_multi_erase
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_sector_erase4k
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_ddr_to_flash_wo_erase
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_init
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snapshot_dma
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_stop
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_start
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_lock
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_write
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_read_bytes
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_read
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_lock_timeout
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_write_lock
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_response_data
</UL>

<P><STRONG><a name="[3c2]"></a>osRtxMemoryAlloc</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, rtx_memory.o(i.osRtxMemoryAlloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osRtxMemoryAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryAlloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsNew
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerNew
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreNew
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexNew
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
</UL>

<P><STRONG><a name="[3b9]"></a>osRtxMemoryPoolAlloc</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, rtx_mempool.o(i.osRtxMemoryPoolAlloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osRtxMemoryPoolAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_c97899d2__atomic_link_get
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_c97899d2__atomic_inc32
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryBlockAlloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsNew
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerNew
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreNew
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexNew
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
</UL>

<P><STRONG><a name="[3c7]"></a>osRtxMemoryPoolFree</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, rtx_mempool.o(i.osRtxMemoryPoolFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osRtxMemoryPoolFree
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_c97899d2__atomic_link_put
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_c97899d2__atomic_dec32
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryBlockFree
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerDelete
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadFree
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
</UL>

<P><STRONG><a name="[3cf]"></a>osRtxMutexOwnerRelease</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, rtx_mutex.o(i.osRtxMutexOwnerRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = osRtxMutexOwnerRelease &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexReleased
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquired
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[3d2]"></a>osRtxMutexOwnerRestore</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, rtx_mutex.o(i.osRtxMutexOwnerRestore))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osRtxMutexOwnerRestore &rArr; osRtxThreadListSort &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[c0]"></a>osRtxPendSV_Handler</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, rtx_system.o(i.osRtxPendSV_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = osRtxPendSV_Handler &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_dec16_nz
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_inc16_lim
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[3a5]"></a>osRtxPostProcess</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, rtx_system.o(i.osRtxPostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_inc16_lim
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_inc16_lt
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelErrorNotify
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[3dd]"></a>osRtxThreadDelayTick</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, rtx_thread.o(i.osRtxThreadDelayTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osRtxThreadDelayTick &rArr; osRtxMutexOwnerRestore &rArr; osRtxThreadListSort &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitTimeout
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRoot
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRestore
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadRegPtr
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadUnblocked
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitTimeout
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreAcquireTimeout
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquireTimeout
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueuePutTimeout
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetTimeout
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolAllocTimeout
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelayCompleted
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
</UL>

<P><STRONG><a name="[3d6]"></a>osRtxThreadDispatch</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, rtx_thread.o(i.osRtxThreadDispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osRtxThreadDispatch &rArr; osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadBlock
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPendSV_Handler
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSetPriority
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
</UL>

<P><STRONG><a name="[3d3]"></a>osRtxThreadListSort</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rtx_thread.o(i.osRtxThreadListSort))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osRtxThreadListSort &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSetPriority
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRestore
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
</UL>

<P><STRONG><a name="[3f1]"></a>osRtxThreadStartup</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, rtx_thread.o(i.osRtxThreadStartup))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = osRtxThreadStartup &rArr; svcRtxThreadNew &rArr; osRtxMemoryAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[c1]"></a>osRtxTick_Handler</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, rtx_system.o(i.osRtxTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = osRtxTick_Handler &rArr; osRtxThreadDelayTick &rArr; osRtxMutexOwnerRestore &rArr; osRtxThreadListSort &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_AcknowledgeIRQ
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadPreempted
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[b6]"></a>osRtxTimerThread</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, rtx_timer.o(i.osRtxTimerThread))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = osRtxTimerThread &rArr; osMessageQueueGet &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_lib.o(.rodata)
</UL>
<P><STRONG><a name="[3f5]"></a>osSemaphoreAcquire</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, rtx_semaphore.o(i.osSemaphoreAcquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osSemaphoreAcquire &rArr; SemaphoreTokenDecrement
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SemaphoreTokenDecrement
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreNotAcquired
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreError
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreAcquired
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fb_sem_lock
</UL>

<P><STRONG><a name="[2f0]"></a>osSemaphoreRelease</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, rtx_semaphore.o(i.osSemaphoreRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = osSemaphoreRelease &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SemaphoreTokenIncrement
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreReleased
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreRelease
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreError
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_next_write
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_buffer_write_next
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_next_inf
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_inf_done
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_free_write_buf
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_free_inf_buf
</UL>

<P><STRONG><a name="[16e]"></a>osThreadFlagsGet</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, rtx_thread.o(i.osThreadFlagsGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osThreadFlagsGet
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsGet
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_set_event
</UL>

<P><STRONG><a name="[401]"></a>osThreadFlagsSet</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, rtx_thread.o(i.osThreadFlagsSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = osThreadFlagsSet &rArr;  osRtxPostProcess (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsSet
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsSetDone
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsSet
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsError
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_thread_event
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_error_notify
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scpu_usage_fault
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scpu_mem_mnmt
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scpu_hard_fault
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scpu_bus_fault
</UL>

<P><STRONG><a name="[251]"></a>osThreadNew</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, rtx_thread.o(i.osThreadNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osThreadNew
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadNew
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_tasks_init
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_init_thrd
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fdfr_update_fr_entry
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_init
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_user_com_thread
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OTA_Thread
</UL>

<P><STRONG><a name="[349]"></a>osTimerDelete</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rtx_timer.o(i.osTimerDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osTimerDelete
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerError
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
</UL>

<P><STRONG><a name="[134]"></a>ota_auto_update</STRONG> (Thumb, 258 bytes, Stack size 64 bytes, kdp_comm_app.o(i.ota_auto_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = ota_auto_update &rArr; ota_bin_double_check &rArr; md5_main &rArr; MD5Final &rArr; MD5Update &rArr; MD5Transform &rArr; MD5Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_set_protect_bypass
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_update_case
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_burn_in_config
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_check_info
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_bin_double_check
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtaProcess_run
</UL>

<P><STRONG><a name="[223]"></a>ota_bin_check</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, ota.o(i.ota_bin_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ota_bin_check
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_main
</UL>

<P><STRONG><a name="[40c]"></a>ota_bin_double_check</STRONG> (Thumb, 176 bytes, Stack size 128 bytes, kdp_comm_app.o(i.ota_bin_double_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = ota_bin_double_check &rArr; md5_main &rArr; MD5Final &rArr; MD5Update &rArr; MD5Transform &rArr; MD5Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_printf_nocrlf
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5_main
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5_covers
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_auto_update
</UL>

<P><STRONG><a name="[410]"></a>ota_burn_in_config</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, ota_update.o(i.ota_burn_in_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = ota_burn_in_config &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_ddr_to_flash
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_auto_update
</UL>

<P><STRONG><a name="[40d]"></a>ota_check_info</STRONG> (Thumb, 258 bytes, Stack size 72 bytes, kdp_comm_app.o(i.ota_check_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = ota_check_info &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_scpu_version
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_ncpu_version
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_model_version
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StreamsToBigEndU32
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_auto_update
</UL>

<P><STRONG><a name="[302]"></a>ota_get_active_ncpu_partition</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, ota_update.o(i.ota_get_active_ncpu_partition))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = ota_get_active_ncpu_partition &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_init_partition_boot_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_niram
</UL>

<P><STRONG><a name="[112]"></a>ota_get_scpu_flag_status</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ota_update.o(i.ota_get_scpu_flag_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ota_get_scpu_flag_status &rArr; kdp_memxfer_flash_to_ddr &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SwitchPart
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Cur_Part
</UL>

<P><STRONG><a name="[378]"></a>ota_handle_first_time_boot</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, ota_update.o(i.ota_handle_first_time_boot))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = ota_handle_first_time_boot &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_ddr_to_flash
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_init
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_register
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[412]"></a>ota_init_partition_boot_cfg</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, ota_update.o(i.ota_init_partition_boot_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ota_init_partition_boot_cfg &rArr; kdp_memxfer_ddr_to_flash &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_ddr_to_flash
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_sector_multi_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_update_force_switch_active_partition
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_get_active_ncpu_partition
</UL>

<P><STRONG><a name="[40e]"></a>ota_update_case</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, ota_update.o(i.ota_update_case))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = ota_update_case &rArr; drv_flash_main &rArr; kl520_api_face_close &rArr; kl520_api_reset_hmi_external_interface &rArr; kl520_api_cam_disp_state_rst &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_main
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OTA_init
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_auto_update
</UL>

<P><STRONG><a name="[4b]"></a>ota_update_deep_sleep</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ota_update.o(i.ota_update_deep_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = ota_update_deep_sleep &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsWait
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ota_update.o(.data)
</UL>
<P><STRONG><a name="[416]"></a>ota_update_force_switch_active_partition</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, ota_update.o(i.ota_update_force_switch_active_partition))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = ota_update_force_switch_active_partition &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_ddr_to_flash
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_init_partition_boot_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ota_switch_SCPU
</UL>

<P><STRONG><a name="[118]"></a>ota_update_scpu_flag_status</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ota_update.o(i.ota_update_scpu_flag_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ota_update_scpu_flag_status
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_flash_action_doing
</UL>

<P><STRONG><a name="[417]"></a>ota_update_show_config</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, ota_update.o(i.ota_update_show_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = ota_update_show_config &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchScpu
</UL>

<P><STRONG><a name="[4a]"></a>ota_update_sleep</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ota_update.o(i.ota_update_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = ota_update_sleep &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsWait
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ota_update.o(.data)
</UL>
<P><STRONG><a name="[373]"></a>pinmux_init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, pinmux.o(i.pinmux_init))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[41c]"></a>power_manager_error_notify</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, power_manager.o(i.power_manager_error_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxErrorNotify
</UL>

<P><STRONG><a name="[37c]"></a>power_manager_init</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, power_manager.o(i.power_manager_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = power_manager_init &rArr; osThreadNew
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetVector
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[413]"></a>power_manager_register</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, power_manager.o(i.power_manager_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = power_manager_register
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_handle_first_time_boot
</UL>

<P><STRONG><a name="[8c]"></a>power_manager_thread</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, power_manager.o(i.power_manager_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = power_manager_thread &rArr; power_mgr_sw_reset &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mgr_sw_reset
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_get_date_time_in_secs
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_current_time_info
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_enable
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsWait
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_do_shutdown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> power_manager.o(i.power_manager_init)
</UL>
<P><STRONG><a name="[419]"></a>power_mgr_set_domain</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, power.o(i.power_mgr_set_domain))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = power_mgr_set_domain
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_do_shutdown
</UL>

<P><STRONG><a name="[422]"></a>power_mgr_set_domain_2</STRONG> (Thumb, 124 bytes, Stack size 12 bytes, power.o(i.power_mgr_set_domain_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = power_mgr_set_domain_2
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mgr_set_mode
</UL>

<P><STRONG><a name="[421]"></a>power_mgr_set_mode</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, power.o(i.power_mgr_set_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = power_mgr_set_mode &rArr; _power_mgr_wait_domain_ready
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mgr_set_domain_2
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_power_mgr_wait_domain_ready
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[41b]"></a>power_mgr_softoff</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, power.o(i.power_mgr_softoff))
<BR><BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_do_shutdown
</UL>

<P><STRONG><a name="[130]"></a>power_mgr_sw_reset</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, power.o(i.power_mgr_sw_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = power_mgr_sw_reset &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_thread
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SystemReset
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_ota_process
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NCPU_IRQHandler
</UL>

<P><STRONG><a name="[18d]"></a>response_delete_one_msg</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, kdp_comm_protoco.o(i.response_delete_one_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = response_delete_one_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_delete_user
</UL>

<P><STRONG><a name="[425]"></a>response_get_Alluser_info_msg</STRONG> (Thumb, 62 bytes, Stack size 240 bytes, kdp_comm_protoco.o(i.response_get_Alluser_info_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 860<LI>Call Chain = response_get_Alluser_info_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[426]"></a>response_get_version_info_msg_zhian</STRONG> (Thumb, 52 bytes, Stack size 56 bytes, kdp_comm_protoco.o(i.response_get_version_info_msg_zhian))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = response_get_version_info_msg_zhian &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[427]"></a>response_get_version_info_msg_zhian_prd</STRONG> (Thumb, 52 bytes, Stack size 56 bytes, kdp_comm_protoco.o(i.response_get_version_info_msg_zhian_prd))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = response_get_version_info_msg_zhian_prd &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[a0]"></a>rgb_camera_power_on</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, user_io.o(i.rgb_camera_power_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rgb_camera_power_on &rArr; rgb_camera_rst &rArr; kdp520_gpio_setdir
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_gpio_setdata
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_gpio_cleardata
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_camera_rst
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_gpio_setdir
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_camera_power_on
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_io.o(i.user_io_init)
</UL>
<P><STRONG><a name="[428]"></a>rgb_camera_rst</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, user_io.o(i.rgb_camera_rst))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rgb_camera_rst &rArr; kdp520_gpio_setdir
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_gpio_setdata
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_gpio_cleardata
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_gpio_setdir
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_camera_power_on
</UL>

<P><STRONG><a name="[41f]"></a>rtc_alarm_enable</STRONG> (Thumb, 260 bytes, Stack size 24 bytes, rtc.o(i.rtc_alarm_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rtc_alarm_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_rectify_time
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_rectify_date
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_get_time
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alm_enable
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alm_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_thread
</UL>

<P><STRONG><a name="[41e]"></a>rtc_get_date_time_in_secs</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, rtc.o(i.rtc_get_date_time_in_secs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtc_get_date_time_in_secs
</UL>
<BR>[Calls]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_get_time
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_thread
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_cpu_idle
</UL>

<P><STRONG><a name="[15e]"></a>send_EnrollOrVerify_note_msg</STRONG> (Thumb, 44 bytes, Stack size 48 bytes, kdp_comm_protoco.o(i.send_EnrollOrVerify_note_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = send_EnrollOrVerify_note_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_fill_hdr
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_face_note
</UL>

<P><STRONG><a name="[42f]"></a>send_OtaStatus_reply_msg</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, kdp_comm_protoco.o(i.send_OtaStatus_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = send_OtaStatus_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[233]"></a>send_db_export_reply_msg</STRONG> (Thumb, 80 bytes, Stack size 72 bytes, kdp_comm_protoco.o(i.send_db_export_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 692<LI>Call Chain = send_db_export_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_db_export
</UL>

<P><STRONG><a name="[237]"></a>send_db_import_request_reply_msg</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, kdp_comm_protoco.o(i.send_db_import_request_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = send_db_import_request_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_uart_reply
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_db_import
</UL>

<P><STRONG><a name="[191]"></a>send_enroll_reply_msg</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, kdp_comm_protoco.o(i.send_enroll_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = send_enroll_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_uart_reply
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_add_timeout
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_kid_enroll
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_face_enroll
</UL>

<P><STRONG><a name="[431]"></a>send_savedImage_reply_msg</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, kdp_comm_protoco.o(i.send_savedImage_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = send_savedImage_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[432]"></a>send_uploadImage_reply_msg</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, kdp_comm_protoco.o(i.send_uploadImage_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = send_uploadImage_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_fill_hdr
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[433]"></a>send_verify_reply_msg</STRONG> (Thumb, 82 bytes, Stack size 72 bytes, kdp_comm_protoco.o(i.send_verify_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 692<LI>Call Chain = send_verify_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_uart_reply
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
</UL>

<P><STRONG><a name="[1fc]"></a>shiftRows</STRONG> (Thumb, 84 bytes, Stack size 36 bytes, kdp_comm_aes.o(i.shiftRows))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = shiftRows
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesEncrypt
</UL>

<P><STRONG><a name="[434]"></a>sp2509_init</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, sp2509.o(i.sp2509_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = sp2509_init &rArr; sp2509_write_reg &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_write_reg
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_set_params
</UL>

<P><STRONG><a name="[439]"></a>sp2509_sensor_set_exp_time</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, sp2509.o(i.sp2509_sensor_set_exp_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sp2509_sensor_set_exp_time &rArr; kdp_drv_i2c_write
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_drv_i2c_write
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_r_sensor_set_exp_time
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_l_sensor_set_exp_time
</UL>

<P><STRONG><a name="[43a]"></a>sp2509_sensor_set_gain</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, sp2509.o(i.sp2509_sensor_set_gain))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sp2509_sensor_set_gain &rArr; kdp_drv_i2c_write
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_drv_i2c_write
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_r_sensor_set_gain
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_l_sensor_set_gain
</UL>

<P><STRONG><a name="[1fa]"></a>storeStateArray</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, kdp_comm_aes.o(i.storeStateArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = storeStateArray
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesEncrypt
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesDecrypt
</UL>

<P><STRONG><a name="[1fb]"></a>subBytes</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, kdp_comm_aes.o(i.subBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = subBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesEncrypt
</UL>

<P><STRONG><a name="[27d]"></a>sys_camera_global_init</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, kdp_camera_kl520.o(i.sys_camera_global_init))
<BR><BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_kl520_init
</UL>

<P><STRONG><a name="[374]"></a>system_init</STRONG> (Thumb, 378 bytes, Stack size 16 bytes, system.o(i.system_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = system_init &rArr; delay_ms_enable &rArr; kdp_tmr_init &rArr; Timer_Init &rArr; Timer_SetIsr
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms_enable
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms_disable
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_handler
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mgr_set_mode
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mgr_ops
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_mgr_set_scuclkin
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_mgr_init
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_mgr_change_pll5_clock
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_mgr_change_pll3_clock
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[184]"></a>uart_face_add_timeout</STRONG> (Thumb, 604 bytes, Stack size 56 bytes, kdp_comm_app.o(i.uart_face_add_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 892<LI>Call Chain = uart_face_add_timeout &rArr; _face_add_internal &rArr; _api_face_note &rArr; send_EnrollOrVerify_note_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_dp_five_face_enable
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_set_add_mode
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add_set_timeout
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_set_curr_face_id
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_get_curr_face_id
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_add_wait_and_get
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_enroll_reply_msg
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sample_force_abort_disable
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_face_add_internal
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysWaitDelayTime
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_face_enroll_correct_direction
</UL>

<P><STRONG><a name="[1ec]"></a>uart_face_recognition_timeout</STRONG> (Thumb, 532 bytes, Stack size 144 bytes, kdp_comm_app.o(i.uart_face_recognition_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 836<LI>Call Chain = uart_face_recognition_timeout &rArr; send_verify_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_event
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_notify
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_event
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_recognition_set_timeout
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_recognition
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_liveness_set_timeout
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_liveness
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_get_result
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sample_face_close
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_verify_reply_msg
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_fr_update_thread
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysWaitDelayTime
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_user_com_fdfr_thread
</UL>

<P><STRONG><a name="[1ea]"></a>uart_face_snap_image</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, kdp_comm_app.o(i.uart_face_snap_image))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = uart_face_snap_image &rArr; kl520_api_snap_image &rArr; _kl520_api_face_preexecute &rArr; kl520_api_face_preexecute_stage2 &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_event
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snapshot_adv_init
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_event
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snap_image
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_get_result
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sample_face_close
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_user_com_fdfr_thread
</UL>

<P><STRONG><a name="[1e8]"></a>uart_sample_face_del_all</STRONG> (Thumb, 76 bytes, Stack size 120 bytes, sample_app_console.o(i.uart_sample_face_del_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = uart_sample_face_del_all &rArr; kl520_api_face_query_all &rArr; kl520_api_fdfr_model_init &rArr; kdp_e2e_face_init &rArr; kdp_e2e_config_image &rArr; kdp_app_get_pixel_size &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_settings_delete
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_query_all
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_del
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_user_com_fdfr_thread
</UL>

<P><STRONG><a name="[474]"></a>update_user_db_offset</STRONG> (Thumb, 48 bytes, Stack size 64 bytes, kl520_api_fdfr.o(i.update_user_db_offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = update_user_db_offset &rArr; kl520_api_customer_get &rArr; kdp_ddr_reserve &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_customer_write
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_customer_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_user_db_offset
</UL>

<P><STRONG><a name="[244]"></a>user_com_event_interrupt</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, kdp_comm_and_gui_fdr.o(i.user_com_event_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = user_com_event_interrupt &rArr; sample_face_close &rArr; kl520_api_face_close &rArr; kl520_api_reset_hmi_external_interface &rArr; kl520_api_cam_disp_state_rst &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_event
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_event
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsClear
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_set_fdfr_abort
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_is_fdfr_abort
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_fdfr_opened
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sample_face_close
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_thread_event_ota_copy_to_flash
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_thread_event_check_set
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_face_reset
</UL>

<P><STRONG><a name="[287]"></a>user_com_response_data</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, kdp_comm_and_gui_fdr.o(i.user_com_response_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = user_com_response_data &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_write
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_SetReleaseOrDebugEncKey_reply_msg
</UL>

<P><STRONG><a name="[23e]"></a>user_com_thread_event_check_set</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, kdp_comm_and_gui_fdr.o(i.user_com_thread_event_check_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = user_com_thread_event_check_set &rArr; user_com_event_interrupt &rArr; sample_face_close &rArr; kl520_api_face_close &rArr; kl520_api_reset_hmi_external_interface &rArr; kl520_api_cam_disp_state_rst &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_event_interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_kid_verify
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_kid_enroll
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_enroll_itg
</UL>

<P><STRONG><a name="[102]"></a>user_com_thread_event_ota_copy_to_flash</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, kdp_comm_and_gui_fdr.o(i.user_com_thread_event_ota_copy_to_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = user_com_thread_event_ota_copy_to_flash &rArr; user_com_event_interrupt &rArr; sample_face_close &rArr; kl520_api_face_close &rArr; kl520_api_reset_hmi_external_interface &rArr; kl520_api_cam_disp_state_rst &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_event_interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_OtaPacket
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_OtaHeader
</UL>

<P><STRONG><a name="[37f]"></a>user_io_init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, user_io.o(i.user_io_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = user_io_init &rArr; nir_led_init &rArr; kdp520_gpio_setdir
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_light_sensor_register_hook
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_led_register_hook
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_camera_register_hook
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_led_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_led_close
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>user_lwcom_parser</STRONG> (Thumb, 2080 bytes, Stack size 416 bytes, kdp_comm_and_gui_fdr.o(i.user_lwcom_parser))
<BR><BR>[Stack]<UL><LI>Max Depth = 1276<LI>Call Chain = user_lwcom_parser &rArr; response_get_Alluser_info_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_customer_write
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_customer_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_io_poweroff
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_enroll_overwrite_flag
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_enroll_customize_uid
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mgr_sw_reset
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StreamsToBigEndU16
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_fr_update_thread
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_uploadImage_reply_msg
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_reply_msg
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_soft_reset_reply_msg
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_snapImage_reply_msg
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_savedImage_reply_msg
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_power_off_reply_msg
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_SwitchPart_reply_msg
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_StartOrStopOta_reply_msg
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_SetReleaseOrDebugEncKey_reply_msg
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_SetMassDataHeader_reply_msg
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_Response_result_reply_msg
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_OtaStatus_reply_msg
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_OtaHeaderOrPacket_reply_msg
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_MpCalibration_reply_msg
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_InitEncryption_reply_msg
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_Get_Kn_DeviceInfo_reply_msg
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_GetCurPart_reply_msg
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_DebugModeOrDemoMode_reply_msg
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_AlgThreshold_level_reply_msg
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg_zhian_prd
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg_zhian_hard
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg_zhian
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_user_info_msg
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_Alluser_info_msg
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl_ntohpl
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysWaitDelayTime
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_set_mass_data_header
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_imp_mass_data
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_Uart_MP_Calibration
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_Enroll_Add_Face_Type_Set
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_UploadImage
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SystemReset
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SwitchPart
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_StopOta
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_StartOta
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_StartOrStopDemoMode
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_StartDebugMode
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SnapImage
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SetReleaseEncKey
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SetDebugEncKey
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SavedImage
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SET_THRESHOLD_LEVEL
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_OtaPacket
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_OtaHeader
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Init_Encryption
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info_zhian_prd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info_zhian_hard
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info_zhian
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Version_Info
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Kn_DeviceInfo
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Cur_Part
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_GetUserInfo
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_GetState
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_GetOtaStatus
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_GetAllUserInfo
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_ConfigBaudrate
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_thread_event_check_set
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_event_start
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_enroll_msg
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_user_rotate_sensor
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_upload_data
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_kid_verify
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_kid_enroll
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_face_reset
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_enroll_itg
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_download_data
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_db_import
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_db_export
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_comm_and_gui_fdr.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>virtual_dp_preproc_nir</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, virtual_dp.o(i.virtual_dp_preproc_nir))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = virtual_dp_preproc_nir
</UL>
<BR>[Address Reference Count : 1]<UL><LI> virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[3d]"></a>virtual_dp_preproc_rgb</STRONG> (Thumb, 94 bytes, Stack size 36 bytes, virtual_dp.o(i.virtual_dp_preproc_rgb))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = virtual_dp_preproc_rgb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[472]"></a>wait_fr_update_thread</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, kdp_comm_app.o(i.wait_fr_update_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = wait_fr_update_thread &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[286]"></a>DSM_CheckBodySize</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.DSM_CheckBodySize))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
</UL>

<P><STRONG><a name="[245]"></a>DSM_Uart_FaceReset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp_comm_app.o(i.DSM_Uart_FaceReset))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_face_reset
</UL>

<P><STRONG><a name="[485]"></a>DSM_Uart_GetState</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, kdp_comm_app.o(i.DSM_Uart_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[491]"></a>DSM_Uart_SetDebugEncKey</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, kdp_comm_app.o(i.DSM_Uart_SetDebugEncKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DSM_Uart_SetDebugEncKey
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[480]"></a>DSM_Uart_StartDebugMode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_comm_app.o(i.DSM_Uart_StartDebugMode))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[483]"></a>DSM_Uart_SystemReset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, kdp_comm_app.o(i.DSM_Uart_SystemReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = DSM_Uart_SystemReset &rArr; power_mgr_sw_reset &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mgr_sw_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[39c]"></a>EvrRtxDelay</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxDelay))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[3de]"></a>EvrRtxDelayCompleted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxDelayCompleted))
<BR><BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[39f]"></a>EvrRtxDelayError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxDelayError))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxDelay
</UL>

<P><STRONG><a name="[43c]"></a>EvrRtxDelayStarted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxDelayStarted))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxDelay
</UL>

<P><STRONG><a name="[4ea]"></a>EvrRtxEventFlagsClear</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxEventFlagsClear))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsClear
</UL>

<P><STRONG><a name="[43e]"></a>EvrRtxEventFlagsClearDone</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxEventFlagsClearDone))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsClear
</UL>

<P><STRONG><a name="[43f]"></a>EvrRtxEventFlagsCreated</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxEventFlagsCreated))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsNew
</UL>

<P><STRONG><a name="[3a3]"></a>EvrRtxEventFlagsError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxEventFlagsError))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsNew
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsClear
</UL>

<P><STRONG><a name="[4eb]"></a>EvrRtxEventFlagsNew</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxEventFlagsNew))
<BR><BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
</UL>

<P><STRONG><a name="[3a0]"></a>EvrRtxEventFlagsSet</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxEventFlagsSet))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
</UL>

<P><STRONG><a name="[3a6]"></a>EvrRtxEventFlagsSetDone</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxEventFlagsSetDone))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
</UL>

<P><STRONG><a name="[3a7]"></a>EvrRtxEventFlagsWait</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxEventFlagsWait))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
</UL>

<P><STRONG><a name="[3a9]"></a>EvrRtxEventFlagsWaitCompleted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxEventFlagsWaitCompleted))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxEventFlagsPostProcess
</UL>

<P><STRONG><a name="[3aa]"></a>EvrRtxEventFlagsWaitNotCompleted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxEventFlagsWaitNotCompleted))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
</UL>

<P><STRONG><a name="[440]"></a>EvrRtxEventFlagsWaitPending</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxEventFlagsWaitPending))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
</UL>

<P><STRONG><a name="[3e1]"></a>EvrRtxEventFlagsWaitTimeout</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxEventFlagsWaitTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[3af]"></a>EvrRtxKernelError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxKernelError))
<BR><BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelInitialize
</UL>

<P><STRONG><a name="[4be]"></a>EvrRtxKernelErrorNotify</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxKernelErrorNotify))
<BR><BR>[Called By]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelErrorNotify
</UL>

<P><STRONG><a name="[3ab]"></a>EvrRtxKernelGetInfo</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxKernelGetInfo))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetInfo
</UL>

<P><STRONG><a name="[4c7]"></a>EvrRtxKernelGetState</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxKernelGetState))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetState
</UL>

<P><STRONG><a name="[4c8]"></a>EvrRtxKernelGetTickCount</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxKernelGetTickCount))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetTickCount
</UL>

<P><STRONG><a name="[441]"></a>EvrRtxKernelInfoRetrieved</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxKernelInfoRetrieved))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetInfo
</UL>

<P><STRONG><a name="[4ed]"></a>EvrRtxKernelInitialize</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxKernelInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
</UL>

<P><STRONG><a name="[442]"></a>EvrRtxKernelInitialized</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxKernelInitialized))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelInitialize
</UL>

<P><STRONG><a name="[3ae]"></a>EvrRtxKernelStart</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxKernelStart))
<BR><BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[448]"></a>EvrRtxKernelStarted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxKernelStarted))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[3c3]"></a>EvrRtxMemoryAlloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMemoryAlloc))
<BR><BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
</UL>

<P><STRONG><a name="[3c6]"></a>EvrRtxMemoryBlockAlloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMemoryBlockAlloc))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
</UL>

<P><STRONG><a name="[3c8]"></a>EvrRtxMemoryBlockFree</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMemoryBlockFree))
<BR><BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
</UL>

<P><STRONG><a name="[4f2]"></a>EvrRtxMemoryBlockInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMemoryBlockInit))
<BR><BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolInit
</UL>

<P><STRONG><a name="[4f0]"></a>EvrRtxMemoryFree</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMemoryFree))
<BR><BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
</UL>

<P><STRONG><a name="[4f1]"></a>EvrRtxMemoryInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMemoryInit))
<BR><BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryInit
</UL>

<P><STRONG><a name="[3e4]"></a>EvrRtxMemoryPoolAllocTimeout</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMemoryPoolAllocTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[44b]"></a>EvrRtxMessageQueueCreated</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMessageQueueCreated))
<BR><BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
</UL>

<P><STRONG><a name="[3b4]"></a>EvrRtxMessageQueueError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMessageQueueError))
<BR><BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
</UL>

<P><STRONG><a name="[3b1]"></a>EvrRtxMessageQueueGet</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMessageQueueGet))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[449]"></a>EvrRtxMessageQueueGetPending</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMessageQueueGetPending))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
</UL>

<P><STRONG><a name="[3e5]"></a>EvrRtxMessageQueueGetTimeout</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMessageQueueGetTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[3ba]"></a>EvrRtxMessageQueueInsertPending</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMessageQueueInsertPending))
<BR><BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>

<P><STRONG><a name="[3ce]"></a>EvrRtxMessageQueueInserted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMessageQueueInserted))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
</UL>

<P><STRONG><a name="[3bb]"></a>EvrRtxMessageQueueNotInserted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMessageQueueNotInserted))
<BR><BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
</UL>

<P><STRONG><a name="[3b6]"></a>EvrRtxMessageQueueNotRetrieved</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMessageQueueNotRetrieved))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
</UL>

<P><STRONG><a name="[3b8]"></a>EvrRtxMessageQueuePut</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMessageQueuePut))
<BR><BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>

<P><STRONG><a name="[44c]"></a>EvrRtxMessageQueuePutPending</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMessageQueuePutPending))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
</UL>

<P><STRONG><a name="[3e6]"></a>EvrRtxMessageQueuePutTimeout</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMessageQueuePutTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[3b5]"></a>EvrRtxMessageQueueRetrieved</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMessageQueueRetrieved))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
</UL>

<P><STRONG><a name="[3bc]"></a>EvrRtxMutexAcquire</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMutexAcquire))
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>

<P><STRONG><a name="[44d]"></a>EvrRtxMutexAcquirePending</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMutexAcquirePending))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
</UL>

<P><STRONG><a name="[3e2]"></a>EvrRtxMutexAcquireTimeout</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMutexAcquireTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[3d1]"></a>EvrRtxMutexAcquired</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMutexAcquired))
<BR><BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
</UL>

<P><STRONG><a name="[44f]"></a>EvrRtxMutexCreated</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMutexCreated))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexNew
</UL>

<P><STRONG><a name="[3bf]"></a>EvrRtxMutexError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMutexError))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexNew
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
</UL>

<P><STRONG><a name="[4ee]"></a>EvrRtxMutexNew</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMutexNew))
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
</UL>

<P><STRONG><a name="[44e]"></a>EvrRtxMutexNotAcquired</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMutexNotAcquired))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
</UL>

<P><STRONG><a name="[4ef]"></a>EvrRtxMutexRelease</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMutexRelease))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
</UL>

<P><STRONG><a name="[3d0]"></a>EvrRtxMutexReleased</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxMutexReleased))
<BR><BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
</UL>

<P><STRONG><a name="[3f6]"></a>EvrRtxSemaphoreAcquire</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxSemaphoreAcquire))
<BR><BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>

<P><STRONG><a name="[450]"></a>EvrRtxSemaphoreAcquirePending</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxSemaphoreAcquirePending))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreAcquire
</UL>

<P><STRONG><a name="[3e3]"></a>EvrRtxSemaphoreAcquireTimeout</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxSemaphoreAcquireTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreAcquire
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[3da]"></a>EvrRtxSemaphoreAcquired</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxSemaphoreAcquired))
<BR><BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreRelease
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreAcquire
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxSemaphorePostProcess
</UL>

<P><STRONG><a name="[451]"></a>EvrRtxSemaphoreCreated</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxSemaphoreCreated))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreNew
</UL>

<P><STRONG><a name="[3f9]"></a>EvrRtxSemaphoreError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxSemaphoreError))
<BR><BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreRelease
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreNew
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreAcquire
</UL>

<P><STRONG><a name="[4f7]"></a>EvrRtxSemaphoreNew</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxSemaphoreNew))
<BR><BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[3fa]"></a>EvrRtxSemaphoreNotAcquired</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxSemaphoreNotAcquired))
<BR><BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreAcquire
</UL>

<P><STRONG><a name="[3fb]"></a>EvrRtxSemaphoreRelease</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxSemaphoreRelease))
<BR><BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>

<P><STRONG><a name="[3fd]"></a>EvrRtxSemaphoreReleased</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxSemaphoreReleased))
<BR><BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreRelease
</UL>

<P><STRONG><a name="[4f4]"></a>EvrRtxThreadBlocked</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadBlocked))
<BR><BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
</UL>

<P><STRONG><a name="[458]"></a>EvrRtxThreadCreated</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadCreated))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
</UL>

<P><STRONG><a name="[3ea]"></a>EvrRtxThreadDestroyed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadDestroyed))
<BR><BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDestroy
</UL>

<P><STRONG><a name="[407]"></a>EvrRtxThreadError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadError))
<BR><BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSetPriority
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadExit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSetPriority
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
</UL>

<P><STRONG><a name="[4c0]"></a>EvrRtxThreadExit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadExit))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadExit
</UL>

<P><STRONG><a name="[4f8]"></a>EvrRtxThreadFlagsClear</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadFlagsClear))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsClear
</UL>

<P><STRONG><a name="[454]"></a>EvrRtxThreadFlagsClearDone</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadFlagsClearDone))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsClear
</UL>

<P><STRONG><a name="[405]"></a>EvrRtxThreadFlagsError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadFlagsError))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsClear
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsWait
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsWait
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsSet
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsClear
</UL>

<P><STRONG><a name="[400]"></a>EvrRtxThreadFlagsGet</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadFlagsGet))
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsGet
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsGet
</UL>

<P><STRONG><a name="[402]"></a>EvrRtxThreadFlagsSet</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadFlagsSet))
<BR><BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
</UL>

<P><STRONG><a name="[404]"></a>EvrRtxThreadFlagsSetDone</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadFlagsSetDone))
<BR><BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsSet
</UL>

<P><STRONG><a name="[4f9]"></a>EvrRtxThreadFlagsWait</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadFlagsWait))
<BR><BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsWait
</UL>

<P><STRONG><a name="[455]"></a>EvrRtxThreadFlagsWaitCompleted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadFlagsWaitCompleted))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsWait
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsSet
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadPostProcess
</UL>

<P><STRONG><a name="[457]"></a>EvrRtxThreadFlagsWaitNotCompleted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadFlagsWaitNotCompleted))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsWait
</UL>

<P><STRONG><a name="[456]"></a>EvrRtxThreadFlagsWaitPending</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadFlagsWaitPending))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsWait
</UL>

<P><STRONG><a name="[3df]"></a>EvrRtxThreadFlagsWaitTimeout</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadFlagsWaitTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsWait
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[4c9]"></a>EvrRtxThreadGetId</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadGetId))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadGetId
</UL>

<P><STRONG><a name="[4fb]"></a>EvrRtxThreadGetPriority</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadGetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetPriority
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadGetPriority
</UL>

<P><STRONG><a name="[3ef]"></a>EvrRtxThreadJoined</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadJoined))
<BR><BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadJoinWakeup
</UL>

<P><STRONG><a name="[406]"></a>EvrRtxThreadNew</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadNew))
<BR><BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>

<P><STRONG><a name="[3dc]"></a>EvrRtxThreadPreempted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadPreempted))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadBlock
</UL>

<P><STRONG><a name="[459]"></a>EvrRtxThreadPriorityUpdated</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadPriorityUpdated))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSetPriority
</UL>

<P><STRONG><a name="[4fc]"></a>EvrRtxThreadSetPriority</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadSetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSetPriority
</UL>

<P><STRONG><a name="[4bf]"></a>EvrRtxThreadSwitched</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadSwitched))
<BR><BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
</UL>

<P><STRONG><a name="[3e7]"></a>EvrRtxThreadUnblocked</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxThreadUnblocked))
<BR><BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[3f3]"></a>EvrRtxTimerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxTimerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerThread
</UL>

<P><STRONG><a name="[45d]"></a>EvrRtxTimerCreated</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxTimerCreated))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerNew
</UL>

<P><STRONG><a name="[408]"></a>EvrRtxTimerDelete</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxTimerDelete))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerDelete
</UL>

<P><STRONG><a name="[45b]"></a>EvrRtxTimerDestroyed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxTimerDestroyed))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerDelete
</UL>

<P><STRONG><a name="[40b]"></a>EvrRtxTimerError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxTimerError))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStop
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStart
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerNew
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerDelete
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerStop
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerStart
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerNew
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerDelete
</UL>

<P><STRONG><a name="[45c]"></a>EvrRtxTimerIsRunning</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxTimerIsRunning))
<BR><BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerIsRunning
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerIsRunning
</UL>

<P><STRONG><a name="[4fd]"></a>EvrRtxTimerNew</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxTimerNew))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerNew
</UL>

<P><STRONG><a name="[4fe]"></a>EvrRtxTimerStart</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxTimerStart))
<BR><BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStart
</UL>

<P><STRONG><a name="[45e]"></a>EvrRtxTimerStarted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxTimerStarted))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerStart
</UL>

<P><STRONG><a name="[4ff]"></a>EvrRtxTimerStop</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxTimerStop))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStop
</UL>

<P><STRONG><a name="[45f]"></a>EvrRtxTimerStopped</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_evr.o(i.EvrRtxTimerStopped))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerStop
</UL>

<P><STRONG><a name="[62]"></a>GPIO010_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp520_gpio.o(i.GPIO010_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_set_int_occurred
</UL>
<BR>[Address Reference Count : 2]<UL><LI> main.o(i.main)
<LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[4d7]"></a>GetCurrentT1Tick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp520_tmr.o(i.GetCurrentT1Tick))
<BR><BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[216]"></a>GetCurrentT3Tick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp520_tmr.o(i.GetCurrentT3Tick))
<BR><BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_isr
</UL>

<P><STRONG><a name="[4d2]"></a>GetTick</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, kdp520_tmr.o(i.GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_IOCtrl
</UL>

<P><STRONG><a name="[fb]"></a>IntType_BigToSmallEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.IntType_BigToSmallEnd))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl_htonl
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Init_Encryption
</UL>

<P><STRONG><a name="[23f]"></a>KDP_Enroll_Add_Face_Type_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, kdp_comm_app.o(i.KDP_Enroll_Add_Face_Type_Set))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_kid_enroll
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_enroll_itg
</UL>

<P><STRONG><a name="[48e]"></a>KDP_Uart_MP_Calibration</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, kdp_comm_app.o(i.KDP_Uart_MP_Calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = KDP_Uart_MP_Calibration &rArr; kl520_engineering_calibration &rArr; kl520_api_face_add_internal &rArr; kl520_api_face_add &rArr; kl520_api_face_query_all &rArr; kl520_api_fdfr_model_init &rArr; kdp_e2e_face_init &rArr; kdp_e2e_config_image &rArr; kdp_app_get_pixel_size &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_engineering_calibration
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[124]"></a>KDP_clr_mass_data_header</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kdp_comm_app.o(i.KDP_clr_mass_data_header))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_set_mass_data_header
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_imp_mass_data
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_face_enroll_correct_direction
</UL>

<P><STRONG><a name="[3f2]"></a>OS_Tick_AcknowledgeIRQ</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, os_systick.o(i.OS_Tick_AcknowledgeIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
</UL>

<P><STRONG><a name="[446]"></a>OS_Tick_GetIRQn</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, os_systick.o(i.OS_Tick_GetIRQn))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[104]"></a>Ota_final_packet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, kdp_comm_app.o(i.Ota_final_packet))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_OtaPacket
</UL>

<P><STRONG><a name="[6d]"></a>PWMTMR1_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, kdp520_pwm_timer.o(i.PWMTMR1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PWMTMR1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_int_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_pwm_timer.o(i.kdp_timer_init)
</UL>
<P><STRONG><a name="[6e]"></a>PWMTMR2_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, kdp520_pwm_timer.o(i.PWMTMR2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PWMTMR2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_int_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_pwm_timer.o(i.kdp_timer_init)
</UL>
<P><STRONG><a name="[499]"></a>ResetAllTimer</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, kdp520_tmr.o(i.ResetAllTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ResetAllTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_IOCtrl
</UL>

<P><STRONG><a name="[dd]"></a>ShortType_BigToSmallEnd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.ShortType_BigToSmallEnd))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_GetAllUserInfo
</UL>

<P><STRONG><a name="[120]"></a>StreamsToBigEndU16</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.StreamsToBigEndU16))
<BR><BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kneron_lwcom_packet_size
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kneron_lwcom_packet_analyze
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_set_mass_data_header
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_imp_mass_data
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_kid_verify
</UL>

<P><STRONG><a name="[127]"></a>StreamsToBigEndU32</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.StreamsToBigEndU32))
<BR><BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_check_info
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl_ntohpl
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_set_mass_data_header
</UL>

<P><STRONG><a name="[73]"></a>TickTimer1</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kdp520_tmr.o(i.TickTimer1))
<BR><BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_IntrStateRegister
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_tmr.o(i.kdp_tmr_init)
</UL>
<P><STRONG><a name="[74]"></a>TickTimer2</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kdp520_tmr.o(i.TickTimer2))
<BR><BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_IntrStateRegister
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_tmr.o(i.kdp_tmr_init)
</UL>
<P><STRONG><a name="[75]"></a>TickTimer3</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kdp520_tmr.o(i.TickTimer3))
<BR><BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_IntrStateRegister
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_tmr.o(i.kdp_tmr_init)
</UL>
<P><STRONG><a name="[320]"></a>Timer_Counter</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, kdp520_tmr.o(i.Timer_Counter))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_tmr_init
</UL>

<P><STRONG><a name="[0]"></a>UART0_ISR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_uart.o(i.UART0_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART0_ISR &rArr; UART_ISR &rArr; UART_RX_ISR_new
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_uart.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>UART1_ISR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_uart.o(i.UART1_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART1_ISR &rArr; UART_ISR &rArr; UART_RX_ISR_new
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_uart.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>UART2_ISR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_uart.o(i.UART2_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART2_ISR &rArr; UART_ISR &rArr; UART_RX_ISR_new
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_uart.o(.data)
</UL>
<P><STRONG><a name="[76]"></a>UART2_callback</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, host_uart_com.o(i.UART2_callback))
<BR>[Address Reference Count : 1]<UL><LI> host_uart_com.o(i.kdp_uart_app_com)
</UL>
<P><STRONG><a name="[3]"></a>UART3_ISR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_uart.o(i.UART3_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART3_ISR &rArr; UART_ISR &rArr; UART_RX_ISR_new
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_uart.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>UART4_ISR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_uart.o(i.UART4_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART4_ISR &rArr; UART_ISR &rArr; UART_RX_ISR_new
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_uart.o(.data)
</UL>
<P><STRONG><a name="[14e]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>

<P><STRONG><a name="[32e]"></a>_check_tx_status</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, kdp_uart.o(i._check_tx_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _check_tx_status
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_thr_empty
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_uart_status
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_write
</UL>

<P><STRONG><a name="[49e]"></a>_get_uart_status</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp_uart.o(i._get_uart_status))
<BR><BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_check_tx_status
</UL>

<P><STRONG><a name="[49f]"></a>_is_thr_empty</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kdp_uart.o(i._is_thr_empty))
<BR><BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_check_tx_status
</UL>

<P><STRONG><a name="[254]"></a>_kdp520_adc_config</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kdp520_adc.o(i._kdp520_adc_config))
<BR><BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_adc_init
</UL>

<P><STRONG><a name="[198]"></a>_kdp520_i2c_getgsr</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp520_i2c.o(i._kdp520_i2c_getgsr))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_init
</UL>

<P><STRONG><a name="[2be]"></a>_kdp_e2e_face_quality</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, kdp_e2e_face.o(i._kdp_e2e_face_quality))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = _kdp_e2e_face_quality &rArr; kdp_model_face_quality &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_face_quality
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[26b]"></a>_kl520_app_calc_db_uid</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i._kl520_app_calc_db_uid))
<BR><BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_set_last_register_id_preprocess
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_import_request
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_user_id
</UL>

<P><STRONG><a name="[79]"></a>_tasks_init_cameras_thread</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i._tasks_init_cameras_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = _tasks_init_cameras_thread &rArr; kl520_api_face_preexecute_stage2 &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadExit
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_preexecute_stage2
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_preexecute_stage1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kl520_api_fdfr.o(i.kl520_api_tasks_init)
</UL>
<P><STRONG><a name="[7a]"></a>_tasks_init_models_thread</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i._tasks_init_models_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = _tasks_init_models_thread &rArr; kl520_api_fdfr_model_init &rArr; kdp_e2e_face_init &rArr; kdp_e2e_config_image &rArr; kdp_app_get_pixel_size &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadExit
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_model_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kl520_api_fdfr.o(i.kl520_api_tasks_init)
</UL>
<P><STRONG><a name="[6a]"></a>camera_isr_0</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_camera_kl520.o(i.camera_isr_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = camera_isr_0 &rArr; camera_isr &rArr; kdp_fb_mgr_buffer_write_next &rArr; osSemaphoreRelease &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(i.kdp_camera_kl520_init)
</UL>
<P><STRONG><a name="[6b]"></a>camera_isr_1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_camera_kl520.o(i.camera_isr_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = camera_isr_1 &rArr; camera_isr &rArr; kdp_fb_mgr_buffer_write_next &rArr; osSemaphoreRelease &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(i.kdp_camera_kl520_init)
</UL>
<P><STRONG><a name="[d5]"></a>checksum_cal</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, kdp_comm_protoco.o(i.checksum_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checksum_cal
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kneron_lwcom_packet_analyze
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_SetReleaseOrDebugEncKey_reply_msg
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_XOREncrypt
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_AesEncrypt
</UL>

<P><STRONG><a name="[257]"></a>clk_disable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clock.o(i.clk_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clk_disable &rArr; clk_control
</UL>
<BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_control
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_close
</UL>

<P><STRONG><a name="[259]"></a>clk_enable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clock.o(i.clk_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clk_enable &rArr; clk_control
</UL>
<BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_control
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init_ncpu
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_open
</UL>

<P><STRONG><a name="[462]"></a>clock_mgr_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clock.o(i.clock_mgr_init))
<BR><BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_mgr_set_muxsel
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[250]"></a>create_event</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, event.o(i.create_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = create_event &rArr; osEventFlagsNew
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_event
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_user_com_thread
</UL>

<P><STRONG><a name="[a2]"></a>fdfr_update_fr_thread</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.fdfr_update_fr_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = fdfr_update_fr_thread &rArr; fdfr_update_fr_thr &rArr; _kl520_api_fdfr_add &rArr; kdp_e2e_db_register &rArr; kdp_app_db_both_register &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadExit
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fdfr_update_fr_thr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kl520_api_fdfr.o(i.fdfr_update_fr_entry)
</UL>
<P><STRONG><a name="[17d]"></a>get_enroll_customize_uid</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.get_enroll_customize_uid))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_face_add_internal
</UL>

<P><STRONG><a name="[370]"></a>get_ota_data_status</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kdp_comm_app.o(i.get_ota_data_status))
<BR><BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kneron_lwcom_packet_size
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kneron_lwcom_packet_analyze
</UL>

<P><STRONG><a name="[20c]"></a>get_user_com_event_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_comm_and_gui_fdr.o(i.get_user_com_event_id))
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_open_event
</UL>

<P><STRONG><a name="[17c]"></a>is_enroll_customize_uid</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.is_enroll_customize_uid))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_face_add_normal_face
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add_internal
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_face_add_internal
</UL>

<P><STRONG><a name="[4cb]"></a>kdp520_adc_read</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp520_adc.o(i.kdp520_adc_read))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_io_light_sensor_get
</UL>

<P><STRONG><a name="[2a]"></a>kdp520_cam_set_flip</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, kdp_camera_kl520.o(i.kdp520_cam_set_flip))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp520_cam_set_flip
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sensor_set_flip
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>kdp520_cam_set_led</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, kdp_camera_kl520.o(i.kdp520_cam_set_led))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp520_cam_set_led
</UL>
<BR>[Calls]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sensor_set_led
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>kdp520_cam_set_mirror</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, kdp_camera_kl520.o(i.kdp520_cam_set_mirror))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp520_cam_set_mirror
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sensor_set_mirror
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[391]"></a>kdp520_flash_check_status_til_ready</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, w25q256jv.o(i.kdp520_flash_check_status_til_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kdp520_flash_check_status_til_ready &rArr; _spi020_check_status_til_ready_2 &rArr; kdp520_spi_set_commands
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_wait_command_complete
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_spi020_check_status_til_ready_2
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nor_flash_quad_mode_en
</UL>

<P><STRONG><a name="[4ac]"></a>kdp520_flash_dma_read_stop</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, w25q256jv.o(i.kdp520_flash_dma_read_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp520_flash_dma_read_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_wait_command_complete
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_dma_read_stop
</UL>

<P><STRONG><a name="[38d]"></a>kdp520_gpio_cleardata</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp520_gpio.o(i.kdp520_gpio_cleardata))
<BR><BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_camera_rst
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_led_init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_led_close
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_camera_power_on
</UL>

<P><STRONG><a name="[38c]"></a>kdp520_gpio_setdata</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp520_gpio.o(i.kdp520_gpio_setdata))
<BR><BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_camera_rst
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_led_init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_camera_power_on
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_led_open
</UL>

<P><STRONG><a name="[358]"></a>kdp520_memxfer_get_flash_device_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_memxfer.o(i.kdp520_memxfer_get_flash_device_id))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_memxfer_get_device_id
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
</UL>

<P><STRONG><a name="[497]"></a>kdp520_set_int_occurred</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp520_gpio.o(i.kdp520_set_int_occurred))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO010_IRQHandler
</UL>

<P><STRONG><a name="[25e]"></a>kdp520_spi_pre_log</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kdp520_spi.o(i.kdp520_spi_pre_log))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_initialize
</UL>

<P><STRONG><a name="[1e0]"></a>kdp520_spi_set_commands</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, kdp520_spi.o(i.kdp520_spi_set_commands))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp520_spi_set_commands
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nor_flash_quad_mode_en
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_running
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_control_volatile
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_control
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_read
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_quad_mode_read
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_get_info
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_chip_erase
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_busy_check
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_64k_erase
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_4k_erase
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_4Bytes_ctrl
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_spi020_check_status_til_ready_2
</UL>

<P><STRONG><a name="[4db]"></a>kdp520_spi_txfifo_depth</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kdp520_spi.o(i.kdp520_spi_txfifo_depth))
<BR><BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_write_data
</UL>

<P><STRONG><a name="[1e1]"></a>kdp520_spi_wait_command_complete</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, kdp520_spi.o(i.kdp520_spi_wait_command_complete))
<BR><BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_running
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_control_volatile
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_write_control
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_quad_mode_read
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_get_info
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_chip_erase
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_busy_check
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_64k_erase
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_4k_erase
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_4Bytes_ctrl
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_flash_check_status_til_ready
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_spi020_check_status_til_ready_2
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_flash_dma_read_stop
</UL>

<P><STRONG><a name="[4da]"></a>kdp520_spi_wait_tx_empty</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kdp520_spi.o(i.kdp520_spi_wait_tx_empty))
<BR><BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_write_data
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_spi_write_Tx_FIFO
</UL>

<P><STRONG><a name="[1c]"></a>kdp520_virtual_dp_fresh</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, kdp520_virtual_dp.o(i.kdp520_virtual_dp_fresh))
<BR>[Address Reference Count : 1]<UL><LI> kdp520_virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>kdp520_virtual_dp_get_buffer_addr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, kdp520_virtual_dp.o(i.kdp520_virtual_dp_get_buffer_addr))
<BR>[Address Reference Count : 1]<UL><LI> kdp520_virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[4af]"></a>kdp_app_db_abort_reg</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, kdp_app_db.o(i.kdp_app_db_abort_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kdp_app_db_abort_reg &rArr; _kdp_app_db_flush_register_data
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_flush_register_data
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_abort_reg
</UL>

<P><STRONG><a name="[266]"></a>kdp_app_db_check_usr_idx</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, kdp_app_db.o(i.kdp_app_db_check_usr_idx))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_get_user_info_by_idx
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_set_last_register_id_preprocess
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_extra_read
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_import
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_extra_data_write
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_extra_data_read
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_compare_self
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_add
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_extra_write
</UL>

<P><STRONG><a name="[22d]"></a>kdp_app_db_find_exist_id</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_app_db.o(i.kdp_app_db_find_exist_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kdp_app_db_find_exist_id &rArr; _kdp_app_db_find_exist_id &rArr; kdp_app_db_check_user_id
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_find_exist_id
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_register
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_flash_to_ddr
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fdfr_update_fr_thr
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_import_request
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_uart_face_del_some_users
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_db_export
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_min_user_meet_thers
</UL>

<P><STRONG><a name="[231]"></a>kdp_app_db_get_all_info_user_addr</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp_app_db.o(i.kdp_app_db_get_all_info_user_addr))
<BR><BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_db_export
</UL>

<P><STRONG><a name="[232]"></a>kdp_app_db_get_all_info_user_size</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_app_db.o(i.kdp_app_db_get_all_info_user_size))
<BR><BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_db_export
</UL>

<P><STRONG><a name="[1a4]"></a>kdp_app_db_get_db_idx</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.kdp_app_db_get_db_idx))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_get_user_info
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_import_request
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_import
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_compare_self
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_add
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_find_exist_id
</UL>

<P><STRONG><a name="[e5]"></a>kdp_app_db_get_user_id</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kdp_app_db.o(i.kdp_app_db_get_user_id))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_query_all
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_GetUserInfo
</UL>

<P><STRONG><a name="[4e0]"></a>kdp_app_db_query</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, kdp_app_db.o(i.kdp_app_db_query))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_init_flash_load
</UL>

<P><STRONG><a name="[336]"></a>kdp_app_imp_fm_chk_int8</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, kdp_app_db.o(i.kdp_app_imp_fm_chk_int8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_app_imp_fm_chk_int8
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_show
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ap_com_import_fm_mode_split
</UL>

<P><STRONG><a name="[2d8]"></a>kdp_app_nir_eye_lv</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, kdp_app_fid.o(i.kdp_app_nir_eye_lv))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = kdp_app_nir_eye_lv &rArr; kdp_model_nir_eye_lv &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_nir_eye_lv
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_nir_combo_liveness
</UL>

<P><STRONG><a name="[2d7]"></a>kdp_app_nir_hsn_lv</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, kdp_app_fid.o(i.kdp_app_nir_hsn_lv))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = kdp_app_nir_hsn_lv &rArr; kdp_model_nir_hsn_lv &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_nir_hsn_lv
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_nir_combo_liveness
</UL>

<P><STRONG><a name="[2d6]"></a>kdp_app_nir_lv</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, kdp_app_fid.o(i.kdp_app_nir_lv))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = kdp_app_nir_lv &rArr; kdp_model_nir_lv &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_nir_lv
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_nir_combo_liveness
</UL>

<P><STRONG><a name="[153]"></a>kdp_camera_get_device_info</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_camera.o(i.kdp_camera_get_device_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_camera_get_device_info &rArr; kdp_camera_query_capability
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_query_capability
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_camera_open
</UL>

<P><STRONG><a name="[1bd]"></a>kdp_com_get_input_ptr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_com.o(i.kdp_com_get_input_ptr))
<BR><BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_result_addr
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_run
</UL>

<P><STRONG><a name="[1b8]"></a>kdp_com_get_output_ptr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_com.o(i.kdp_com_get_output_ptr))
<BR><BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run_ex
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_raw_img_by_idx
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_raw_img
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_fuse_lv
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_result_addr
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_model
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_liveness_img
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_img
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_run
</UL>

<P><STRONG><a name="[35d]"></a>kdp_com_is_inited</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, kdp_com.o(i.kdp_com_is_inited))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_log_set_user_level
</UL>

<P><STRONG><a name="[30a]"></a>kdp_com_set_model_active</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, kdp_com.o(i.kdp_com_set_model_active))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = kdp_com_set_model_active
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_avail_com
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_model
</UL>

<P><STRONG><a name="[356]"></a>kdp_comm_get_protocol_version</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.kdp_comm_get_protocol_version))
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
</UL>

<P><STRONG><a name="[4d8]"></a>kdp_crc_offset_in_fwinfo</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, kdp_model.o(i.kdp_crc_offset_in_fwinfo))
<BR><BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_read_all_model_crc
</UL>

<P><STRONG><a name="[4d6]"></a>kdp_current_t3_tick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp520_pwm_timer.o(i.kdp_current_t3_tick))
<BR><BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_rst_timeout
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_chk_timeout
</UL>

<P><STRONG><a name="[376]"></a>kdp_ddr_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kdp_memory.o(i.kdp_ddr_init))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e6]"></a>kdp_display_get_device_id</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, display.o(i.kdp_display_get_device_id))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_dp_get_device_id
</UL>

<P><STRONG><a name="[292]"></a>kdp_dma_ch_int_mask</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kdp520_dma.o(i.kdp_dma_ch_int_mask))
<BR><BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_linkmode
</UL>

<P><STRONG><a name="[293]"></a>kdp_dma_ch_linklist</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kdp520_dma.o(i.kdp_dma_ch_linklist))
<BR><BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_linkmode
</UL>

<P><STRONG><a name="[290]"></a>kdp_dma_clear_ch_int_status</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kdp520_dma.o(i.kdp_dma_clear_ch_int_status))
<BR><BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_linkmode
</UL>

<P><STRONG><a name="[364]"></a>kdp_dma_clear_interrupt</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, kdp520_dma.o(i.kdp_dma_clear_interrupt))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snapshot_dma
</UL>

<P><STRONG><a name="[363]"></a>kdp_dma_is_ch_busy</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kdp520_dma.o(i.kdp_dma_is_ch_busy))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snapshot_dma
</UL>

<P><STRONG><a name="[291]"></a>kdp_dma_set_ch_cfg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kdp520_dma.o(i.kdp_dma_set_ch_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_to_ddr_dma_copy
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_linkmode
</UL>

<P><STRONG><a name="[2f8]"></a>kdp_dma_set_ch_cn_cfg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kdp520_dma.o(i.kdp_dma_set_ch_cn_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_to_ddr_dma_copy
</UL>

<P><STRONG><a name="[2c7]"></a>kdp_e2e_ctrl_get_ops</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_e2e_ctrl.o(i.kdp_e2e_ctrl_get_ops))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_preproc
</UL>

<P><STRONG><a name="[4b6]"></a>kdp_e2e_ctrl_led_register</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, kdp_e2e_ctrl.o(i.kdp_e2e_ctrl_led_register))
<BR><BR>[Called By]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_led_register_hook
</UL>

<P><STRONG><a name="[4b7]"></a>kdp_e2e_ctrl_light_sensor_register</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_e2e_ctrl.o(i.kdp_e2e_ctrl_light_sensor_register))
<BR><BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_light_sensor_register_hook
</UL>

<P><STRONG><a name="[345]"></a>kdp_e2e_db_abort_reg</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, kdp_e2e_db.o(i.kdp_e2e_db_abort_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = kdp_e2e_db_abort_reg &rArr; kdp_e2e_db_ready_check &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_abort_reg
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_ready_check
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
</UL>

<P><STRONG><a name="[246]"></a>kdp_e2e_db_write_unlock</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, kdp_e2e_db.o(i.kdp_e2e_db_write_unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kdp_e2e_db_write_unlock &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_add
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_face_reset
</UL>

<P><STRONG><a name="[1e4]"></a>kdp_e2e_face_init_done</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_face_init_done))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tasks_init_flash_load_thread_each
</UL>

<P><STRONG><a name="[2ba]"></a>kdp_e2e_face_n1_face_pose</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, kdp_e2e_face.o(i.kdp_e2e_face_n1_face_pose))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = kdp_e2e_face_n1_face_pose &rArr; kdp_model_face_pose &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_face_pose
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[1c6]"></a>kdp_e2e_get_dual_cam_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_e2e_camera.o(i.kdp_e2e_get_dual_cam_state))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_face_preexecute
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_fd_lm_combo
</UL>

<P><STRONG><a name="[e1]"></a>kdp_e2e_get_face_variables</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_get_face_variables))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_handle_fr_db_match
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_cam_prepare
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_cam_capture
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_camera_open
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_sensor_delay_fdfr
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_sensor_delay_fdfr
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_get_person_to_camera_distance
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_dual_cam_state
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_update_db_comp_params
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_nir_led_flag_off
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_register
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_add
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_sensor_rst
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fdfr_update_fr_thr
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_check_eye
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_sensor_wait_effect
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_sensor_wait_effect
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_isr
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_add_timeout
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_GetUserInfo
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_nir_led_flag_on
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_only_surrond
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_continuous_gain_tune
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_aec_tune_for_fd_search
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_nir_gain_clip_bound
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_nir_aec_clip_bound
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_nose_skin_value
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_calc_skin_value_lm
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aec_e2e_multiply_factor_set
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_ncpu_liveness
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_nir_combo_liveness
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_min_user_meet_thers
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_only_environmental_adaptation
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_r1_chk_mask
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_predict_xy_from_offset_xy
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_face_add_pose_chk
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_calc_offset_from_nir_rgb_xy
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_mapping_bbox_from_nir
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_avg_eye_range
</UL>

<P><STRONG><a name="[20f]"></a>kdp_e2e_get_img_cfg</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_get_img_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_snap_image_event
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_postproc
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_ncpu_liveness
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_nir_combo_liveness
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_iou_fd_by_mapping
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_mapping_bbox_from_nir
</UL>

<P><STRONG><a name="[2b4]"></a>kdp_e2e_get_img_mem_addr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_get_img_mem_addr))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_ncpu_liveness
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_only_environmental_adaptation
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_n1_sunlit_face_det
</UL>

<P><STRONG><a name="[29c]"></a>kdp_e2e_get_n1_fd</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_get_n1_fd))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_get_person_position
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_aec_tune_for_fd_search
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_nir_combo_liveness
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_r1_chk_mask
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_face_add_pose_chk
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_mapping_bbox_from_nir
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_check_face_position
</UL>

<P><STRONG><a name="[29f]"></a>kdp_e2e_get_n1_fr</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_get_n1_fr))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ap_com_import_fm_r1n1_inject
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ap_com_import_fm_n1_inject
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_register
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare_self
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare
</UL>

<P><STRONG><a name="[1d5]"></a>kdp_e2e_get_n1_lm</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_get_n1_lm))
<BR><BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_util_collection
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_get_person_to_camera_distance
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_update_db_comp_params
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_register
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_continuous_gain_tune
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_ncpu_liveness
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_nir_combo_liveness
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_min_user_meet_thers
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_calc_offset_from_nir_rgb_xy
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_mapping_bbox_from_nir
</UL>

<P><STRONG><a name="[2e2]"></a>kdp_e2e_get_n1_lm_s</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_get_n1_lm_s))
<BR><BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_ncpu_liveness
</UL>

<P><STRONG><a name="[2a0]"></a>kdp_e2e_get_r1_fr</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_get_r1_fr))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ap_com_import_fm_r1n1_inject
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_register
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare_self
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare
</UL>

<P><STRONG><a name="[1d4]"></a>kdp_e2e_get_r1_lm</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_get_r1_lm))
<BR><BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_util_collection
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_update_db_comp_params
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_register
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_continuous_gain_tune
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_ncpu_liveness
</UL>

<P><STRONG><a name="[2e3]"></a>kdp_e2e_get_r1_lm_s</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_get_r1_lm_s))
<BR><BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_ncpu_liveness
</UL>

<P><STRONG><a name="[2e0]"></a>kdp_e2e_get_r1n1_dlm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_get_r1n1_dlm))
<BR><BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_ncpu_liveness
</UL>

<P><STRONG><a name="[2e4]"></a>kdp_e2e_get_r1n1_dlm_2</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_get_r1n1_dlm_2))
<BR><BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_ncpu_liveness
</UL>

<P><STRONG><a name="[2d5]"></a>kdp_e2e_get_r1n1_lv</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_get_r1n1_lv))
<BR><BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_ncpu_liveness
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_nir_combo_liveness
</UL>

<P><STRONG><a name="[2a3]"></a>kdp_e2e_get_r1n1_occ</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_get_r1n1_occ))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[2e1]"></a>kdp_e2e_get_r1n1_tune</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_get_r1n1_tune))
<BR><BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_ncpu_liveness
</UL>

<P><STRONG><a name="[16a]"></a>kdp_e2e_prop_get_inst</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_e2e_prop.o(i.kdp_e2e_prop_get_inst))
<BR><BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_engineering_calibration
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_error
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_face_add_other_face
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_face_add_normal_face
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_util_collection
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_only
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_handle_fr_db_match
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_handle_face_recog_error
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_sim_is_running
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_get_person_position
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_invalid_score
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_register
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare_self
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_add
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snap_image
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_reset_hmi_external_interface
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_model_init
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_recognition
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_liveness
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_face_preexecute
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_rgb_led_when_reg_enable
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_nose_lm_diff_detect_enable
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_nir_aec_continuous_tune_enable
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_motion_detect_enable
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_liveness_enable
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_face_check_position_enable
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_face_check_move_enable
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_check_bad_pose_enable
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_age_group_enable
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_add_timeout
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_continuous_gain_tune
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_aec_tune_for_fd_search
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_preproc
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_postproc
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_ncpu_liveness
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_nir_combo_liveness
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_only_environmental_adaptation
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1_lm_postproc
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_lm_postproc
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_lm_mapping_check
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_face_seg
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_chk_r1_lm
</UL>

<P><STRONG><a name="[2b9]"></a>kdp_e2e_prop_n1_update_pt_array</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp_e2e_prop.o(i.kdp_e2e_prop_n1_update_pt_array))
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[2da]"></a>kdp_e2e_prop_r1_update_pt_array</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp_e2e_prop.o(i.kdp_e2e_prop_r1_update_pt_array))
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1
</UL>

<P><STRONG><a name="[4b1]"></a>kdp_e2e_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_e2e_r1n1.o(i.kdp_e2e_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp_e2e_reset &rArr; kdp_e2e_face_rst_variables
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_rst_variables
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_recognition_variable_reset
</UL>

<P><STRONG><a name="[2cb]"></a>kdp_e2e_rst_n1_fd</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_rst_n1_fd))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1
</UL>

<P><STRONG><a name="[2c8]"></a>kdp_e2e_rst_r1_fd</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_rst_r1_fd))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1
</UL>

<P><STRONG><a name="[107]"></a>kdp_e2e_set_fr_threshold_level</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_e2e_db.o(i.kdp_e2e_set_fr_threshold_level))
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_customer_info_init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SET_THRESHOLD_LEVEL
</UL>

<P><STRONG><a name="[161]"></a>kdp_e2e_set_img_mem_addr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.kdp_e2e_set_img_mem_addr))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_cam_capture
</UL>

<P><STRONG><a name="[212]"></a>kdp_e2e_settings_get_inst</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_e2e_settings.o(i.kdp_e2e_settings_get_inst))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_register
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_add
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_nose_skin_value
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_preproc
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_ncpu_liveness
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1_lm_postproc
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_lm_mapping_check
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_iou_fd_by_mapping
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_mapping_bbox_from_nir
</UL>

<P><STRONG><a name="[2eb]"></a>kdp_e2e_settings_req_free_space</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kdp_e2e_settings.o(i.kdp_e2e_settings_req_free_space))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_init
</UL>

<P><STRONG><a name="[2bb]"></a>kdp_e2e_util_face_recog_pose_chk</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, kdp_e2e_util.o(i.kdp_e2e_util_face_recog_pose_chk))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[2b6]"></a>kdp_e2e_util_n1_chk_mask</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, kdp_e2e_util.o(i.kdp_e2e_util_n1_chk_mask))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[2b3]"></a>kdp_e2e_util_uint_subtract_abs</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, kdp_e2e_util.o(i.kdp_e2e_util_uint_subtract_abs))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[21a]"></a>kdp_fb_mgr_set_frame_info</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, kdp_fb_mgr.o(i.kdp_fb_mgr_set_frame_info))
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_open
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_isr
</UL>

<P><STRONG><a name="[2fb]"></a>kdp_flash_dma_read_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, flash.o(i.kdp_flash_dma_read_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_flash_dma_read_stop &rArr; kdp520_flash_dma_read_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_flash_dma_read_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_flash_to_ddr_dma_copy
</UL>

<P><STRONG><a name="[4e2]"></a>kdp_flash_erase_4k</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, flash.o(i.kdp_flash_erase_4k))
<BR><BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_sector_erase4k
</UL>

<P><STRONG><a name="[2ff]"></a>kdp_flash_erase_multi_sectors</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, flash.o(i.kdp_flash_erase_multi_sectors))
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_ddr_to_flash
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_sector_multi_erase
</UL>

<P><STRONG><a name="[305]"></a>kdp_flash_get_id</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, flash.o(i.kdp_flash_get_id))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_init
</UL>

<P><STRONG><a name="[304]"></a>kdp_flash_get_info</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, flash.o(i.kdp_flash_get_info))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_init
</UL>

<P><STRONG><a name="[303]"></a>kdp_flash_initialize</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, flash.o(i.kdp_flash_initialize))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_init
</UL>

<P><STRONG><a name="[4e1]"></a>kdp_flash_program_data</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, flash.o(i.kdp_flash_program_data))
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_ddr_to_flash
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_ddr_to_flash_wo_erase
</UL>

<P><STRONG><a name="[300]"></a>kdp_flash_read_data</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, flash.o(i.kdp_flash_read_data))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
</UL>

<P><STRONG><a name="[40f]"></a>kdp_flash_set_protect_bypass</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, flash.o(i.kdp_flash_set_protect_bypass))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_auto_update
</UL>

<P><STRONG><a name="[4d9]"></a>kdp_get_fwinfo_offset</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_model.o(i.kdp_get_fwinfo_offset))
<BR><BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_read_all_model_crc
</UL>

<P><STRONG><a name="[26d]"></a>kdp_get_rgb_to_nir_ratio</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_model.o(i.kdp_get_rgb_to_nir_ratio))
<BR><BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_compare_five_faces_both_test
</UL>

<P><STRONG><a name="[377]"></a>kdp_ipc_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_model.o(i.kdp_ipc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = kdp_ipc_init &rArr; kdp_com_init &rArr; kdp_ddr_reserve &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20b]"></a>kdp_is_abort_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_model.o(i.kdp_is_abort_flag))
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_open_event
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_try_create_thread
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_add
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_is_fdfr_abort
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_compare_five_faces_both_test
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_fd_lm_combo
</UL>

<P><STRONG><a name="[ed]"></a>kdp_model_get_model_count</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_model.o(i.kdp_model_get_model_count))
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tasks_init_flash_load_thread_each
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Kn_DeviceInfo
</UL>

<P><STRONG><a name="[30b]"></a>kdp_model_get_raw_img_by_idx</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, kdp_model.o(i.kdp_model_get_raw_img_by_idx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_model_get_raw_img_by_idx
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_output_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_model
</UL>

<P><STRONG><a name="[1b7]"></a>kdp_model_get_raw_img_idx</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, kdp_model.o(i.kdp_model_get_raw_img_idx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_model_get_raw_img_idx
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_avail_com
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_raw_img
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_fuse_lv
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_result_addr
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_img
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_run
</UL>

<P><STRONG><a name="[1e2]"></a>kdp_model_info_reload</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kdp_model.o(i.kdp_model_info_reload))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = kdp_model_info_reload &rArr; _kdp_model_load_model_info &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_load_model_info
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tasks_init_flash_load_thread_each
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_main
</UL>

<P><STRONG><a name="[353]"></a>kdp_model_init_addr</STRONG> (Thumb, 12 bytes, Stack size 12 bytes, kdp_model.o(i.kdp_model_init_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = kdp_model_init_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_model_init
</UL>

<P><STRONG><a name="[1e5]"></a>kdp_model_load_flag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kdp_model.o(i.kdp_model_load_flag))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tasks_init_flash_load_thread_each
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_ready_check
</UL>

<P><STRONG><a name="[224]"></a>kdp_model_reload_model_info</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_model.o(i.kdp_model_reload_model_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = kdp_model_reload_model_info &rArr; _kdp_model_load_model_info &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_load_model_info
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_flash_main
</UL>

<P><STRONG><a name="[311]"></a>kdp_model_run</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, kdp_model.o(i.kdp_model_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_get_image_active
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_get_raw_img_by_idx
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_model_run
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_run_ex
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_fuse_lv
</UL>

<P><STRONG><a name="[4bb]"></a>kdp_set_abort_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_model.o(i.kdp_set_abort_flag))
<BR><BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_set_fdfr_abort
</UL>

<P><STRONG><a name="[108]"></a>kdp_set_rgb_to_nir_ratio</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_model.o(i.kdp_set_rgb_to_nir_ratio))
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_customer_info_init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SET_THRESHOLD_LEVEL
</UL>

<P><STRONG><a name="[e9]"></a>kdp_sys_get_spl_version</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bootloader.o(i.kdp_sys_get_spl_version))
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;info
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Kn_DeviceInfo
</UL>

<P><STRONG><a name="[fa]"></a>kdp_sys_get_unique_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, efuse.o(i.kdp_sys_get_unique_id))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_unique_id
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Init_Encryption
</UL>

<P><STRONG><a name="[4b3]"></a>kdp_timer_resetall</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, kdp520_pwm_timer.o(i.kdp_timer_resetall))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_timer_resetall
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_ioctrl
</UL>

<P><STRONG><a name="[32c]"></a>kdp_uart_rx_busy_clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kdp_uart.o(i.kdp_uart_rx_busy_clear))
<BR><BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_read
</UL>

<P><STRONG><a name="[330]"></a>kdp_video_renderer_assign_display_device</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, video_renderer.o(i.kdp_video_renderer_assign_display_device))
<BR><BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_video_renderer_open
</UL>

<P><STRONG><a name="[33d]"></a>kdp_video_renderer_get_idx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, video_renderer.o(i.kdp_video_renderer_get_idx))
<BR><BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_dp_open
</UL>

<P><STRONG><a name="[11e]"></a>kl520_api_ap_com_import_fm_n1_inject</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, kl520_api_extra_fmap.o(i.kl520_api_ap_com_import_fm_n1_inject))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kl520_api_ap_com_import_fm_n1_inject
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_fr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_imp_fm_inejct_data
</UL>

<P><STRONG><a name="[34e]"></a>kl520_api_cam_state_get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, kl520_api_camera.o(i.kl520_api_cam_state_get))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
</UL>

<P><STRONG><a name="[10e]"></a>kl520_api_customer_write</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, kl520_api.o(i.kl520_api_customer_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = kl520_api_customer_write &rArr; kdp_memxfer_ddr_to_flash &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_ddr_to_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_user_db_offset
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_customer_info_init
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SetReleaseEncKey
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_user_rotate_sensor
</UL>

<P><STRONG><a name="[4b4]"></a>kl520_api_ddr_img_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_ui.o(i.kl520_api_ddr_img_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kl520_api_ddr_img_init &rArr; kdp_memxfer_init &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_ui_init
</UL>

<P><STRONG><a name="[4b5]"></a>kl520_api_ddr_img_user</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, user_ui.o(i.kl520_api_ddr_img_user))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = kl520_api_ddr_img_user &rArr; kdp_memxfer_flash_to_ddr &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_ui_init
</UL>

<P><STRONG><a name="[187]"></a>kl520_api_disp_open_chk</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kl520_api_camera.o(i.kl520_api_disp_open_chk))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_user_com_fdfr_thread
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_delete_user
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_face_enroll_correct_direction
</UL>

<P><STRONG><a name="[1c3]"></a>kl520_api_disp_resolution_set</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, kl520_api_camera.o(i.kl520_api_disp_resolution_set))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_face_preexecute
</UL>

<P><STRONG><a name="[4e7]"></a>kl520_api_dp_close</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_api_dp_close))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_dp_get_device_id
</UL>

<P><STRONG><a name="[1c5]"></a>kl520_api_dp_layout_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_api_dp_layout_enable))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_face_preexecute
</UL>

<P><STRONG><a name="[4e8]"></a>kl520_api_face_add_get_timeout</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.kl520_api_face_add_get_timeout))
<BR><BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_engineering_calibration
</UL>

<P><STRONG><a name="[469]"></a>kl520_api_face_add_set_timeout</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.kl520_api_face_add_set_timeout))
<BR><BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_engineering_calibration
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_add_timeout
</UL>

<P><STRONG><a name="[46c]"></a>kl520_api_face_get_curr_face_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.kl520_api_face_get_curr_face_id))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_add_timeout
</UL>

<P><STRONG><a name="[470]"></a>kl520_api_face_liveness_set_timeout</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.kl520_api_face_liveness_set_timeout))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
</UL>

<P><STRONG><a name="[471]"></a>kl520_api_face_notify</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_api_face_notify))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
</UL>

<P><STRONG><a name="[46f]"></a>kl520_api_face_recognition_set_timeout</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.kl520_api_face_recognition_set_timeout))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
</UL>

<P><STRONG><a name="[46a]"></a>kl520_api_face_set_add_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.kl520_api_face_set_add_mode))
<BR><BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_engineering_calibration
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_add_timeout
</UL>

<P><STRONG><a name="[46d]"></a>kl520_api_face_set_curr_face_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.kl520_api_face_set_curr_face_id))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_add_timeout
</UL>

<P><STRONG><a name="[335]"></a>kl520_api_free_device_info</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, kl520_api.o(i.kl520_api_free_device_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kl520_api_free_device_info &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_add_wait_and_get
</UL>

<P><STRONG><a name="[16f]"></a>kl520_api_get_event</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, kl520_api.o(i.kl520_api_get_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kl520_api_get_event &rArr; create_event &rArr; osEventFlagsNew
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_event
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_set_event
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_start
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_init_thrd
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_recognition
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_liveness
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_add_wait_and_get
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_snap_image
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_event_interrupt
</UL>

<P><STRONG><a name="[411]"></a>kl520_api_get_model_version</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_api_get_model_version))
<BR><BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_check_info
</UL>

<P><STRONG><a name="[248]"></a>kl520_api_get_start_user_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.kl520_api_get_start_user_id))
<BR><BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_kid_enroll
</UL>

<P><STRONG><a name="[e8]"></a>kl520_api_get_unique_id</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_api_get_unique_id))
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sys_get_unique_id
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Kn_DeviceInfo
</UL>

<P><STRONG><a name="[190]"></a>kl520_api_hmi_ctrl_state_set</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, kl520_api_camera.o(i.kl520_api_hmi_ctrl_state_set))
<BR><BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_reset_hmi_external_interface
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_user_com_fdfr_thread
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_face_enroll
</UL>

<P><STRONG><a name="[477]"></a>kl520_api_led_register_hook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kl520_api_camera.o(i.kl520_api_led_register_hook))
<BR><BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_ctrl_led_register
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_io_init
</UL>

<P><STRONG><a name="[478]"></a>kl520_api_light_sensor_register_hook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kl520_api_camera.o(i.kl520_api_light_sensor_register_hook))
<BR><BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_ctrl_light_sensor_register
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_io_init
</UL>

<P><STRONG><a name="[f0]"></a>kl520_api_memxfer_get_device_id</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_api_memxfer_get_device_id))
<BR><BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_memxfer_get_flash_device_id
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Kn_DeviceInfo
</UL>

<P><STRONG><a name="[49c]"></a>kl520_api_ota_switch_SCPU</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_api_ota_switch_SCPU))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = kl520_api_ota_switch_SCPU &rArr; ota_update_force_switch_active_partition &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_update_force_switch_active_partition
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchScpu
</UL>

<P><STRONG><a name="[473]"></a>kl520_api_settings_delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kl520_api_system.o(i.kl520_api_settings_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = kl520_api_settings_delete &rArr; kdp_e2e_settings_delete &rArr; kdp_memxfer_ddr_to_flash &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_sample_face_del_all
</UL>

<P><STRONG><a name="[163]"></a>kl520_api_sim_is_running</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, kl520_api_sim.o(i.kl520_api_sim_is_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kl520_api_sim_is_running
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_only
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_cam_prepare
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
</UL>

<P><STRONG><a name="[4c1]"></a>kl520_api_sim_set_rst</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kl520_api_sim.o(i.kl520_api_sim_set_rst))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sample_face_close
</UL>

<P><STRONG><a name="[214]"></a>kl520_api_timer_close</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_api_timer_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kl520_api_timer_close &rArr; kdp_timer_close
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_close
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
</UL>

<P><STRONG><a name="[4b9]"></a>kl520_api_timer_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_api_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = kl520_api_timer_init &rArr; kdp_timer_init &rArr; kdp_timer_ioctrl &rArr; kdp_timer_resetall
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_rst_timeout
</UL>

<P><STRONG><a name="[136]"></a>kl520_api_tmr3_user</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_api_tmr3_user))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMTMR3_IRQHandler
</UL>

<P><STRONG><a name="[4cf]"></a>kl520_api_tmr4_user</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_api_tmr4_user))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMTMR4_IRQHandler
</UL>

<P><STRONG><a name="[138]"></a>kl520_api_tmr5_user</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_api_tmr5_user))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMTMR5_IRQHandler
</UL>

<P><STRONG><a name="[4d0]"></a>kl520_api_tmr6_user</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_api_tmr6_user))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMTMR6_IRQHandler
</UL>

<P><STRONG><a name="[f2]"></a>kl520_api_touch_get_device_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touch.o(i.kl520_api_touch_get_device_id))
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_Get_Kn_DeviceInfo
</UL>

<P><STRONG><a name="[37e]"></a>kl520_com_bus_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_comm.o(i.kl520_com_bus_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = kl520_com_bus_init &rArr; Drv_OTA_Thread &rArr; kl520_com_init &rArr; kdp_uart_app_com &rArr; kdp_uart_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OTA_Thread
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4ca]"></a>kl520_com_reg_user_ops</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_comm.o(i.kl520_com_reg_user_ops))
<BR><BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_init
</UL>

<P><STRONG><a name="[476]"></a>kl520_fdfr_opened</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.kl520_fdfr_opened))
<BR><BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_event_interrupt
</UL>

<P><STRONG><a name="[17b]"></a>kl520_is_fdfr_abort</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.kl520_is_fdfr_abort))
<BR><BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_is_abort_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_face_add_internal
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_event_interrupt
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_user_com_fdfr_thread
</UL>

<P><STRONG><a name="[372]"></a>kl520_measure_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kl520_api.o(i.kl520_measure_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = kl520_measure_init &rArr; kdp_tmr_init &rArr; Timer_Init &rArr; Timer_SetIsr
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_tmr_init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[475]"></a>kl520_set_fdfr_abort</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.kl520_set_fdfr_abort))
<BR><BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_set_abort_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_event_interrupt
</UL>

<P><STRONG><a name="[10b]"></a>kl_htonl</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.kl_htonl))
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntType_BigToSmallEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SavedImage
</UL>

<P><STRONG><a name="[489]"></a>kl_ntohpl</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.kl_ntohpl))
<BR><BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StreamsToBigEndU32
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[36e]"></a>kneron_com_parser</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, kdp_comm.o(i.kneron_com_parser))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_thread
</UL>

<P><STRONG><a name="[33e]"></a>lcd_power_on</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_io.o(i.lcd_power_on))
<BR><BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_dp_open
</UL>

<P><STRONG><a name="[282]"></a>log_set_level_ncpu</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dbg.o(i.log_set_level_ncpu))
<BR><BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_init
</UL>

<P><STRONG><a name="[35f]"></a>log_set_user_level_ncpu</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dbg.o(i.log_set_user_level_ncpu))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_log_set_user_level
</UL>

<P><STRONG><a name="[35e]"></a>log_set_user_level_scpu</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dbg.o(i.log_set_user_level_scpu))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_log_set_user_level
</UL>

<P><STRONG><a name="[19a]"></a>mutex_create</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mutex.o(i.mutex_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mutex_create &rArr; osMutexNew
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_init
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_probe
</UL>

<P><STRONG><a name="[196]"></a>mutex_lock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mutex.o(i.mutex_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mutex_lock &rArr; osMutexAcquire
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_i2c_transfer
</UL>

<P><STRONG><a name="[2a9]"></a>mutex_lock_timeout</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mutex.o(i.mutex_lock_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mutex_lock_timeout &rArr; osMutexAcquire
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_delete
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_extra_read
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_read
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_write
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_extra_write
</UL>

<P><STRONG><a name="[197]"></a>mutex_unlock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mutex.o(i.mutex_unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mutex_unlock &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_delete
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_extra_read
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_i2c_transfer
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_read
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_write
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_extra_write
</UL>

<P><STRONG><a name="[9d]"></a>nir_camera_power_off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_io.o(i.nir_camera_power_off))
<BR>[Address Reference Count : 1]<UL><LI> user_io.o(i.user_io_init)
</UL>
<P><STRONG><a name="[9e]"></a>nir_camera_power_on</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, user_io.o(i.nir_camera_power_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = nir_camera_power_on &rArr; rgb_camera_power_on &rArr; rgb_camera_rst &rArr; kdp520_gpio_setdir
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_camera_power_on
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_io.o(i.user_io_init)
</UL>
<P><STRONG><a name="[98]"></a>nir_led_close</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_io.o(i.nir_led_close))
<BR><BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_gpio_cleardata
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_recognition_variable_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_io.o(i.user_io_init)
</UL>
<P><STRONG><a name="[99]"></a>nir_led_open</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, user_io.o(i.nir_led_open))
<BR><BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_gpio_setdata
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_led_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_io.o(i.user_io_init)
</UL>
<P><STRONG><a name="[34c]"></a>nir_sensor_delay_fdfr</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, kdp_e2e_camera.o(i.nir_sensor_delay_fdfr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nir_sensor_delay_fdfr
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
</UL>

<P><STRONG><a name="[217]"></a>nir_sensor_wait_effect</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, kdp_e2e_camera.o(i.nir_sensor_wait_effect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nir_sensor_wait_effect
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_isr
</UL>

<P><STRONG><a name="[48]"></a>norflash_get_status</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, w25q256jv.o(i.norflash_get_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = norflash_get_status &rArr; norflash_busy_check &rArr; kdp520_spi_read_Rx_FIFO
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_busy_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> w25q256jv.o(.data)
</UL>
<P><STRONG><a name="[47]"></a>norflash_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, w25q256jv.o(i.norflash_id))
<BR>[Address Reference Count : 1]<UL><LI> w25q256jv.o(.data)
</UL>
<P><STRONG><a name="[49]"></a>norflash_set_protect_bypass</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, w25q256jv.o(i.norflash_set_protect_bypass))
<BR>[Address Reference Count : 1]<UL><LI> w25q256jv.o(.data)
</UL>
<P><STRONG><a name="[4bc]"></a>osRtxErrorNotify</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rtx_config.o(i.osRtxErrorNotify))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_error_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelErrorNotify
</UL>

<P><STRONG><a name="[85]"></a>osRtxIdleThread</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rtx_config.o(i.osRtxIdleThread))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osRtxIdleThread &rArr; power_manager_cpu_idle &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount
</UL>
<BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_cpu_idle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.osRtxThreadStartup)
</UL>
<P><STRONG><a name="[3d8]"></a>osRtxKernelErrorNotify</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, rtx_kernel.o(i.osRtxKernelErrorNotify))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxErrorNotify
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelErrorNotify
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerTick
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[4ec]"></a>osRtxKernelPreInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_kernel.o(i.osRtxKernelPreInit))
<BR><BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
</UL>

<P><STRONG><a name="[3cb]"></a>osRtxThreadListGet</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtx_thread.o(i.osRtxThreadListGet))
<BR><BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreRelease
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxSemaphorePostProcess
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[3c0]"></a>osRtxThreadListRemove</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rtx_thread.o(i.osRtxThreadListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxEventFlagsPostProcess
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[3e8]"></a>osRtxThreadReadyPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtx_thread.o(i.osRtxThreadReadyPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[3cc]"></a>osRtxThreadRegPtr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtx_thread.o(i.osRtxThreadRegPtr))
<BR><BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[452]"></a>osRtxThreadStackCheck</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rtx_thread.o(i.osRtxThreadStackCheck))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[3ec]"></a>osRtxThreadSwitch</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtx_thread.o(i.osRtxThreadSwitch))
<BR><BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadSwitched
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[95]"></a>osThreadExit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtx_thread.o(i.osThreadExit))
<BR><BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadExit
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fdfr_update_fr_thread
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tasks_init_models_thread
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tasks_init_cameras_thread
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.svcRtxThreadNew)
</UL>
<P><STRONG><a name="[467]"></a>power_mgr_ops</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, power.o(i.power_mgr_ops))
<BR><BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_handler
</UL>

<P><STRONG><a name="[18c]"></a>reset_user_db_offset</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.reset_user_db_offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = reset_user_db_offset &rArr; update_user_db_offset &rArr; kl520_api_customer_get &rArr; kdp_ddr_reserve &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_user_db_offset
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_user_com_fdfr_thread
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_delete_user
</UL>

<P><STRONG><a name="[1e9]"></a>response_delete_msg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.response_delete_msg))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_reply_AesNoDataMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_user_com_fdfr_thread
</UL>

<P><STRONG><a name="[9f]"></a>rgb_camera_power_off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_io.o(i.rgb_camera_power_off))
<BR>[Address Reference Count : 1]<UL><LI> user_io.o(i.user_io_init)
</UL>
<P><STRONG><a name="[9a]"></a>rgb_led_close</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_io.o(i.rgb_led_close))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_recognition_variable_reset
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_io_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_io.o(i.user_io_init)
</UL>
<P><STRONG><a name="[9b]"></a>rgb_led_open</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, user_io.o(i.rgb_led_open))
<BR>[Address Reference Count : 1]<UL><LI> user_io.o(i.user_io_init)
</UL>
<P><STRONG><a name="[34d]"></a>rgb_sensor_delay_fdfr</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, kdp_e2e_camera.o(i.rgb_sensor_delay_fdfr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rgb_sensor_delay_fdfr
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
</UL>

<P><STRONG><a name="[218]"></a>rgb_sensor_wait_effect</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, kdp_e2e_camera.o(i.rgb_sensor_wait_effect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rgb_sensor_wait_effect
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_isr
</UL>

<P><STRONG><a name="[41a]"></a>rtc_alarm_disable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rtc.o(i.rtc_alarm_disable))
<BR><BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alm_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_do_shutdown
</UL>

<P><STRONG><a name="[420]"></a>rtc_current_time_info</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtc.o(i.rtc_current_time_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rtc_current_time_info
</UL>
<BR>[Calls]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_get_time
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_thread
</UL>

<P><STRONG><a name="[185]"></a>sample_face_close</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sample_app_console.o(i.sample_face_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = sample_face_close &rArr; kl520_api_face_close &rArr; kl520_api_reset_hmi_external_interface &rArr; kl520_api_cam_disp_state_rst &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_sim_set_rst
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_snap_image
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_event_interrupt
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_kid_verify
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_face_enroll
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_face_enroll_correct_direction
</UL>

<P><STRONG><a name="[46b]"></a>sample_force_abort_disable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sample_app_console.o(i.sample_force_abort_disable))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_add_timeout
</UL>

<P><STRONG><a name="[131]"></a>scu_ipc_clear_from_ncpu_int</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scu_ipc.o(i.scu_ipc_clear_from_ncpu_int))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NCPU_IRQHandler
</UL>

<P><STRONG><a name="[283]"></a>scu_ipc_enable_to_ncpu_int</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scu_ipc.o(i.scu_ipc_enable_to_ncpu_int))
<BR><BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_init
</UL>

<P><STRONG><a name="[284]"></a>scu_ipc_trigger_to_ncpu_int</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scu_ipc.o(i.scu_ipc_trigger_to_ncpu_int))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_ncpu_trigger_int
</UL>

<P><STRONG><a name="[48a]"></a>send_AlgThreshold_level_reply_msg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.send_AlgThreshold_level_reply_msg))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_reply_AesNoDataMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[d8]"></a>send_ConfigBaurate_reply_msg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.send_ConfigBaurate_reply_msg))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_reply_AesNoDataMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_ConfigBaudrate
</UL>

<P><STRONG><a name="[47f]"></a>send_DebugModeOrDemoMode_reply_msg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.send_DebugModeOrDemoMode_reply_msg))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_reply_AesNoDataMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[48d]"></a>send_GetCurPart_reply_msg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.send_GetCurPart_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = send_GetCurPart_reply_msg &rArr; send_SwPart_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_SwPart_reply_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[48f]"></a>send_MpCalibration_reply_msg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.send_MpCalibration_reply_msg))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_reply_AesNoDataMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[193]"></a>send_OtaDone_Note_msg</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, kdp_comm_protoco.o(i.send_OtaDone_Note_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = send_OtaDone_Note_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_ota_process
</UL>

<P><STRONG><a name="[494]"></a>send_OtaHeaderOrPacket_reply_msg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.send_OtaHeaderOrPacket_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = send_OtaHeaderOrPacket_reply_msg &rArr; send_reply_NoDataMsg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_reply_NoDataMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[47a]"></a>send_Response_result_reply_msg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.send_Response_result_reply_msg))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_reply_AesNoDataMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[495]"></a>send_SetMassDataHeader_reply_msg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.send_SetMassDataHeader_reply_msg))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_reply_AesNoDataMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[493]"></a>send_StartOrStopOta_reply_msg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.send_StartOrStopOta_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = send_StartOrStopOta_reply_msg &rArr; send_reply_NoDataMsg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_reply_NoDataMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[48b]"></a>send_SwitchPart_reply_msg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.send_SwitchPart_reply_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = send_SwitchPart_reply_msg &rArr; send_SwPart_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_SwPart_reply_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[36b]"></a>send_data_error_reply_msg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.send_data_error_reply_msg))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_reply_AesNoDataMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_thread
</UL>

<P><STRONG><a name="[125]"></a>send_exp_mass_data_done_note_msg</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, kdp_comm_protoco.o(i.send_exp_mass_data_done_note_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = send_exp_mass_data_done_note_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_imp_mass_data
</UL>

<P><STRONG><a name="[484]"></a>send_power_off_reply_msg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.send_power_off_reply_msg))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[23a]"></a>send_reply_AesNoDataMsg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.send_reply_AesNoDataMsg))
<BR><BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_error_reply_msg
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ConfigBaurate_reply_msg
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_soft_reset_reply_msg
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_snapImage_reply_msg
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_SetMassDataHeader_reply_msg
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_Response_result_reply_msg
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_MpCalibration_reply_msg
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_DebugModeOrDemoMode_reply_msg
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_AlgThreshold_level_reply_msg
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_delete_msg
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_user_rotate_sensor
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_face_reset
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_download_data
</UL>

<P><STRONG><a name="[4c3]"></a>send_reply_NoDataMsg</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, kdp_comm_protoco.o(i.send_reply_NoDataMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = send_reply_NoDataMsg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_StartOrStopOta_reply_msg
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_OtaHeaderOrPacket_reply_msg
</UL>

<P><STRONG><a name="[1eb]"></a>send_snapImage_reply_msg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.send_snapImage_reply_msg))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_reply_AesNoDataMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_user_com_fdfr_thread
</UL>

<P><STRONG><a name="[481]"></a>send_soft_reset_reply_msg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.send_soft_reset_reply_msg))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_reply_AesNoDataMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[369]"></a>send_system_ready_note_msg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, kdp_comm_protoco.o(i.send_system_ready_note_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = send_system_ready_note_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_send_out_msg
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_fill_hdr
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_thread
</UL>

<P><STRONG><a name="[23d]"></a>set_enroll_customize_uid</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.set_enroll_customize_uid))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_kid_enroll
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_enroll_itg
</UL>

<P><STRONG><a name="[240]"></a>set_enroll_overwrite_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.set_enroll_overwrite_flag))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_kid_enroll
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_enroll_itg
</UL>

<P><STRONG><a name="[170]"></a>set_event</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, event.o(i.set_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = set_event &rArr; osEventFlagsSet &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_set_event
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_recognition
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_liveness
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_event_start
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_event_interrupt
</UL>

<P><STRONG><a name="[20d]"></a>set_thread_event</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, event.o(i.set_thread_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = set_thread_event &rArr; osThreadFlagsSet &rArr;  osRtxPostProcess (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_open_event
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_stop
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_start
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add
</UL>

<P><STRONG><a name="[27e]"></a>sp2509_l_sensor_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sp2509.o(i.sp2509_l_sensor_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sp2509_l_sensor_init &rArr; kdp_sensor_register
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sensor_register
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_kl520_init
</UL>

<P><STRONG><a name="[38]"></a>sp2509_l_sensor_set_exp_time</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sp2509.o(i.sp2509_l_sensor_set_exp_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sp2509_l_sensor_set_exp_time &rArr; sp2509_sensor_set_exp_time &rArr; kdp_drv_i2c_write
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_sensor_set_exp_time
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sp2509.o(.data)
</UL>
<P><STRONG><a name="[37]"></a>sp2509_l_sensor_set_gain</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sp2509.o(i.sp2509_l_sensor_set_gain))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sp2509_l_sensor_set_gain &rArr; sp2509_sensor_set_gain &rArr; kdp_drv_i2c_write
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_sensor_set_gain
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sp2509.o(.data)
</UL>
<P><STRONG><a name="[27f]"></a>sp2509_r_sensor_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sp2509.o(i.sp2509_r_sensor_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sp2509_r_sensor_init &rArr; kdp_sensor_register
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sensor_register
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_kl520_init
</UL>

<P><STRONG><a name="[34]"></a>sp2509_r_sensor_set_exp_time</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sp2509.o(i.sp2509_r_sensor_set_exp_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sp2509_r_sensor_set_exp_time &rArr; sp2509_sensor_set_exp_time &rArr; kdp_drv_i2c_write
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_sensor_set_exp_time
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sp2509.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>sp2509_r_sensor_set_gain</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sp2509.o(i.sp2509_r_sensor_set_gain))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sp2509_r_sensor_set_gain &rArr; sp2509_sensor_set_gain &rArr; kdp_drv_i2c_write
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_sensor_set_gain
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sp2509.o(.data)
</UL>
<P><STRONG><a name="[430]"></a>str_uart_reply</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, kdp_comm_protoco.o(i.str_uart_reply))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = str_uart_reply
</UL>
<BR>[Calls]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_str_uart_reply
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_enroll_reply_msg
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_verify_reply_msg
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_db_import_request_reply_msg
</UL>

<P><STRONG><a name="[18a]"></a>uart_sample_face_del_user</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, sample_app_console.o(i.uart_sample_face_del_user))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = uart_sample_face_del_user &rArr; kl520_api_face_del &rArr; kl520_api_fdfr_model_init &rArr; kdp_e2e_face_init &rArr; kdp_e2e_config_image &rArr; kdp_app_get_pixel_size &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_del
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_delete_user
</UL>

<P><STRONG><a name="[105]"></a>user_com_event_start</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp_comm_and_gui_fdr.o(i.user_com_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = user_com_event_start &rArr; set_event &rArr; osEventFlagsSet &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_event
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_OtaPacket
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_kid_verify
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_kid_enroll
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_enroll_itg
</UL>

<P><STRONG><a name="[380]"></a>user_com_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp_comm_and_gui_fdr.o(i.user_com_init))
<BR><BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_com_reg_user_ops
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[359]"></a>user_io_get_extra_device_cnt</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_io.o(i.user_io_get_extra_device_cnt))
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
</UL>

<P><STRONG><a name="[35a]"></a>user_io_get_extra_device_id</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_io.o(i.user_io_get_extra_device_id))
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
</UL>

<P><STRONG><a name="[35b]"></a>user_io_get_extra_device_name</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_io.o(i.user_io_get_extra_device_name))
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_device_info
</UL>

<P><STRONG><a name="[9c]"></a>user_io_light_sensor_get</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_io.o(i.user_io_light_sensor_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = user_io_light_sensor_get &rArr; kdp520_adc_init &rArr; osDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_adc_read
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_adc_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_io.o(i.user_io_init)
</UL>
<P><STRONG><a name="[482]"></a>user_io_poweroff</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_io.o(i.user_io_poweroff))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[1e6]"></a>user_ui_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, user_ui.o(i.user_ui_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = user_ui_init &rArr; kl520_api_ddr_img_user &rArr; kdp_memxfer_flash_to_ddr &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ddr_img_user
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ddr_img_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tasks_init_flash_load_thread_each
</UL>

<P><STRONG><a name="[3b]"></a>virtual_dp_clear</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, virtual_dp.o(i.virtual_dp_clear))
<BR>[Address Reference Count : 1]<UL><LI> virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[3a]"></a>virtual_dp_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, virtual_dp.o(i.virtual_dp_init))
<BR>[Address Reference Count : 1]<UL><LI> virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>virtual_dp_read_display_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, virtual_dp.o(i.virtual_dp_read_display_id))
<BR>[Address Reference Count : 1]<UL><LI> virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[1e7]"></a>wait_event</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, event.o(i.wait_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = wait_event &rArr; osEventFlagsWait
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_add_wait_and_get
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_snap_image
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_user_com_fdfr_thread
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[14f]"></a>_api_camera_open</STRONG> (Thumb, 258 bytes, Stack size 112 bytes, kl520_api_camera.o(i._api_camera_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_set_gain
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_set_frame_format
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_set_fps
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_set_exp_time
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_open
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_get_frame_format
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_get_device_info
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_buffer_init
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_api_camera_on_1
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_api_camera_on_0
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_ctrl
</UL>

<P><STRONG><a name="[338]"></a>permanent_state_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, kl520_api_camera.o(i.permanent_state_set))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_ctrl
</UL>

<P><STRONG><a name="[15f]"></a>_api_fdfr_cam_capture</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i._api_fdfr_cam_capture))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = _api_fdfr_cam_capture &rArr; kdp_fb_mgr_next_inf &rArr; osSemaphoreRelease &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_next_inf
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_img_mem_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
</UL>

<P><STRONG><a name="[162]"></a>_api_fdfr_cam_prepare</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, kl520_api_fdfr.o(i._api_fdfr_cam_prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = _api_fdfr_cam_prepare &rArr; kdp_fb_mgr_inf_done &rArr; osSemaphoreRelease &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_sim_is_running
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_inf_done
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_thread_data_prepare
</UL>

<P><STRONG><a name="[166]"></a>_api_fdfr_handle_face_recog_error</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, kl520_api_fdfr.o(i._api_fdfr_handle_face_recog_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = _api_fdfr_handle_face_recog_error &rArr; _api_fdfr_set_event &rArr; set_event &rArr; osEventFlagsSet &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_set_event
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_nir_led_flag_off
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_chk_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
</UL>

<P><STRONG><a name="[16b]"></a>_api_fdfr_handle_fr_db_match</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, kl520_api_fdfr.o(i._api_fdfr_handle_fr_db_match))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = _api_fdfr_handle_fr_db_match &rArr; kdp_e2e_db_compare &rArr; kdp_app_db_compare_five_faces_both_test &rArr; _kdp_app_db_find_fr_min_dist_mix_2_test &rArr; _kdp_app_db_calc_fr_dist_mix_2_test &rArr; _kdp_app_db_calc_fr_dist_test
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_set_event
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fdfr_update_fr_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
</UL>

<P><STRONG><a name="[207]"></a>_api_fdfr_thread_data_prepare</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i._api_fdfr_thread_data_prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = _api_fdfr_thread_data_prepare &rArr; _api_fdfr_cam_prepare &rArr; kdp_fb_mgr_inf_done &rArr; osSemaphoreRelease &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_cam_prepare
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_snap_image_event
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_liveness_event
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
</UL>

<P><STRONG><a name="[211]"></a>_api_fdfr_thread_rst_priority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i._api_fdfr_thread_rst_priority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _api_fdfr_thread_rst_priority &rArr; osThreadSetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSetPriority
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
</UL>

<P><STRONG><a name="[1c8]"></a>_kl520_api_fdfr_add</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, kl520_api_fdfr.o(i._kl520_api_fdfr_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = _kl520_api_fdfr_add &rArr; kdp_e2e_db_register &rArr; kdp_app_db_both_register &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_register
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_add
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_face_add_other_face
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_face_add_normal_face
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fdfr_update_fr_thr
</UL>

<P><STRONG><a name="[1cb]"></a>_kl520_api_fdfr_only</STRONG> (Thumb, 452 bytes, Stack size 24 bytes, kl520_api_fdfr.o(i._kl520_api_fdfr_only))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = _kl520_api_fdfr_only &rArr; kdp_e2e_face_n1r1 &rArr; kdp_e2e_face_n1 &rArr; kdp_e2e_face_n1_fd_lm_combo &rArr; _kdp_e2e_face_fd_lm &rArr; kdp_model_lm &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_util_collection
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_sim_is_running
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_invalid_score
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_rgb_led_when_reg_enable
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_nose_lm_diff_detect_enable
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_nir_aec_continuous_tune_enable
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_motion_detect_enable
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_liveness_enable
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_face_check_position_enable
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_face_check_move_enable
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_check_bad_pose_enable
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_decide_age_group_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
</UL>

<P><STRONG><a name="[342]"></a>_kl520_api_fdfr_try_create_thread</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i._kl520_api_fdfr_try_create_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _kl520_api_fdfr_try_create_thread &rArr; kl520_api_fdfr_start &rArr; osEventFlagsClear &rArr; svcRtxEventFlagsClear
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_is_abort_flag
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_start
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_snap_image
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_recognition
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_liveness
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_add
</UL>

<P><STRONG><a name="[1d2]"></a>_kl520_api_util_collection</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, kl520_api_fdfr.o(i._kl520_api_util_collection))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _kl520_api_util_collection &rArr; kdp_e2e_util_get_person_position
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_get_person_position
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_r1_lm
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_lm
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_ckeck_position_xy
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_check_eye
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_only
</UL>

<P><STRONG><a name="[68]"></a>_kl520_fdfr_drawing_timer_cb</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i._kl520_fdfr_drawing_timer_cb))
<BR>[Address Reference Count : 1]<UL><LI> kl520_api_fdfr.o(i._kl520_fdfr_drawing_timer_create)
</UL>
<P><STRONG><a name="[1d7]"></a>_kl520_fdfr_drawing_timer_create</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, kl520_api_fdfr.o(i._kl520_fdfr_drawing_timer_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _kl520_fdfr_drawing_timer_create &rArr; osTimerNew
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStop
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStart
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerNew
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerIsRunning
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_liveness_event
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_face_add_other_face
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_face_add_normal_face
</UL>

<P><STRONG><a name="[1fe]"></a>api_fdfr_face_add_normal_face</STRONG> (Thumb, 204 bytes, Stack size 56 bytes, kl520_api_fdfr.o(i.api_fdfr_face_add_normal_face))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = api_fdfr_face_add_normal_face &rArr; kdp_e2e_db_compare &rArr; kdp_app_db_compare_five_faces_both_test &rArr; _kdp_app_db_find_fr_min_dist_mix_2_test &rArr; _kdp_app_db_calc_fr_dist_mix_2_test &rArr; _kdp_app_db_calc_fr_dist_test
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_fdfr_drawing_timer_create
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_add
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_set_event
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_set_last_register_id_preprocess
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_enroll_customize_uid
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_rst_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
</UL>

<P><STRONG><a name="[201]"></a>api_fdfr_face_add_other_face</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, kl520_api_fdfr.o(i.api_fdfr_face_add_other_face))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = api_fdfr_face_add_other_face &rArr; _kl520_api_fdfr_add &rArr; kdp_e2e_db_register &rArr; kdp_app_db_both_register &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_fdfr_drawing_timer_create
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_api_fdfr_add
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_set_event
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare_self
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
</UL>

<P><STRONG><a name="[203]"></a>api_fdfr_handle_face_add_error</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, kl520_api_fdfr.o(i.api_fdfr_handle_face_add_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = api_fdfr_handle_face_add_error &rArr; _api_fdfr_set_event &rArr; set_event &rArr; osEventFlagsSet &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_set_event
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
</UL>

<P><STRONG><a name="[204]"></a>api_fdfr_handle_face_add_event</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, kl520_api_fdfr.o(i.api_fdfr_handle_face_add_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = api_fdfr_handle_face_add_event &rArr; api_fdfr_face_add_normal_face &rArr; kdp_e2e_db_compare &rArr; kdp_app_db_compare_five_faces_both_test &rArr; _kdp_app_db_find_fr_min_dist_mix_2_test &rArr; _kdp_app_db_calc_fr_dist_mix_2_test &rArr; _kdp_app_db_calc_fr_dist_test
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_error
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_face_add_other_face
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_face_add_normal_face
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_thread_data_prepare
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_set_event
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_update_db_comp_params
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_nir_led_flag_off
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_imp_fm_inejct_data
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_query_first_avail_user_idx
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_get_db_idx
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_enroll_customize_uid
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_rst_timeout
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_chk_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
</UL>

<P><STRONG><a name="[209]"></a>api_fdfr_handle_face_liveness_event</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, kl520_api_fdfr.o(i.api_fdfr_handle_face_liveness_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = api_fdfr_handle_face_liveness_event &rArr; kl520_api_fdfr_element &rArr; _kl520_api_fdfr_only &rArr; kdp_e2e_face_n1r1 &rArr; kdp_e2e_face_n1 &rArr; kdp_e2e_face_n1_fd_lm_combo &rArr; _kdp_e2e_face_fd_lm &rArr; kdp_model_lm &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_fdfr_drawing_timer_create
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_thread_data_prepare
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_set_event
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_chk_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
</UL>

<P><STRONG><a name="[20a]"></a>api_fdfr_handle_face_open_event</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, kl520_api_fdfr.o(i.api_fdfr_handle_face_open_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = api_fdfr_handle_face_open_event &rArr; osEventFlagsSet &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_thread_event
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsClear
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_is_abort_flag
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_rst_timeout
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_user_com_event_id
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
</UL>

<P><STRONG><a name="[20e]"></a>api_fdfr_handle_snap_image_event</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, kl520_api_fdfr.o(i.api_fdfr_handle_snap_image_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = api_fdfr_handle_snap_image_event &rArr; kl520_api_fdfr_element &rArr; _kl520_api_fdfr_only &rArr; kdp_e2e_face_n1r1 &rArr; kdp_e2e_face_n1 &rArr; kdp_e2e_face_n1_fd_lm_combo &rArr; _kdp_e2e_face_fd_lm &rArr; kdp_model_lm &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_thread_data_prepare
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_set_event
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_save_to_snap_ddr
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_img_cfg
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_thread
</UL>

<P><STRONG><a name="[78]"></a>api_fdfr_thread</STRONG> (Thumb, 308 bytes, Stack size 0 bytes, kl520_api_fdfr.o(i.api_fdfr_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 804<LI>Call Chain = api_fdfr_thread &rArr; kl520_face_recognition_note &rArr; _api_face_note &rArr; send_EnrollOrVerify_note_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_timer_close
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_event
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_snap_image_event
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_open_event
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_liveness_event
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;api_fdfr_handle_face_add_event
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kl520_fdfr_drawing_timer_create
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_thread_rst_priority
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_thread_data_prepare
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_handle_fr_db_match
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_handle_face_recog_error
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_api_fdfr_set_event
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsGet
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsClear
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsClear
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_face_recognition_note
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_get_inst
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_set_dual_cam_state
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_element
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdfr_recognition_note_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kl520_api_fdfr.o(i.kl520_api_fdfr_init_thrd)
</UL>
<P><STRONG><a name="[346]"></a>kl520_api_face_recognition_variable_reset</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, kl520_api_fdfr.o(i.kl520_api_face_recognition_variable_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kl520_api_face_recognition_variable_reset &rArr; kdp_e2e_reset &rArr; kdp_e2e_face_rst_variables
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_led_close
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_led_close
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_close
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_fdfr_model_init
</UL>

<P><STRONG><a name="[2ee]"></a>_fb_sem_lock</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_fb_mgr.o(i._fb_sem_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _fb_sem_lock &rArr; osSemaphoreAcquire &rArr; SemaphoreTokenDecrement
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_next_write
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_buffer_write_next
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_next_inf
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_inf_done
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_free_write_buf
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_free_inf_buf
</UL>

<P><STRONG><a name="[2ef]"></a>inc_write_next_idx</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, kdp_fb_mgr.o(i.inc_write_next_idx))
<BR><BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_next_write
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_buffer_write_next
</UL>

<P><STRONG><a name="[147]"></a>UART_RX_ISR_new</STRONG> (Thumb, 160 bytes, Stack size 20 bytes, kdp_uart.o(i.UART_RX_ISR_new))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_RX_ISR_new
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>

<P><STRONG><a name="[148]"></a>UART_TX_ISR</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, kdp_uart.o(i.UART_TX_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_TX_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_write
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>

<P><STRONG><a name="[149]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kdp_uart.o(i.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_power_control
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>

<P><STRONG><a name="[14a]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kdp_uart.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_write
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_read
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>

<P><STRONG><a name="[32d]"></a>kdp_calculate_fifo_cfg</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, kdp_uart.o(i.kdp_calculate_fifo_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp_calculate_fifo_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_write
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_read
</UL>

<P><STRONG><a name="[32a]"></a>kdp_uart_get_default_timeout</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, kdp_uart.o(i.kdp_uart_get_default_timeout))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_uart_control
</UL>

<P><STRONG><a name="[146]"></a>kdp_uart_get_drv_hdl</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, kdp_uart.o(i.kdp_uart_get_drv_hdl))
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ISR
</UL>

<P><STRONG><a name="[298]"></a>_get_i2c_dev_drv</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kdp520_i2c.o(i._get_i2c_dev_drv))
<BR><BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_drv_i2c_write
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_drv_i2c_read
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_drv_i2c_init
</UL>

<P><STRONG><a name="[195]"></a>_i2c_transfer</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, kdp520_i2c.o(i._i2c_transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _i2c_transfer &rArr; mutex_unlock &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_unlock
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_write
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_read_bytes
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_read
</UL>

<P><STRONG><a name="[9]"></a>_kdp520_i2c_init</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, kdp520_i2c.o(i._kdp520_i2c_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _kdp520_i2c_init
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_getgsr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_i2c.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>_kdp520_i2c_power</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, kdp520_i2c.o(i._kdp520_i2c_power))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _kdp520_i2c_power
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_i2c.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>_kdp520_i2c_probe</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, kdp520_i2c.o(i._kdp520_i2c_probe))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = _kdp520_i2c_probe &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_i2c.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>_kdp520_i2c_read</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, kdp520_i2c.o(i._kdp520_i2c_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _kdp520_i2c_read &rArr; _i2c_transfer &rArr; mutex_unlock &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_i2c_transfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_i2c.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>_kdp520_i2c_read_bytes</STRONG> (Thumb, 122 bytes, Stack size 56 bytes, kdp520_i2c.o(i._kdp520_i2c_read_bytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _kdp520_i2c_read_bytes &rArr; _i2c_transfer &rArr; mutex_unlock &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_i2c_transfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_i2c.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>_kdp520_i2c_remove</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp520_i2c.o(i._kdp520_i2c_remove))
<BR>[Address Reference Count : 1]<UL><LI> kdp520_i2c.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>_kdp520_i2c_reset</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, kdp520_i2c.o(i._kdp520_i2c_reset))
<BR>[Address Reference Count : 1]<UL><LI> kdp520_i2c.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>_kdp520_i2c_set_params</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, kdp520_i2c.o(i._kdp520_i2c_set_params))
<BR>[Address Reference Count : 1]<UL><LI> kdp520_i2c.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>_kdp520_i2c_write</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, kdp520_i2c.o(i._kdp520_i2c_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _kdp520_i2c_write &rArr; _i2c_transfer &rArr; mutex_unlock &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_i2c_transfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_i2c.o(.data)
</UL>
<P><STRONG><a name="[67]"></a>_kdp520_i2c_xfer</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, kdp520_i2c.o(i._kdp520_i2c_xfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _kdp520_i2c_xfer &rArr; _kdp520_i2c_xfer_msg &rArr; _kdp_i2c_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_xfer_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_i2c.o(i._kdp520_i2c_probe)
</UL>
<P><STRONG><a name="[19d]"></a>_kdp520_i2c_xfer_msg</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, kdp520_i2c.o(i._kdp520_i2c_xfer_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _kdp520_i2c_xfer_msg &rArr; _kdp_i2c_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_i2c_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_xfer
</UL>

<P><STRONG><a name="[19e]"></a>_kdp_i2c_wait</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, kdp520_i2c.o(i._kdp_i2c_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _kdp_i2c_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp520_i2c_xfer_msg
</UL>

<P><STRONG><a name="[4df]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kdp520_dma.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_dma_enable_dma_int
</UL>

<P><STRONG><a name="[142]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kdp520_tmr.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_tmr_init
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
</UL>

<P><STRONG><a name="[4a1]"></a>clk_control</STRONG> (Thumb, 614 bytes, Stack size 8 bytes, clock.o(i.clk_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clk_control
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_enable
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_disable
</UL>

<P><STRONG><a name="[423]"></a>_power_mgr_wait_domain_ready</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, power.o(i._power_mgr_wait_domain_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _power_mgr_wait_domain_ready
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mgr_set_mode
</UL>

<P><STRONG><a name="[41d]"></a>__NVIC_SetVector</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, power_manager.o(i.__NVIC_SetVector))
<BR><BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_init
</UL>

<P><STRONG><a name="[418]"></a>power_manager_do_shutdown</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, power_manager.o(i.power_manager_do_shutdown))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = power_manager_do_shutdown &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_disable
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mgr_softoff
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mgr_set_domain
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manager_thread
</UL>

<P><STRONG><a name="[8f]"></a>scpu_bus_fault</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, power_manager.o(i.scpu_bus_fault))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = scpu_bus_fault &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> power_manager.o(i.power_manager_init)
</UL>
<P><STRONG><a name="[8d]"></a>scpu_hard_fault</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, power_manager.o(i.scpu_hard_fault))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = scpu_hard_fault &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> power_manager.o(i.power_manager_init)
</UL>
<P><STRONG><a name="[8e]"></a>scpu_mem_mnmt</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, power_manager.o(i.scpu_mem_mnmt))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = scpu_mem_mnmt &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> power_manager.o(i.power_manager_init)
</UL>
<P><STRONG><a name="[90]"></a>scpu_usage_fault</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, power_manager.o(i.scpu_usage_fault))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = scpu_usage_fault &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> power_manager.o(i.power_manager_init)
</UL>
<P><STRONG><a name="[91]"></a>scpu_wait_reset</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, power_manager.o(i.scpu_wait_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = scpu_wait_reset &rArr; osThreadGetId &rArr; svcRtxThreadGetId
</UL>
<BR>[Calls]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsWait
</UL>
<BR>[Address Reference Count : 2]<UL><LI> power_manager.o(i.scpu_hard_fault)
<LI> power_manager.o(i.scpu_mem_mnmt)
</UL>
<P><STRONG><a name="[429]"></a>rtc_alm_disable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtc.o(i.rtc_alm_disable))
<BR><BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_disable
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_enable
</UL>

<P><STRONG><a name="[42c]"></a>rtc_alm_enable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtc.o(i.rtc_alm_enable))
<BR><BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_enable
</UL>

<P><STRONG><a name="[42d]"></a>rtc_get_time</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtc.o(i.rtc_get_time))
<BR><BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_get_date_time_in_secs
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_current_time_info
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_enable
</UL>

<P><STRONG><a name="[42a]"></a>rtc_rectify_date</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, rtc.o(i.rtc_rectify_date))
<BR><BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_enable
</UL>

<P><STRONG><a name="[42b]"></a>rtc_rectify_time</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, rtc.o(i.rtc_rectify_time))
<BR><BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_enable
</UL>

<P><STRONG><a name="[464]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, system.o(i.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_handler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_isr
</UL>

<P><STRONG><a name="[465]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, system.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_handler
</UL>

<P><STRONG><a name="[500]"></a>sys_reset</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, system.o(i.sys_reset))
<BR><BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init_ncpu
</UL>

<P><STRONG><a name="[97]"></a>system_isr</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, system.o(i.system_isr))
<BR><BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system.o(i.system_init)
</UL>
<P><STRONG><a name="[387]"></a>ARM_MPU_Disable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, mpu.o(i.ARM_MPU_Disable))
<BR><BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_niram_enable
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_niram_disable
</UL>

<P><STRONG><a name="[389]"></a>ARM_MPU_Enable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, mpu.o(i.ARM_MPU_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_niram_enable
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_niram_disable
</UL>

<P><STRONG><a name="[388]"></a>ARM_MPU_SetRegionEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mpu.o(i.ARM_MPU_SetRegionEx))
<BR><BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_niram_enable
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_niram_disable
</UL>

<P><STRONG><a name="[e]"></a>kdp520_virtual_dp_attach_panel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp520_virtual_dp.o(i.kdp520_virtual_dp_attach_panel))
<BR>[Address Reference Count : 1]<UL><LI> kdp520_virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>kdp520_virtual_dp_draw_bitmap</STRONG> (Thumb, 96 bytes, Stack size 28 bytes, kdp520_virtual_dp.o(i.kdp520_virtual_dp_draw_bitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = kdp520_virtual_dp_draw_bitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>kdp520_virtual_dp_draw_line</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, kdp520_virtual_dp.o(i.kdp520_virtual_dp_draw_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kdp520_virtual_dp_draw_line
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>kdp520_virtual_dp_draw_rect</STRONG> (Thumb, 210 bytes, Stack size 48 bytes, kdp520_virtual_dp.o(i.kdp520_virtual_dp_draw_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = kdp520_virtual_dp_draw_rect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>kdp520_virtual_dp_fill_rect</STRONG> (Thumb, 90 bytes, Stack size 20 bytes, kdp520_virtual_dp.o(i.kdp520_virtual_dp_fill_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = kdp520_virtual_dp_fill_rect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>kdp520_virtual_dp_get_params</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, kdp520_virtual_dp.o(i.kdp520_virtual_dp_get_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp520_virtual_dp_get_params
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>kdp520_virtual_dp_init</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, kdp520_virtual_dp.o(i.kdp520_virtual_dp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp520_virtual_dp_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>kdp520_virtual_dp_set_camera</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, kdp520_virtual_dp.o(i.kdp520_virtual_dp_set_camera))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = kdp520_virtual_dp_set_camera &rArr; kdp_ddr_reserve &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_ddr_reserve
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>kdp520_virtual_dp_set_params</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, kdp520_virtual_dp.o(i.kdp520_virtual_dp_set_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp520_virtual_dp_set_params
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_framesize
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp520_virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>kdp520_virtual_dp_set_pen</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp520_virtual_dp.o(i.kdp520_virtual_dp_set_pen))
<BR>[Address Reference Count : 1]<UL><LI> kdp520_virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>kdp520_virtual_dp_start</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kdp520_virtual_dp.o(i.kdp520_virtual_dp_start))
<BR>[Address Reference Count : 1]<UL><LI> kdp520_virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>kdp520_virtual_dp_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp520_virtual_dp.o(i.kdp520_virtual_dp_stop))
<BR>[Address Reference Count : 1]<UL><LI> kdp520_virtual_dp.o(.data)
</UL>
<P><STRONG><a name="[215]"></a>camera_isr</STRONG> (Thumb, 338 bytes, Stack size 112 bytes, kdp_camera_kl520.o(i.camera_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = camera_isr &rArr; kdp_fb_mgr_buffer_write_next &rArr; osSemaphoreRelease &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_set_frame_info
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_buffer_write_next
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentT3Tick
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_sensor_wait_effect
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_sensor_wait_effect
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_isr_1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_isr_0
</UL>

<P><STRONG><a name="[21d]"></a>csi2rx_init</STRONG> (Thumb, 240 bytes, Stack size 0 bytes, kdp_camera_kl520.o(i.csi2rx_init))
<BR><BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_set_format
</UL>

<P><STRONG><a name="[258]"></a>csi2rx_power</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, kdp_camera_kl520.o(i.csi2rx_power))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_open
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_close
</UL>

<P><STRONG><a name="[25a]"></a>csi2rx_reset</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, kdp_camera_kl520.o(i.csi2rx_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = csi2rx_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp520_cam_open
</UL>

<P><STRONG><a name="[21]"></a>kdp520_cam_buffer_init</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, kdp_camera_kl520.o(i.kdp520_cam_buffer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = kdp520_cam_buffer_init &rArr; kdp_fb_mgr_next_write &rArr; osSemaphoreRelease &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_next_write
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>kdp520_cam_close</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, kdp_camera_kl520.o(i.kdp520_cam_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp520_cam_close &rArr; clk_disable &rArr; clk_control
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_disable
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csi2rx_power
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>kdp520_cam_get_format</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, kdp_camera_kl520.o(i.kdp520_cam_get_format))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp520_cam_get_format
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>kdp520_cam_get_lux</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, kdp_camera_kl520.o(i.kdp520_cam_get_lux))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = kdp520_cam_get_lux &rArr; kdp_sensor_get_lux
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sensor_get_lux
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>kdp520_cam_open</STRONG> (Thumb, 116 bytes, Stack size 72 bytes, kdp_camera_kl520.o(i.kdp520_cam_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = kdp520_cam_open &rArr; dpi2ahb_reset &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_fb_mgr_set_frame_info
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_enable
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dpi2ahb_reset
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csi2rx_reset
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csi2rx_power
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>kdp520_cam_query_capability</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, kdp_camera_kl520.o(i.kdp520_cam_query_capability))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp520_cam_query_capability
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>kdp520_cam_set_aec_roi</STRONG> (Thumb, 26 bytes, Stack size 40 bytes, kdp_camera_kl520.o(i.kdp520_cam_set_aec_roi))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = kdp520_cam_set_aec_roi &rArr; kdp_sensor_set_aec_roi
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sensor_set_aec_roi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>kdp520_cam_set_exp_time</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, kdp_camera_kl520.o(i.kdp520_cam_set_exp_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp520_cam_set_exp_time &rArr; kdp_sensor_set_exp_time
</UL>
<BR>[Calls]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sensor_set_exp_time
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>kdp520_cam_set_format</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, kdp_camera_kl520.o(i.kdp520_cam_set_format))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = kdp520_cam_set_format &rArr; dpi2ahb_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sensor_set_fmt
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dpi2ahb_enable
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csi2rx_init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[2d]"></a>kdp520_cam_set_fps</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, kdp_camera_kl520.o(i.kdp520_cam_set_fps))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp520_cam_set_fps
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sensor_set_fps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>kdp520_cam_set_gain</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, kdp_camera_kl520.o(i.kdp520_cam_set_gain))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp520_cam_set_gain &rArr; kdp_sensor_set_gain
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sensor_set_gain
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>kdp520_cam_sleep</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, kdp_camera_kl520.o(i.kdp520_cam_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kdp520_cam_sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sensor_sleep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>kdp520_cam_start_capture</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, kdp_camera_kl520.o(i.kdp520_cam_start_capture))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = kdp520_cam_start_capture
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>kdp520_cam_stop_capture</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, kdp_camera_kl520.o(i.kdp520_cam_stop_capture))
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>kdp520_get_device_id</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_camera_kl520.o(i.kdp520_get_device_id))
<BR><BR>[Calls]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sensor_get_device_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>kdp520_get_tile_en</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, kdp_camera_kl520.o(i.kdp520_get_tile_en))
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>kdp520_set_aec_en</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, kdp_camera_kl520.o(i.kdp520_set_aec_en))
<BR><BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_sensor_set_aec_en
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_camera_kl520.o(.data)
</UL>
<P><STRONG><a name="[39]"></a>sp2509_l_sensor_get_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sp2509.o(i.sp2509_l_sensor_get_id))
<BR>[Address Reference Count : 1]<UL><LI> sp2509.o(.data)
</UL>
<P><STRONG><a name="[36]"></a>sp2509_l_sensor_set_fmt</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sp2509.o(i.sp2509_l_sensor_set_fmt))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = sp2509_l_sensor_set_fmt &rArr; sp2509_set_params &rArr; sp2509_init &rArr; sp2509_write_reg &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_set_params
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_select_win
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sp2509.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>sp2509_r_sensor_get_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sp2509.o(i.sp2509_r_sensor_get_id))
<BR>[Address Reference Count : 1]<UL><LI> sp2509.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>sp2509_r_sensor_set_fmt</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sp2509.o(i.sp2509_r_sensor_set_fmt))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = sp2509_r_sensor_set_fmt &rArr; sp2509_set_params &rArr; sp2509_init &rArr; sp2509_write_reg &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_set_params
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_select_win
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sp2509.o(.data)
</UL>
<P><STRONG><a name="[436]"></a>sp2509_read_reg</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, sp2509.o(i.sp2509_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sp2509_read_reg &rArr; kdp_drv_i2c_read
</UL>
<BR>[Calls]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_drv_i2c_read
</UL>
<BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_init
</UL>

<P><STRONG><a name="[437]"></a>sp2509_select_win</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sp2509.o(i.sp2509_select_win))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sp2509_select_win
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_r_sensor_set_fmt
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_l_sensor_set_fmt
</UL>

<P><STRONG><a name="[31]"></a>sp2509_sensor_enum_fmt</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sp2509.o(i.sp2509_sensor_enum_fmt))
<BR>[Address Reference Count : 1]<UL><LI> sp2509.o(.data)
</UL>
<P><STRONG><a name="[438]"></a>sp2509_set_params</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sp2509.o(i.sp2509_set_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = sp2509_set_params &rArr; sp2509_init &rArr; sp2509_write_reg &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_init
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_r_sensor_set_fmt
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_l_sensor_set_fmt
</UL>

<P><STRONG><a name="[435]"></a>sp2509_write_reg</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, sp2509.o(i.sp2509_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = sp2509_write_reg &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_drv_i2c_write
</UL>
<BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp2509_init
</UL>

<P><STRONG><a name="[183]"></a>_handle_face_enroll_correct_direction</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, kdp_comm_and_gui_fdr.o(i._handle_face_enroll_correct_direction))
<BR><BR>[Stack]<UL><LI>Max Depth = 916<LI>Call Chain = _handle_face_enroll_correct_direction &rArr; uart_face_add_timeout &rArr; _face_add_internal &rArr; _api_face_note &rArr; send_EnrollOrVerify_note_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_disp_open_chk
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_state_rst
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_close_perm_state_chk
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sample_face_close
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_add_timeout
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_clr_mass_data_header
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_face_enroll
</UL>

<P><STRONG><a name="[189]"></a>_handle_user_com_event_delete_user</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, kdp_comm_and_gui_fdr.o(i._handle_user_com_event_delete_user))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = _handle_user_com_event_delete_user &rArr; response_delete_one_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_disp_open_chk
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_state_rst
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_close_perm_state_chk
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_user_db_offset
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_sample_face_del_user
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_delete_one_msg
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_user_id
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_uart_face_del_some_users
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_user_com_fdfr_thread
</UL>

<P><STRONG><a name="[18e]"></a>_handle_user_com_event_face_enroll</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, kdp_comm_and_gui_fdr.o(i._handle_user_com_event_face_enroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 940<LI>Call Chain = _handle_user_com_event_face_enroll &rArr; _handle_face_enroll_correct_direction &rArr; uart_face_add_timeout &rArr; _face_add_internal &rArr; _api_face_note &rArr; send_EnrollOrVerify_note_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_hmi_ctrl_state_set
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_enroll_reply_msg
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sample_face_close
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_face_enroll_seq
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_face_enroll_correct_direction
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_user_com_fdfr_thread
</UL>

<P><STRONG><a name="[192]"></a>_handle_user_com_event_ota_process</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, kdp_comm_and_gui_fdr.o(i._handle_user_com_event_ota_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = _handle_user_com_event_ota_process &rArr; OtaProcess_run &rArr; ota_auto_update &rArr; ota_bin_double_check &rArr; md5_main &rArr; MD5Final &rArr; MD5Update &rArr; MD5Transform &rArr; MD5Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mgr_sw_reset
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_OtaDone_Note_msg
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtaProcess_run
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_StopOta
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_user_com_fdfr_thread
</UL>

<P><STRONG><a name="[69]"></a>_user_com_fdfr_thread</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, kdp_comm_and_gui_fdr.o(i._user_com_fdfr_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 940<LI>Call Chain = _user_com_fdfr_thread &rArr; _handle_user_com_event_face_enroll &rArr; _handle_face_enroll_correct_direction &rArr; uart_face_add_timeout &rArr; _face_add_internal &rArr; _api_face_note &rArr; send_EnrollOrVerify_note_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_hmi_ctrl_state_set
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_disp_open_chk
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_state_rst
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_cam_disp_close_perm_state_chk
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_event
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_user_db_offset
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_is_fdfr_abort
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_sample_face_del_all
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_snap_image
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_face_recognition_timeout
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_snapImage_reply_msg
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_delete_msg
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_ota_process
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_face_enroll
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_delete_user
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_comm_and_gui_fdr.o(i.init_user_com_thread)
</UL>
<P><STRONG><a name="[18f]"></a>check_face_enroll_seq</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, kdp_comm_and_gui_fdr.o(i.check_face_enroll_seq))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = check_face_enroll_seq &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_user_com_event_face_enroll
</UL>

<P><STRONG><a name="[230]"></a>handle_db_export</STRONG> (Thumb, 142 bytes, Stack size 72 bytes, kdp_comm_and_gui_fdr.o(i.handle_db_export))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = handle_db_export &rArr; send_db_export_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_find_exist_id
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_printf_nocrlf
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_db_export_reply_msg
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5_main
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5_covers
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_get_all_info_user_size
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_get_all_info_user_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[234]"></a>handle_db_import</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, kdp_comm_and_gui_fdr.o(i.handle_db_import))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = handle_db_import &rArr; send_db_import_request_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_db_import_request_reply_msg
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_import_request
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_db_import_info
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[238]"></a>handle_download_data</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, kdp_comm_and_gui_fdr.o(i.handle_download_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = handle_download_data &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_reply_AesNoDataMsg
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_import
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_db_import_info
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[23b]"></a>handle_enroll_itg</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, kdp_comm_and_gui_fdr.o(i.handle_enroll_itg))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = handle_enroll_itg &rArr; user_com_thread_event_check_set &rArr; user_com_event_interrupt &rArr; sample_face_close &rArr; kl520_api_face_close &rArr; kl520_api_reset_hmi_external_interface &rArr; kl520_api_cam_disp_state_rst &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_enroll_overwrite_flag
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_enroll_customize_uid
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_Enroll_Add_Face_Type_Set
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_thread_event_check_set
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_event_start
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_enroll_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[241]"></a>handle_face_reset</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, kdp_comm_and_gui_fdr.o(i.handle_face_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = handle_face_reset &rArr; user_com_event_interrupt &rArr; sample_face_close &rArr; kl520_api_face_close &rArr; kl520_api_reset_hmi_external_interface &rArr; kl520_api_cam_disp_state_rst &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_face_del
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_reply_AesNoDataMsg
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_write_unlock
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_write_lock
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_FaceReset
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_event_interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[247]"></a>handle_kid_enroll</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, kdp_comm_and_gui_fdr.o(i.handle_kid_enroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 684<LI>Call Chain = handle_kid_enroll &rArr; send_enroll_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_enroll_overwrite_flag
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_enroll_customize_uid
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_get_start_user_id
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_enroll_reply_msg
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KDP_Enroll_Add_Face_Type_Set
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_thread_event_check_set
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_event_start
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_enroll_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[249]"></a>handle_kid_verify</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, kdp_comm_and_gui_fdr.o(i.handle_kid_verify))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = handle_kid_verify &rArr; user_com_thread_event_check_set &rArr; user_com_event_interrupt &rArr; sample_face_close &rArr; kl520_api_face_close &rArr; kl520_api_reset_hmi_external_interface &rArr; kl520_api_cam_disp_state_rst &rArr; kl520_api_cam_disp_ctrl &rArr; _api_camera_open &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sample_face_close
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StreamsToBigEndU16
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_thread_event_check_set
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_event_start
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[24a]"></a>handle_upload_data</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, kdp_comm_and_gui_fdr.o(i.handle_upload_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = handle_upload_data &rArr; send_upload_data_reply_msg &rArr; kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_upload_data_reply_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[24c]"></a>handle_user_rotate_sensor</STRONG> (Thumb, 70 bytes, Stack size 56 bytes, kdp_comm_and_gui_fdr.o(i.handle_user_rotate_sensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = handle_user_rotate_sensor &rArr; kl520_api_customer_get &rArr; kdp_ddr_reserve &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_customer_write
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_customer_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_reply_AesNoDataMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
</UL>

<P><STRONG><a name="[23c]"></a>parse_enroll_msg</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, kdp_comm_and_gui_fdr.o(i.parse_enroll_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = parse_enroll_msg &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_lwcom_parser
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_kid_enroll
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_enroll_itg
</UL>

<P><STRONG><a name="[235]"></a>update_db_import_info</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kdp_comm_and_gui_fdr.o(i.update_db_import_info))
<BR><BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_download_data
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_db_import
</UL>

<P><STRONG><a name="[113]"></a>SwitchScpu</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, kdp_comm_app.o(i.SwitchScpu))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = SwitchScpu &rArr; kl520_api_ota_switch_SCPU &rArr; ota_update_force_switch_active_partition &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kl520_api_ota_switch_SCPU
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_update_show_config
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_Uart_SwitchPart
</UL>

<P><STRONG><a name="[42e]"></a>kdp_com_fill_hdr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, kdp_comm_protoco.o(i.kdp_com_fill_hdr))
<BR><BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_system_ready_note_msg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_pack_rsp_msg
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_EnrollOrVerify_note_msg
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_uploadImage_reply_msg
</UL>

<P><STRONG><a name="[424]"></a>kdp_com_pack_rsp_msg</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, kdp_comm_protoco.o(i.kdp_com_pack_rsp_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kdp_com_pack_rsp_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_fill_hdr
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_enroll_reply_msg
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_verify_reply_msg
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_exp_mass_data_reply_msg
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_exp_mass_data_done_note_msg
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_upload_data_reply_msg
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_reply_msg
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_savedImage_reply_msg
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_db_import_request_reply_msg
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_db_export_reply_msg
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_SetReleaseOrDebugEncKey_reply_msg
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_OtaStatus_reply_msg
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_OtaDone_Note_msg
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_InitEncryption_reply_msg
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_Get_Kn_DeviceInfo_reply_msg
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg_zhian_prd
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg_zhian_hard
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg_zhian
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_user_info_msg
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_Alluser_info_msg
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_delete_one_msg
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_reply_NoDataMsg
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_SwPart_reply_msg
</UL>

<P><STRONG><a name="[285]"></a>kdp_com_send_out_msg</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, kdp_comm_protoco.o(i.kdp_com_send_out_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = kdp_com_send_out_msg &rArr; DSM_AesEncrypt &rArr; aesEncrypt &rArr; keyExpansion &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_cal
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_com_response_data
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_XOREncrypt
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_CheckBodySize
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSM_AesEncrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_enroll_reply_msg
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_system_ready_note_msg
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_verify_reply_msg
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_exp_mass_data_reply_msg
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_exp_mass_data_done_note_msg
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_EnrollOrVerify_note_msg
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_upload_data_reply_msg
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_uploadImage_reply_msg
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_reply_msg
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_savedImage_reply_msg
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_db_import_request_reply_msg
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_db_export_reply_msg
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_OtaStatus_reply_msg
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_OtaDone_Note_msg
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_InitEncryption_reply_msg
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_Get_Kn_DeviceInfo_reply_msg
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg_zhian_prd
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg_zhian_hard
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg_zhian
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_version_info_msg
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_user_info_msg
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_get_Alluser_info_msg
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response_delete_one_msg
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_reply_NoDataMsg
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_SwPart_reply_msg
</UL>

<P><STRONG><a name="[39d]"></a>IsException</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtx_delay.o(i.IsException))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[39e]"></a>IsIrqMasked</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_delay.o(i.IsIrqMasked))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[7c]"></a>svcRtxDelay</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, rtx_delay.o(i.svcRtxDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = svcRtxDelay &rArr; osRtxThreadWaitEnter &rArr; osRtxThreadDelayInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelayStarted
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelayError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_delay.o(i.osDelay)
</UL>
<P><STRONG><a name="[3a8]"></a>EventFlagsCheck</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, rtx_evflags.o(i.EventFlagsCheck))
<BR><BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_evflags_c_ab3a5ffb__atomic_chk32_any
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_evflags_c_ab3a5ffb__atomic_chk32_all
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxEventFlagsPostProcess
</UL>

<P><STRONG><a name="[3a4]"></a>EventFlagsSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rtx_evflags.o(i.EventFlagsSet))
<BR><BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_evflags_c_ab3a5ffb__atomic_set32
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
</UL>

<P><STRONG><a name="[3a1]"></a>IsException</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtx_evflags.o(i.IsException))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsClear
</UL>

<P><STRONG><a name="[3a2]"></a>IsIrqMasked</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_evflags.o(i.IsIrqMasked))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsClear
</UL>

<P><STRONG><a name="[92]"></a>osRtxEventFlagsPostProcess</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, rtx_evflags.o(i.osRtxEventFlagsPostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = osRtxEventFlagsPostProcess &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitCompleted
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(i.svcRtxEventFlagsNew)
</UL>
<P><STRONG><a name="[a3]"></a>svcRtxEventFlagsClear</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, rtx_evflags.o(i.svcRtxEventFlagsClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = svcRtxEventFlagsClear
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsClearDone
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_evflags_c_ab3a5ffb__atomic_clr32
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(i.osEventFlagsClear)
</UL>
<P><STRONG><a name="[a4]"></a>svcRtxEventFlagsNew</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, rtx_evflags.o(i.svcRtxEventFlagsNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = svcRtxEventFlagsNew &rArr; osRtxMemoryAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsCreated
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(i.osEventFlagsNew)
</UL>
<P><STRONG><a name="[7d]"></a>svcRtxEventFlagsSet</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, rtx_evflags.o(i.svcRtxEventFlagsSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = svcRtxEventFlagsSet &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitCompleted
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsSetDone
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsSet
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(i.osEventFlagsSet)
</UL>
<P><STRONG><a name="[7e]"></a>svcRtxEventFlagsWait</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, rtx_evflags.o(i.svcRtxEventFlagsWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = svcRtxEventFlagsWait &rArr; osRtxThreadWaitEnter &rArr; osRtxThreadDelayInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitTimeout
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitPending
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitNotCompleted
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitCompleted
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(i.osEventFlagsWait)
</UL>
<P><STRONG><a name="[3ac]"></a>IsException</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtx_kernel.o(i.IsException))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetInfo
</UL>

<P><STRONG><a name="[3ad]"></a>IsIrqMasked</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_kernel.o(i.IsIrqMasked))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetInfo
</UL>

<P><STRONG><a name="[7f]"></a>svcRtxKernelGetInfo</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, rtx_kernel.o(i.svcRtxKernelGetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = svcRtxKernelGetInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelInfoRetrieved
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(i.osKernelGetInfo)
</UL>
<P><STRONG><a name="[80]"></a>svcRtxKernelGetState</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtx_kernel.o(i.svcRtxKernelGetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelGetState
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(i.osKernelGetState)
</UL>
<P><STRONG><a name="[a5]"></a>svcRtxKernelGetTickCount</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rtx_kernel.o(i.svcRtxKernelGetTickCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcRtxKernelGetTickCount
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(i.osKernelGetTickCount)
</UL>
<P><STRONG><a name="[a6]"></a>svcRtxKernelInitialize</STRONG> (Thumb, 292 bytes, Stack size 16 bytes, rtx_kernel.o(i.svcRtxKernelInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = svcRtxKernelInitialize &rArr; osRtxMemoryPoolInit
</UL>
<BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolInit
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryInit
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelInitialized
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(i.osKernelInitialize)
</UL>
<P><STRONG><a name="[81]"></a>svcRtxKernelStart</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, rtx_kernel.o(i.svcRtxKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxKernelStart &rArr; osRtxThreadStartup &rArr; svcRtxThreadNew &rArr; osRtxMemoryAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadStartup
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_Setup
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_GetIRQn
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_Enable
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelStarted
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(i.osKernelStart)
</UL>
<P><STRONG><a name="[3b2]"></a>IsException</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtx_msgqueue.o(i.IsException))
<BR><BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[3b3]"></a>IsIrqMasked</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_msgqueue.o(i.IsIrqMasked))
<BR><BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[12d]"></a>MessageQueueGet</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rtx_msgqueue.o(i.MessageQueueGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MessageQueueGet
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_rtx_msgqueue_c_6fef6d89__atomic_dec32_nz
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_rtx_msgqueue_c_6fef6d89__atomic_wr8
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
</UL>

<P><STRONG><a name="[3cd]"></a>MessageQueuePut</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, rtx_msgqueue.o(i.MessageQueuePut))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MessageQueuePut
</UL>
<BR>[Calls]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_rtx_msgqueue_c_6fef6d89__atomic_inc32
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
</UL>

<P><STRONG><a name="[3ca]"></a>MessageQueueRemove</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtx_msgqueue.o(i.MessageQueueRemove))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
</UL>

<P><STRONG><a name="[93]"></a>osRtxMessageQueuePostProcess</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, rtx_msgqueue.o(i.osRtxMessageQueuePostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = osRtxMessageQueuePostProcess &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadRegPtr
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueRemove
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueuePut
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueRetrieved
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueInserted
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(i.svcRtxMessageQueueNew)
</UL>
<P><STRONG><a name="[82]"></a>svcRtxMessageQueueGet</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, rtx_msgqueue.o(i.svcRtxMessageQueueGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = svcRtxMessageQueueGet &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadRegPtr
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueRemove
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueuePut
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueGet
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueRetrieved
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueNotRetrieved
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueInserted
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetTimeout
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetPending
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(i.osMessageQueueGet)
</UL>
<P><STRONG><a name="[44a]"></a>svcRtxMessageQueueNew</STRONG> (Thumb, 316 bytes, Stack size 40 bytes, rtx_msgqueue.o(i.svcRtxMessageQueueNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = svcRtxMessageQueueNew &rArr; osRtxMemoryAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolInit
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueCreated
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueueTimerSetup
</UL>

<P><STRONG><a name="[83]"></a>svcRtxMessageQueuePut</STRONG> (Thumb, 226 bytes, Stack size 24 bytes, rtx_msgqueue.o(i.svcRtxMessageQueuePut))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = svcRtxMessageQueuePut &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadRegPtr
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueuePut
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueRetrieved
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueuePutTimeout
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueuePutPending
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueNotInserted
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueInserted
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(i.osMessageQueuePut)
</UL>
<P><STRONG><a name="[3bd]"></a>IsException</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtx_mutex.o(i.IsException))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>

<P><STRONG><a name="[3be]"></a>IsIrqMasked</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_mutex.o(i.IsIrqMasked))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>

<P><STRONG><a name="[84]"></a>svcRtxMutexAcquire</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, rtx_mutex.o(i.svcRtxMutexAcquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = svcRtxMutexAcquire &rArr; osRtxThreadWaitEnter &rArr; osRtxThreadDelayInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexNotAcquired
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquired
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquireTimeout
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquirePending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mutex.o(i.osMutexAcquire)
</UL>
<P><STRONG><a name="[a7]"></a>svcRtxMutexNew</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, rtx_mutex.o(i.svcRtxMutexNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = svcRtxMutexNew &rArr; osRtxMemoryAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexCreated
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mutex.o(i.osMutexNew)
</UL>
<P><STRONG><a name="[a8]"></a>svcRtxMutexRelease</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, rtx_mutex.o(i.svcRtxMutexRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = svcRtxMutexRelease &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexReleased
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquired
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mutex.o(i.osMutexRelease)
</UL>
<P><STRONG><a name="[3f7]"></a>IsException</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtx_semaphore.o(i.IsException))
<BR><BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>

<P><STRONG><a name="[3f8]"></a>IsIrqMasked</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_semaphore.o(i.IsIrqMasked))
<BR><BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>

<P><STRONG><a name="[3d9]"></a>SemaphoreTokenDecrement</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtx_semaphore.o(i.SemaphoreTokenDecrement))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SemaphoreTokenDecrement
</UL>
<BR>[Calls]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___15_rtx_semaphore_c_7b131ed0__atomic_dec16_nz
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreAcquire
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxSemaphorePostProcess
</UL>

<P><STRONG><a name="[3fc]"></a>SemaphoreTokenIncrement</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, rtx_semaphore.o(i.SemaphoreTokenIncrement))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SemaphoreTokenIncrement
</UL>
<BR>[Calls]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___15_rtx_semaphore_c_7b131ed0__atomic_inc16_lt
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreRelease
</UL>

<P><STRONG><a name="[94]"></a>osRtxSemaphorePostProcess</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, rtx_semaphore.o(i.osRtxSemaphorePostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osRtxSemaphorePostProcess &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SemaphoreTokenDecrement
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreAcquired
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_semaphore.o(i.svcRtxSemaphoreNew)
</UL>
<P><STRONG><a name="[86]"></a>svcRtxSemaphoreAcquire</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, rtx_semaphore.o(i.svcRtxSemaphoreAcquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = svcRtxSemaphoreAcquire &rArr; osRtxThreadWaitEnter &rArr; osRtxThreadDelayInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SemaphoreTokenDecrement
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreNotAcquired
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreError
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreAcquired
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreAcquireTimeout
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreAcquirePending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_semaphore.o(i.osSemaphoreAcquire)
</UL>
<P><STRONG><a name="[aa]"></a>svcRtxSemaphoreNew</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, rtx_semaphore.o(i.svcRtxSemaphoreNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = svcRtxSemaphoreNew &rArr; osRtxMemoryAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreError
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreCreated
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_semaphore.o(i.osSemaphoreNew)
</UL>
<P><STRONG><a name="[87]"></a>svcRtxSemaphoreRelease</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, rtx_semaphore.o(i.svcRtxSemaphoreRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = svcRtxSemaphoreRelease &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SemaphoreTokenIncrement
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreReleased
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreError
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreAcquired
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_semaphore.o(i.osSemaphoreRelease)
</UL>
<P><STRONG><a name="[3fe]"></a>IsException</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtx_thread.o(i.IsException))
<BR><BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSetPriority
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetPriority
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsGet
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsClear
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsWait
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
</UL>

<P><STRONG><a name="[3ff]"></a>IsIrqMasked</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_thread.o(i.IsIrqMasked))
<BR><BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSetPriority
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetPriority
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsGet
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsClear
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsWait
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
</UL>

<P><STRONG><a name="[139]"></a>ThreadFlagsCheck</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, rtx_thread.o(i.ThreadFlagsCheck))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_thread_c_3927f09d__atomic_chk32_any
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_thread_c_3927f09d__atomic_chk32_all
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsWait
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsSet
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadPostProcess
</UL>

<P><STRONG><a name="[403]"></a>ThreadFlagsSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rtx_thread.o(i.ThreadFlagsSet))
<BR><BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_thread_c_3927f09d__atomic_set32
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsSet
</UL>

<P><STRONG><a name="[3db]"></a>osRtxThreadBlock</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, rtx_thread.o(i.osRtxThreadBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadPreempted
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
</UL>

<P><STRONG><a name="[4f5]"></a>osRtxThreadDelayInsert</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, rtx_thread.o(i.osRtxThreadDelayInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = osRtxThreadDelayInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
</UL>

<P><STRONG><a name="[4f6]"></a>osRtxThreadDelayRemove</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, rtx_thread.o(i.osRtxThreadDelayRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = osRtxThreadDelayRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
</UL>

<P><STRONG><a name="[3e9]"></a>osRtxThreadDestroy</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, rtx_thread.o(i.osRtxThreadDestroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osRtxThreadDestroy &rArr; osRtxThreadFree &rArr; osRtxMemoryPoolFree
</UL>
<BR>[Calls]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadFree
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadDestroyed
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[3eb]"></a>osRtxThreadFree</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, rtx_thread.o(i.osRtxThreadFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = osRtxThreadFree &rArr; osRtxMemoryPoolFree
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDestroy
</UL>

<P><STRONG><a name="[3ee]"></a>osRtxThreadJoinWakeup</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, rtx_thread.o(i.osRtxThreadJoinWakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osRtxThreadJoinWakeup &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadJoined
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[3e0]"></a>osRtxThreadListRoot</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtx_thread.o(i.osRtxThreadListRoot))
<BR><BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[96]"></a>osRtxThreadPostProcess</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtx_thread.o(i.osRtxThreadPostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = osRtxThreadPostProcess &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsCheck
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitCompleted
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.svcRtxThreadNew)
</UL>
<P><STRONG><a name="[b5]"></a>svcRtxThreadExit</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, rtx_thread.o(i.svcRtxThreadExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = svcRtxThreadExit &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadStackCheck
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadJoinWakeup
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDestroy
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelErrorNotify
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.osThreadExit)
</UL>
<P><STRONG><a name="[ab]"></a>svcRtxThreadFlagsClear</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, rtx_thread.o(i.svcRtxThreadFlagsClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcRtxThreadFlagsClear
</UL>
<BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_thread_c_3927f09d__atomic_clr32
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsError
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsClearDone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.osThreadFlagsClear)
</UL>
<P><STRONG><a name="[88]"></a>svcRtxThreadFlagsGet</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rtx_thread.o(i.svcRtxThreadFlagsGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcRtxThreadFlagsGet
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.osThreadFlagsGet)
</UL>
<P><STRONG><a name="[89]"></a>svcRtxThreadFlagsSet</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, rtx_thread.o(i.svcRtxThreadFlagsSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = svcRtxThreadFlagsSet &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsSet
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsCheck
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitCompleted
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsSetDone
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.osThreadFlagsSet)
</UL>
<P><STRONG><a name="[ac]"></a>svcRtxThreadFlagsWait</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, rtx_thread.o(i.svcRtxThreadFlagsWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = svcRtxThreadFlagsWait &rArr; osRtxThreadWaitEnter &rArr; osRtxThreadDelayInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsCheck
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitTimeout
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitPending
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitNotCompleted
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitCompleted
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.osThreadFlagsWait)
</UL>
<P><STRONG><a name="[ad]"></a>svcRtxThreadGetId</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtx_thread.o(i.svcRtxThreadGetId))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcRtxThreadGetId
</UL>
<BR>[Calls]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetId
</UL>
<BR>[Called By]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.osThreadGetId)
</UL>
<P><STRONG><a name="[ae]"></a>svcRtxThreadGetPriority</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, rtx_thread.o(i.svcRtxThreadGetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcRtxThreadGetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetPriority
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.osThreadGetPriority)
</UL>
<P><STRONG><a name="[8a]"></a>svcRtxThreadNew</STRONG> (Thumb, 472 bytes, Stack size 56 bytes, rtx_thread.o(i.svcRtxThreadNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = svcRtxThreadNew &rArr; osRtxMemoryAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadCreated
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadStartup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.osThreadNew)
</UL>
<P><STRONG><a name="[af]"></a>svcRtxThreadSetPriority</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, rtx_thread.o(i.svcRtxThreadSetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = svcRtxThreadSetPriority &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadPriorityUpdated
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.osThreadSetPriority)
</UL>
<P><STRONG><a name="[409]"></a>IsException</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtx_timer.o(i.IsException))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStop
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStart
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerNew
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerIsRunning
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerDelete
</UL>

<P><STRONG><a name="[40a]"></a>IsIrqMasked</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_timer.o(i.IsIrqMasked))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStop
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStart
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerNew
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerIsRunning
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerDelete
</UL>

<P><STRONG><a name="[3f4]"></a>TimerInsert</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, rtx_timer.o(i.TimerInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TimerInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerStart
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerTick
</UL>

<P><STRONG><a name="[45a]"></a>TimerRemove</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtx_timer.o(i.TimerRemove))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerStop
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerStart
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerDelete
</UL>

<P><STRONG><a name="[a9]"></a>osRtxTimerTick</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, rtx_timer.o(i.osRtxTimerTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = osRtxTimerTick &rArr; osMessageQueuePut &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerInsert
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelErrorNotify
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_timer.o(i.osRtxTimerSetup)
</UL>
<P><STRONG><a name="[8b]"></a>svcRtxTimerDelete</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, rtx_timer.o(i.svcRtxTimerDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = svcRtxTimerDelete &rArr; osRtxMemoryPoolFree
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerRemove
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerError
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerDestroyed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_timer.o(i.osTimerDelete)
</UL>
<P><STRONG><a name="[b0]"></a>svcRtxTimerIsRunning</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, rtx_timer.o(i.svcRtxTimerIsRunning))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcRtxTimerIsRunning
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerIsRunning
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_timer.o(i.osTimerIsRunning)
</UL>
<P><STRONG><a name="[b1]"></a>svcRtxTimerNew</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, rtx_timer.o(i.svcRtxTimerNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = svcRtxTimerNew &rArr; osRtxMemoryAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerError
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerCreated
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_timer.o(i.osTimerNew)
</UL>
<P><STRONG><a name="[b2]"></a>svcRtxTimerStart</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, rtx_timer.o(i.svcRtxTimerStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = svcRtxTimerStart &rArr; TimerInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerRemove
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerInsert
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerStarted
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_timer.o(i.osTimerStart)
</UL>
<P><STRONG><a name="[b3]"></a>svcRtxTimerStop</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, rtx_timer.o(i.svcRtxTimerStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = svcRtxTimerStop
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerRemove
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerStopped
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_timer.o(i.osTimerStop)
</UL>
<P><STRONG><a name="[1af]"></a>_kdp_model_load_model</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, kdp_model.o(i._kdp_model_load_model))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _kdp_model_load_model &rArr; kdp_memxfer_flash_to_ddr &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_load_model
</UL>

<P><STRONG><a name="[1b1]"></a>_kdp_model_load_model_info</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, kdp_model.o(i._kdp_model_load_model_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = _kdp_model_load_model_info &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_flash_to_ddr
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_init
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_load_model
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_info_reload
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_reload_model_info
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_model
</UL>

<P><STRONG><a name="[309]"></a>_kdp_model_model_type_to_slot_index</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, kdp_model.o(i._kdp_model_model_type_to_slot_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _kdp_model_model_type_to_slot_index
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_ready_check
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_model
</UL>

<P><STRONG><a name="[1be]"></a>_kdp_model_set_raw_img_idx</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, kdp_model.o(i._kdp_model_set_raw_img_idx))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = _kdp_model_set_raw_img_idx &rArr; kdp_com_set_image_active &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_com_set_image_active
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_liveness_img
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_config_img
</UL>

<P><STRONG><a name="[b4]"></a>kmdw_model_ipc_handler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, kdp_model.o(i.kmdw_model_ipc_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = kmdw_model_ipc_handler &rArr; osEventFlagsSet &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; osRtxErrorNotify &rArr; power_manager_error_notify &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_model.o(i.kdp_ipc_init)
</UL>
<P><STRONG><a name="[1a1]"></a>_is_valid_db_idx</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kdp_app_db.o(i._is_valid_db_idx))
<BR><BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_calc_fr_dist_test
</UL>

<P><STRONG><a name="[19f]"></a>_kdp_app_db_calc_fr_dist_mix_2_test</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, kdp_app_db.o(i._kdp_app_db_calc_fr_dist_mix_2_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _kdp_app_db_calc_fr_dist_mix_2_test &rArr; _kdp_app_db_calc_fr_dist_test
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_calc_fr_dist_test
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_compare_five_faces_both_test
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_find_fr_min_dist_mix_2_test
</UL>

<P><STRONG><a name="[1a0]"></a>_kdp_app_db_calc_fr_dist_test</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, kdp_app_db.o(i._kdp_app_db_calc_fr_dist_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _kdp_app_db_calc_fr_dist_test
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_sqrt
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_valid_db_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_compare_self
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_calc_fr_dist_mix_2_test
</UL>

<P><STRONG><a name="[1a3]"></a>_kdp_app_db_find_exist_id</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, kdp_app_db.o(i._kdp_app_db_find_exist_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _kdp_app_db_find_exist_id &rArr; kdp_app_db_check_user_id
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_get_db_idx
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_user_id
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_slot_is_used
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_find_exist_id
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_delete
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_both_register
</UL>

<P><STRONG><a name="[1a6]"></a>_kdp_app_db_find_fr_min_dist_mix_2_test</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, kdp_app_db.o(i._kdp_app_db_find_fr_min_dist_mix_2_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _kdp_app_db_find_fr_min_dist_mix_2_test &rArr; _kdp_app_db_calc_fr_dist_mix_2_test &rArr; _kdp_app_db_calc_fr_dist_test
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_calc_fr_dist_mix_2_test
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_compare_five_faces_both_test
</UL>

<P><STRONG><a name="[269]"></a>_kdp_app_db_find_space</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, kdp_app_db.o(i._kdp_app_db_find_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _kdp_app_db_find_space
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_slot_is_used
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_import_request
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_both_register
</UL>

<P><STRONG><a name="[268]"></a>_kdp_app_db_flush_register_data</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, kdp_app_db.o(i._kdp_app_db_flush_register_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _kdp_app_db_flush_register_data
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_delete
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_both_register
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_abort_reg
</UL>

<P><STRONG><a name="[1a7]"></a>_kdp_app_db_save_ddr_to_flash</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, kdp_app_db.o(i._kdp_app_db_save_ddr_to_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _kdp_app_db_save_ddr_to_flash &rArr; kdp_memxfer_ddr_to_flash &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_ddr_to_flash
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_memxfer_ddr_to_flash_wo_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_import
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_delete
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_add
</UL>

<P><STRONG><a name="[1aa]"></a>_kdp_app_db_show</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, kdp_app_db.o(i._kdp_app_db_show))
<BR><BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_imp_fm_chk_int8
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_imp_fm_chk
</UL>

<P><STRONG><a name="[1a5]"></a>_kdp_app_db_slot_is_used</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kdp_app_db.o(i._kdp_app_db_slot_is_used))
<BR><BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_get_user_info_by_idx
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_find_space
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_find_exist_id
</UL>

<P><STRONG><a name="[1a2]"></a>_kdp_app_db_sqrt</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, kdp_app_db.o(i._kdp_app_db_sqrt))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_show
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_app_db_calc_fr_dist_test
</UL>

<P><STRONG><a name="[26a]"></a>_kdp_app_db_update</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, kdp_app_db.o(i._kdp_app_db_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _kdp_app_db_update
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_both_register
</UL>

<P><STRONG><a name="[272]"></a>kdp_app_db_list</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, kdp_app_db.o(i.kdp_app_db_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = kdp_app_db_list
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_delete
</UL>

<P><STRONG><a name="[6c]"></a>NCPU_IRQHandler</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, kdp_com.o(i.NCPU_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = NCPU_IRQHandler &rArr; power_mgr_sw_reset &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_ipc_clear_from_ncpu_int
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_level_printf
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mgr_sw_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kdp_com.o(i.kdp_com_init)
</UL>
<P><STRONG><a name="[2d4]"></a>kdp_e2e_face_nir_combo_liveness</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, kdp_e2e_r1n1.o(i.kdp_e2e_face_nir_combo_liveness))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = kdp_e2e_face_nir_combo_liveness &rArr; kdp_app_nir_hsn_lv &rArr; kdp_model_nir_hsn_lv &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_lm
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_img_cfg
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_r1n1_lv
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_fd
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_nir_lv
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_nir_hsn_lv
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_nir_eye_lv
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1n1_ncpu_liveness
</UL>

<P><STRONG><a name="[1ef]"></a>aec_e2e_multiply_factor_set</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, kdp_e2e_camera.o(i.aec_e2e_multiply_factor_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = aec_e2e_multiply_factor_set &rArr; an_nir_gain_setting &rArr; kdp_camera_set_gain
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_camera_set_exp_time
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_nir_gain_clip_bound
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_nir_aec_clip_bound
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;an_nir_gain_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_only_surrond
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_continuous_gain_tune
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nir_aec_tune_for_fd_search
</UL>

<P><STRONG><a name="[2ed]"></a>_kdp_e2e_util_mirror_point</STRONG> (Thumb, 166 bytes, Stack size 20 bytes, kdp_e2e_util.o(i._kdp_e2e_util_mirror_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _kdp_e2e_util_mirror_point
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_chk_position
</UL>

<P><STRONG><a name="[2d9]"></a>_calc_pixel_val_norm_variance</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, kdp_e2e_face.o(i._calc_pixel_val_norm_variance))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _calc_pixel_val_norm_variance
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_norm_variance
</UL>

<P><STRONG><a name="[1ab]"></a>_kdp_e2e_face_fd_lm</STRONG> (Thumb, 232 bytes, Stack size 128 bytes, kdp_e2e_face.o(i._kdp_e2e_face_fd_lm))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = _kdp_e2e_face_fd_lm &rArr; kdp_model_lm &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_lm
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_fd
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_fd_val_from_model_output
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1_fd_lm_combo
</UL>

<P><STRONG><a name="[2bd]"></a>kdp_e2e_face_n1_face_seg</STRONG> (Thumb, 266 bytes, Stack size 40 bytes, kdp_e2e_face.o(i.kdp_e2e_face_n1_face_seg))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = kdp_e2e_face_n1_face_seg &rArr; kdp_app_nir_face_seg_mask &rArr; kdp_model_run_ex &rArr; kdp_model_run &rArr; _kdp_model_run &rArr; kdp_com_ncpu_trigger_int &rArr; kdp_level_printf &rArr; kdp_uart_write &rArr; kdp_uart_control &rArr; kdp_serial_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_nir_face_seg_mask
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[2c1]"></a>kdp_e2e_face_n1_lm_mapping_check</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, kdp_e2e_face.o(i.kdp_e2e_face_n1_lm_mapping_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = kdp_e2e_face_n1_lm_mapping_check &rArr; kdp_e2e_util_predict_xy_from_offset_xy
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_get_inst
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_get_eye_range
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_predict_xy_from_offset_xy
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1
</UL>

<P><STRONG><a name="[2b7]"></a>kdp_e2e_face_n1_lm_postproc</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, kdp_e2e_face.o(i.kdp_e2e_face_n1_lm_postproc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = kdp_e2e_face_n1_lm_postproc &rArr; kdp_e2e_util_get_person_to_camera_distance &rArr; kdp_e2e_get_avg_eye_range &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_util_get_person_to_camera_distance
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[2b8]"></a>kdp_e2e_face_norm_delta</STRONG> (Thumb, 190 bytes, Stack size 48 bytes, kdp_e2e_face.o(i.kdp_e2e_face_norm_delta))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = kdp_e2e_face_norm_delta
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[2d2]"></a>kdp_e2e_face_norm_variance</STRONG> (Thumb, 358 bytes, Stack size 64 bytes, kdp_e2e_face.o(i.kdp_e2e_face_norm_variance))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = kdp_e2e_face_norm_variance &rArr; _calc_pixel_val_norm_variance
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_calc_pixel_val_norm_variance
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1r1_postproc
</UL>

<P><STRONG><a name="[2db]"></a>kdp_e2e_face_r1_lm_postproc</STRONG> (Thumb, 278 bytes, Stack size 56 bytes, kdp_e2e_face.o(i.kdp_e2e_face_r1_lm_postproc))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = kdp_e2e_face_r1_lm_postproc &rArr; kdp_e2e_iou_fd_by_mapping &rArr; kdp_e2e_get_mapping_bbox_from_nir &rArr; kdp_e2e_util_predict_xy_from_offset_xy
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_prop_get_inst
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_settings_get_inst
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_iou_fd_by_mapping
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_r1
</UL>

<P><STRONG><a name="[2bf]"></a>kdp_e2e_n1_sunlit_face_det</STRONG> (Thumb, 118 bytes, Stack size 36 bytes, kdp_e2e_face.o(i.kdp_e2e_n1_sunlit_face_det))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = kdp_e2e_n1_sunlit_face_det
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_img_mem_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_face_n1
</UL>

<P><STRONG><a name="[1ad]"></a>save_fd_val_from_model_output</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, kdp_e2e_face.o(i.save_fd_val_from_model_output))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_kdp_e2e_face_fd_lm
</UL>

<P><STRONG><a name="[2a2]"></a>calc_cra_adj_ratio</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, kdp_e2e_db.o(i.calc_cra_adj_ratio))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare
</UL>

<P><STRONG><a name="[2a8]"></a>kdp_e2e_db_extra_write</STRONG> (Thumb, 182 bytes, Stack size 88 bytes, kdp_e2e_db.o(i.kdp_e2e_db_extra_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = kdp_e2e_db_extra_write &rArr; mutex_unlock &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_unlock
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mutex_lock_timeout
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_extra_data_write
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_check_usr_idx
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_register
</UL>

<P><STRONG><a name="[2a1]"></a>kdp_e2e_db_min_user_meet_thers</STRONG> (Thumb, 124 bytes, Stack size 96 bytes, kdp_e2e_db.o(i.kdp_e2e_db_min_user_meet_thers))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = kdp_e2e_db_min_user_meet_thers &rArr; kdp_app_db_find_exist_id &rArr; _kdp_app_db_find_exist_id &rArr; kdp_app_db_check_user_id
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_face_variables
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_get_n1_lm
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_db_find_exist_id
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_extra_read
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_e2e_db_compare
</UL>

<P><STRONG><a name="[277]"></a>_kdp_lmk_to_bbox</STRONG> (Thumb, 170 bytes, Stack size 12 bytes, kdp_app_fid.o(i._kdp_lmk_to_bbox))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _kdp_lmk_to_bbox
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_face_pose
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_nir_face_seg_mask
</UL>

<P><STRONG><a name="[22e]"></a>get_crop_bbox_lm</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, kdp_app_fid.o(i.get_crop_bbox_lm))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = get_crop_bbox_lm &rArr; kdp_app_crop_box_center &rArr; kdp_app_crop_align_to4
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_crop_box_center
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_lm
</UL>

<P><STRONG><a name="[261]"></a>kdp_app_crop_align_to4</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, kdp_app_fid.o(i.kdp_app_crop_align_to4))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = kdp_app_crop_align_to4
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round_f2int
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_crop_box_one_side
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_crop_box_center
</UL>

<P><STRONG><a name="[316]"></a>kdp_app_crop_box</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, kdp_app_fid.o(i.kdp_app_crop_box))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = kdp_app_crop_box
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_nir_lv
</UL>

<P><STRONG><a name="[22f]"></a>kdp_app_crop_box_center</STRONG> (Thumb, 304 bytes, Stack size 56 bytes, kdp_app_fid.o(i.kdp_app_crop_box_center))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = kdp_app_crop_box_center &rArr; kdp_app_crop_align_to4
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round_f2int
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_crop_align_to4
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_nir_face_seg_mask
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crop_bbox_lm
</UL>

<P><STRONG><a name="[263]"></a>kdp_app_crop_box_fl</STRONG> (Thumb, 288 bytes, Stack size 48 bytes, kdp_app_fid.o(i.kdp_app_crop_box_fl))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = kdp_app_crop_box_fl
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round_f2int
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_nir_eye_lv
</UL>

<P><STRONG><a name="[264]"></a>kdp_app_crop_box_one_side</STRONG> (Thumb, 280 bytes, Stack size 64 bytes, kdp_app_fid.o(i.kdp_app_crop_box_one_side))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = kdp_app_crop_box_one_side &rArr; kdp_app_crop_align_to4
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round_f2int
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_crop_align_to4
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_face_pose
</UL>

<P><STRONG><a name="[314]"></a>kdp_app_crop_pad_hsn</STRONG> (Thumb, 336 bytes, Stack size 28 bytes, kdp_app_fid.o(i.kdp_app_crop_pad_hsn))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = kdp_app_crop_pad_hsn
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_nir_hsn_lv
</UL>

<P><STRONG><a name="[30e]"></a>kdp_app_pad_value</STRONG> (Thumb, 156 bytes, Stack size 20 bytes, kdp_app_fid.o(i.kdp_app_pad_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = kdp_app_pad_value
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_face_pose
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_nir_lv
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_nir_eye_lv
</UL>

<P><STRONG><a name="[278]"></a>kdp_app_pad_value_extend</STRONG> (Thumb, 192 bytes, Stack size 20 bytes, kdp_app_fid.o(i.kdp_app_pad_value_extend))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = kdp_app_pad_value_extend
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_lm
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_nir_face_seg_mask
</UL>

<P><STRONG><a name="[28e]"></a>kdp_crop_center_radius</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, kdp_app_fid.o(i.kdp_crop_center_radius))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = kdp_crop_center_radius &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_nir_lv
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_model_nir_hsn_lv
</UL>

<P><STRONG><a name="[262]"></a>round_f2int</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, kdp_app_fid.o(i.round_f2int))
<BR><BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_crop_box_one_side
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_crop_box_fl
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_crop_box_center
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdp_app_crop_align_to4
</UL>

<P><STRONG><a name="[181]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[14c]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[1dd]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1dc]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[66]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> printfa.o(i.__0sprintf)
<LI> printfa.o(i.__0vsprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
