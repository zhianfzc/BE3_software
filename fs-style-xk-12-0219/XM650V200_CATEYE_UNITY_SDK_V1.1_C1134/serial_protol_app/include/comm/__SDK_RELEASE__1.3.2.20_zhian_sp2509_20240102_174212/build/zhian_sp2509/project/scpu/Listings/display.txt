; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\display.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\display.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\config -I..\..\..\..\board -I..\..\..\..\common\include -I..\..\..\..\scpu\device\include\CMSIS -I..\..\..\..\scpu\device\include\Kneron -I..\..\..\..\scpu\framework\include -I..\..\..\..\scpu\framework\include\framework -I..\..\..\..\scpu\drivers\include -I..\..\..\..\scpu\drivers\include\media\touch -I..\..\..\..\scpu\drivers\include\media\flash -I..\..\..\..\scpu\lib\kdp_system\inc -I..\..\..\..\scpu\lib\kdp_application\include\ -I..\..\..\..\scpu\lib\kdp_application\base\ -I..\..\..\..\scpu\lib\kdp_application\misc -I..\..\..\..\scpu\lib\kdp_e2e_r1n1\include -I..\..\..\..\scpu\include -I..\..\..\..\scpu\middleware\ota -I..\..\..\..\scpu\middleware\comm -I..\..\..\..\scpu\middleware\kdp_comm -I..\..\..\..\scpu\share -I..\..\..\..\scpu\share\gui_lib -I..\..\user -I.\RTE\CMSIS -I.\RTE\_Target-scpu -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\RTX\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\Device\ARM\ARMCM4\Include -D__RTX -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DARMCM4_FP -D_RTE_ -DARM_MATH_CM4 -DTARGET_SCPU -DLOG_ENABLE -DKL520 -DHEAD_POSE_CHECK_PERCENT --omf_browse=.\objects\display.crf ..\..\..\..\scpu\drivers\media\display\display.c]
                          THUMB

                          AREA ||i.kdp_display_draw_bitmap||, CODE, READONLY, ALIGN=2

                  kdp_display_draw_bitmap PROC
;;;62     
;;;63     int kdp_display_draw_bitmap(u32 org_x, u32 org_y, u32 width, u32 height, void *buf)
000000  b57c              PUSH     {r2-r6,lr}
;;;64     {
000002  4605              MOV      r5,r0
;;;65         if (m_display_driver)
000004  4808              LDR      r0,|L1.40|
000006  9c06              LDR      r4,[sp,#0x18]
000008  6800              LDR      r0,[r0,#0]  ; m_display_driver
00000a  b150              CBZ      r0,|L1.34|
00000c  e9cd3400          STRD     r3,r4,[sp,#0]         ;64
;;;66         {
;;;67             m_display_driver->draw_bitmap(&m_display_driver->core_dev, org_x, org_y, width, height, buf);
000010  4613              MOV      r3,r2
000012  460a              MOV      r2,r1
000014  f8d040b4          LDR      r4,[r0,#0xb4]
000018  4629              MOV      r1,r5
00001a  3008              ADDS     r0,r0,#8
00001c  47a0              BLX      r4
;;;68         }
;;;69         else
;;;70         {
;;;71             return (-1);
;;;72         }
;;;73         
;;;74         return 0;
00001e  2000              MOVS     r0,#0
;;;75     }
000020  bd7c              POP      {r2-r6,pc}
                  |L1.34|
000022  f04f30ff          MOV      r0,#0xffffffff        ;71
000026  bd7c              POP      {r2-r6,pc}
;;;76     
                          ENDP

                  |L1.40|
                          DCD      m_display_driver

                          AREA ||i.kdp_display_draw_line||, CODE, READONLY, ALIGN=2

                  kdp_display_draw_line PROC
;;;48     
;;;49     int kdp_display_draw_line(u32 xs, u32 ys, u32 xe, u32 ye)
000000  b538              PUSH     {r3-r5,lr}
;;;50     {
000002  4605              MOV      r5,r0
;;;51         if (m_display_driver)
000004  4807              LDR      r0,|L2.36|
000006  6800              LDR      r0,[r0,#0]  ; m_display_driver
000008  b148              CBZ      r0,|L2.30|
;;;52         {
;;;53             m_display_driver->draw_line(&m_display_driver->core_dev, xs, ys, xe, ye);
00000a  9300              STR      r3,[sp,#0]
00000c  4613              MOV      r3,r2
00000e  460a              MOV      r2,r1
000010  f8d040ac          LDR      r4,[r0,#0xac]
000014  4629              MOV      r1,r5
000016  3008              ADDS     r0,r0,#8
000018  47a0              BLX      r4
;;;54         }
;;;55         else
;;;56         {
;;;57             return (-1);
;;;58         }
;;;59     
;;;60         return 0;
00001a  2000              MOVS     r0,#0
;;;61     }
00001c  bd38              POP      {r3-r5,pc}
                  |L2.30|
00001e  f04f30ff          MOV      r0,#0xffffffff        ;57
000022  bd38              POP      {r3-r5,pc}
;;;62     
                          ENDP

                  |L2.36|
                          DCD      m_display_driver

                          AREA ||i.kdp_display_draw_rect||, CODE, READONLY, ALIGN=2

                  kdp_display_draw_rect PROC
;;;76     
;;;77     int kdp_display_draw_rect(int x, int y, int width, int height)
000000  b538              PUSH     {r3-r5,lr}
;;;78     {
000002  4605              MOV      r5,r0
;;;79         if (m_display_driver)
000004  4807              LDR      r0,|L3.36|
000006  6800              LDR      r0,[r0,#0]  ; m_display_driver
000008  b148              CBZ      r0,|L3.30|
;;;80         {
;;;81             m_display_driver->draw_rect(&m_display_driver->core_dev, x, y, width, height);
00000a  9300              STR      r3,[sp,#0]
00000c  4613              MOV      r3,r2
00000e  460a              MOV      r2,r1
000010  f8d040a8          LDR      r4,[r0,#0xa8]
000014  4629              MOV      r1,r5
000016  3008              ADDS     r0,r0,#8
000018  47a0              BLX      r4
;;;82         }
;;;83         else
;;;84         {
;;;85             return (-1);
;;;86         }
;;;87         
;;;88         return 0;
00001a  2000              MOVS     r0,#0
;;;89     }
00001c  bd38              POP      {r3-r5,pc}
                  |L3.30|
00001e  f04f30ff          MOV      r0,#0xffffffff        ;85
000022  bd38              POP      {r3-r5,pc}
;;;90     
                          ENDP

                  |L3.36|
                          DCD      m_display_driver

                          AREA ||i.kdp_display_fill_rect||, CODE, READONLY, ALIGN=2

                  kdp_display_fill_rect PROC
;;;90     
;;;91     int kdp_display_fill_rect(u32 org_x, u32 org_y, u32 width, u32 height)
000000  b538              PUSH     {r3-r5,lr}
;;;92     {
000002  4605              MOV      r5,r0
;;;93         if (m_display_driver)
000004  4807              LDR      r0,|L4.36|
000006  6800              LDR      r0,[r0,#0]  ; m_display_driver
000008  b148              CBZ      r0,|L4.30|
;;;94         {
;;;95             m_display_driver->fill_rect(&m_display_driver->core_dev, org_x, org_y, width, height);
00000a  9300              STR      r3,[sp,#0]
00000c  4613              MOV      r3,r2
00000e  460a              MOV      r2,r1
000010  f8d040b0          LDR      r4,[r0,#0xb0]
000014  4629              MOV      r1,r5
000016  3008              ADDS     r0,r0,#8
000018  47a0              BLX      r4
;;;96         }
;;;97         else
;;;98         {
;;;99             return (-1);
;;;100        }
;;;101        
;;;102        return 0;
00001a  2000              MOVS     r0,#0
;;;103    }
00001c  bd38              POP      {r3-r5,pc}
                  |L4.30|
00001e  f04f30ff          MOV      r0,#0xffffffff        ;99
000022  bd38              POP      {r3-r5,pc}
;;;104    
                          ENDP

                  |L4.36|
                          DCD      m_display_driver

                          AREA ||i.kdp_display_fresh||, CODE, READONLY, ALIGN=2

                  kdp_display_fresh PROC
;;;116    
;;;117    int kdp_display_fresh(void)
000000  4804              LDR      r0,|L5.20|
;;;118    {
;;;119        if (m_display_driver)
000002  6800              LDR      r0,[r0,#0]  ; m_display_driver
000004  b118              CBZ      r0,|L5.14|
;;;120        {
;;;121            return m_display_driver->fresh(&m_display_driver->core_dev);
000006  f8d010b8          LDR      r1,[r0,#0xb8]
00000a  3008              ADDS     r0,r0,#8
00000c  4708              BX       r1
                  |L5.14|
;;;122        }
;;;123        else
;;;124        {
;;;125            return (-1);
00000e  f04f30ff          MOV      r0,#0xffffffff
;;;126        }
;;;127    }
000012  4770              BX       lr
                          ENDP

                  |L5.20|
                          DCD      m_display_driver

                          AREA ||i.kdp_display_get_buffer_addr||, CODE, READONLY, ALIGN=2

                  kdp_display_get_buffer_addr PROC
;;;12     
;;;13     u32 kdp_display_get_buffer_addr(void)
000000  4804              LDR      r0,|L6.20|
;;;14     {
;;;15         if (m_display_driver)
000002  6800              LDR      r0,[r0,#0]  ; m_display_driver
000004  2800              CMP      r0,#0                 ;14
000006  d003              BEQ      |L6.16|
;;;16         {
;;;17             return m_display_driver->get_buffer(&m_display_driver->core_dev);
000008  f8d01090          LDR      r1,[r0,#0x90]
00000c  3008              ADDS     r0,r0,#8
00000e  4708              BX       r1
                  |L6.16|
;;;18         }
;;;19     
;;;20         return 0;
;;;21     }
000010  4770              BX       lr
;;;22     
                          ENDP

000012  0000              DCW      0x0000
                  |L6.20|
                          DCD      m_display_driver

                          AREA ||i.kdp_display_get_device_id||, CODE, READONLY, ALIGN=2

                  kdp_display_get_device_id PROC
;;;104    
;;;105    int kdp_display_get_device_id(void)
000000  4804              LDR      r0,|L7.20|
;;;106    {
;;;107        if (m_display_driver)
000002  6800              LDR      r0,[r0,#0]  ; m_display_driver
000004  b110              CBZ      r0,|L7.12|
;;;108        {
;;;109            return (int)m_display_driver->display_id;
000006  f8b00078          LDRH     r0,[r0,#0x78]
;;;110        }
;;;111        else
;;;112        {
;;;113            return (int)0xFFFF;
;;;114        }
;;;115    }
00000a  4770              BX       lr
                  |L7.12|
00000c  f64f70ff          MOV      r0,#0xffff            ;113
000010  4770              BX       lr
;;;116    
                          ENDP

000012  0000              DCW      0x0000
                  |L7.20|
                          DCD      m_display_driver

                          AREA ||i.kdp_display_set_pen_rgb565||, CODE, READONLY, ALIGN=2

                  kdp_display_set_pen_rgb565 PROC
;;;34     
;;;35     int kdp_display_set_pen_rgb565(unsigned short color, unsigned int pen_width)
000000  b510              PUSH     {r4,lr}
;;;36     {
000002  4604              MOV      r4,r0
;;;37         if (m_display_driver)
000004  4806              LDR      r0,|L8.32|
000006  6800              LDR      r0,[r0,#0]  ; m_display_driver
000008  b138              CBZ      r0,|L8.26|
;;;38         {
;;;39             m_display_driver->set_pen(&m_display_driver->core_dev, color, pen_width);
00000a  460a              MOV      r2,r1
00000c  f8d030a4          LDR      r3,[r0,#0xa4]
000010  4621              MOV      r1,r4
000012  3008              ADDS     r0,r0,#8
000014  4798              BLX      r3
;;;40         }
;;;41         else
;;;42         {
;;;43             return (-1);
;;;44         }
;;;45     
;;;46         return 0;
000016  2000              MOVS     r0,#0
;;;47     }
000018  bd10              POP      {r4,pc}
                  |L8.26|
00001a  f04f30ff          MOV      r0,#0xffffffff        ;43
00001e  bd10              POP      {r4,pc}
;;;48     
                          ENDP

                  |L8.32|
                          DCD      m_display_driver

                          AREA ||i.kdp_display_set_source||, CODE, READONLY, ALIGN=2

                  kdp_display_set_source PROC
;;;22     
;;;23     int kdp_display_set_source(u32 src_addr, int src_dev_idx)
000000  b430              PUSH     {r4,r5}
;;;24     {
000002  4604              MOV      r4,r0
;;;25         if (m_display_driver)
000004  4806              LDR      r0,|L9.32|
000006  6800              LDR      r0,[r0,#0]  ; m_display_driver
000008  b130              CBZ      r0,|L9.24|
;;;26         {
;;;27             return m_display_driver->set_source(&m_display_driver->core_dev, src_addr, src_dev_idx);
00000a  460a              MOV      r2,r1
00000c  f8d030a0          LDR      r3,[r0,#0xa0]
000010  4621              MOV      r1,r4
000012  bc30              POP      {r4,r5}
000014  3008              ADDS     r0,r0,#8
000016  4718              BX       r3
                  |L9.24|
;;;28         }
;;;29         else
;;;30         {
;;;31             return (-1);
;;;32         }
;;;33     }
000018  bc30              POP      {r4,r5}
00001a  f04f30ff          MOV      r0,#0xffffffff        ;31
00001e  4770              BX       lr
;;;34     
                          ENDP

                  |L9.32|
                          DCD      m_display_driver

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\scpu\\drivers\\media\\display\\display.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_display_c_d8810ea6____REV16|
#line 208 "F:\\Users\\fu\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.9.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___9_display_c_d8810ea6____REV16| PROC
#line 209

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_display_c_d8810ea6____REVSH|
#line 223
|__asm___9_display_c_d8810ea6____REVSH| PROC
#line 224

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_display_c_d8810ea6____RRX|
#line 410
|__asm___9_display_c_d8810ea6____RRX| PROC
#line 411

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
