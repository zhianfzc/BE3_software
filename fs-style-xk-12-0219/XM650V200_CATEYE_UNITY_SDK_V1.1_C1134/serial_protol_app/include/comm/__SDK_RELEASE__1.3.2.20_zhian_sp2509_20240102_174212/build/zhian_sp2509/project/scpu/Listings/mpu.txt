; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\mpu.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\mpu.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\config -I..\..\..\..\board -I..\..\..\..\common\include -I..\..\..\..\scpu\device\include\CMSIS -I..\..\..\..\scpu\device\include\Kneron -I..\..\..\..\scpu\framework\include -I..\..\..\..\scpu\framework\include\framework -I..\..\..\..\scpu\drivers\include -I..\..\..\..\scpu\drivers\include\media\touch -I..\..\..\..\scpu\drivers\include\media\flash -I..\..\..\..\scpu\lib\kdp_system\inc -I..\..\..\..\scpu\lib\kdp_application\include\ -I..\..\..\..\scpu\lib\kdp_application\base\ -I..\..\..\..\scpu\lib\kdp_application\misc -I..\..\..\..\scpu\lib\kdp_e2e_r1n1\include -I..\..\..\..\scpu\include -I..\..\..\..\scpu\middleware\ota -I..\..\..\..\scpu\middleware\comm -I..\..\..\..\scpu\middleware\kdp_comm -I..\..\..\..\scpu\share -I..\..\..\..\scpu\share\gui_lib -I..\..\user -I.\RTE\CMSIS -I.\RTE\_Target-scpu -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\RTX\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\Device\ARM\ARMCM4\Include -D__RTX -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DARMCM4_FP -D_RTE_ -DARM_MATH_CM4 -DTARGET_SCPU -DLOG_ENABLE -DKL520 -DHEAD_POSE_CHECK_PERCENT --omf_browse=.\objects\mpu.crf ..\..\..\..\scpu\drivers\system\mpu.c]
                          THUMB

                          AREA ||i.ARM_MPU_Disable||, CODE, READONLY, ALIGN=2

                  ARM_MPU_Disable PROC
;;;203    */
;;;204    __STATIC_INLINE void ARM_MPU_Disable(void)
000000  f3bf8f5f          DMB      
;;;205    {
;;;206      __DMB();
;;;207    #ifdef SCB_SHCSR_MEMFAULTENA_Msk
;;;208      SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
000004  4807              LDR      r0,|L1.36|
000006  6801              LDR      r1,[r0,#0]
000008  f4213180          BIC      r1,r1,#0x10000
00000c  6001              STR      r1,[r0,#0]
;;;209    #endif
;;;210      MPU->CTRL  &= ~MPU_CTRL_ENABLE_Msk;
00000e  4805              LDR      r0,|L1.36|
000010  3070              ADDS     r0,r0,#0x70
000012  6801              LDR      r1,[r0,#0]
000014  f0210101          BIC      r1,r1,#1
000018  6001              STR      r1,[r0,#0]
;;;211      __DSB();
00001a  f3bf8f4f          DSB      
;;;212      __ISB();
00001e  f3bf8f6f          ISB      
;;;213    }
000022  4770              BX       lr
;;;214    
                          ENDP

                  |L1.36|
                          DCD      0xe000ed24

                          AREA ||i.ARM_MPU_Enable||, CODE, READONLY, ALIGN=2

                  ARM_MPU_Enable PROC
;;;190    */
;;;191    __STATIC_INLINE void ARM_MPU_Enable(uint32_t MPU_Control)
000000  f3bf8f5f          DMB      
;;;192    {
;;;193      __DMB();
;;;194      MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
000004  4907              LDR      r1,|L2.36|
000006  f0400001          ORR      r0,r0,#1
00000a  6008              STR      r0,[r1,#0]
;;;195    #ifdef SCB_SHCSR_MEMFAULTENA_Msk
;;;196      SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
00000c  4805              LDR      r0,|L2.36|
00000e  3870              SUBS     r0,r0,#0x70
000010  6801              LDR      r1,[r0,#0]
000012  f4413180          ORR      r1,r1,#0x10000
000016  6001              STR      r1,[r0,#0]
;;;197    #endif
;;;198      __DSB();
000018  f3bf8f4f          DSB      
;;;199      __ISB();
00001c  f3bf8f6f          ISB      
;;;200    }
000020  4770              BX       lr
;;;201    
                          ENDP

000022  0000              DCW      0x0000
                  |L2.36|
                          DCD      0xe000ed94

                          AREA ||i.ARM_MPU_SetRegionEx||, CODE, READONLY, ALIGN=2

                  ARM_MPU_SetRegionEx PROC
;;;238    */   
;;;239    __STATIC_INLINE void ARM_MPU_SetRegionEx(uint32_t rnr, uint32_t rbar, uint32_t rasr)
000000  4b03              LDR      r3,|L3.16|
;;;240    {
;;;241      MPU->RNR = rnr;
000002  6018              STR      r0,[r3,#0]
;;;242      MPU->RBAR = rbar;
000004  1d18              ADDS     r0,r3,#4
000006  6001              STR      r1,[r0,#0]
;;;243      MPU->RASR = rasr;
000008  1d00              ADDS     r0,r0,#4
00000a  6002              STR      r2,[r0,#0]
;;;244    }
00000c  4770              BX       lr
;;;245    
                          ENDP

00000e  0000              DCW      0x0000
                  |L3.16|
                          DCD      0xe000ed98

                          AREA ||i.mpu_config||, CODE, READONLY, ALIGN=2

                  mpu_config PROC
;;;33     
;;;34     void mpu_config(void)
000000  b510              PUSH     {r4,lr}
;;;35     {
;;;36         ARM_MPU_SetRegionEx(0, 0, MPU_NA | MPU_DEV_S | MPU_4GB | MPU_2pGB_SRD | MPU_XN | MPU_EN);
000002  2100              MOVS     r1,#0
000004  4a11              LDR      r2,|L4.76|
000006  4608              MOV      r0,r1
000008  f7fffffe          BL       ARM_MPU_SetRegionEx
;;;37         ARM_MPU_SetRegionEx(1, ROM_MEM_BASE, MPU_RO | MPU_CACHE | MPU_32KB | MPU_EN);
00000c  4a10              LDR      r2,|L4.80|
00000e  f04f5180          MOV      r1,#0x10000000
000012  2001              MOVS     r0,#1
000014  f7fffffe          BL       ARM_MPU_SetRegionEx
;;;38         ARM_MPU_SetRegionEx(2, SiRAM_MEM_BASE, MPU_RO | MPU_CACHE | MPU_128KB | MPU_96KB_SRD | MPU_EN);
000018  4a0e              LDR      r2,|L4.84|
00001a  490f              LDR      r1,|L4.88|
00001c  2002              MOVS     r0,#2
00001e  f7fffffe          BL       ARM_MPU_SetRegionEx
;;;39         ARM_MPU_SetRegionEx(3, SiRAM_MEM_BASE + SiRAM_MEM_VECTOR_OFFSET, MPU_RW | MPU_CACHE | MPU_1KB | MPU_EN);
000022  4a0e              LDR      r2,|L4.92|
000024  490e              LDR      r1,|L4.96|
000026  2003              MOVS     r0,#3
000028  f7fffffe          BL       ARM_MPU_SetRegionEx
;;;40         ARM_MPU_SetRegionEx(4, SdRAM_MEM_BASE, MPU_RW | MPU_CACHE | MPU_128KB | MPU_96KB_SRD | MPU_XN | MPU_EN);
00002c  4a0d              LDR      r2,|L4.100|
00002e  f04f5181          MOV      r1,#0x10200000
000032  2004              MOVS     r0,#4
000034  f7fffffe          BL       ARM_MPU_SetRegionEx
;;;41         ARM_MPU_SetRegionEx(5, DDR_MEM_BASE, MPU_RW | MPU_CACHE | MPU_64MB | MPU_XN | MPU_EN);
000038  4a0b              LDR      r2,|L4.104|
00003a  2005              MOVS     r0,#5
00003c  0751              LSLS     r1,r2,#29
00003e  f7fffffe          BL       ARM_MPU_SetRegionEx
;;;42         ARM_MPU_Enable(MPU_DEFAULT_MAP);  // enable the background mem map
000042  e8bd4010          POP      {r4,lr}
000046  2004              MOVS     r0,#4
000048  f7ffbffe          B.W      ARM_MPU_Enable
;;;43     //    readw(0x64001234);  // testing for memory fault only
;;;44     }
;;;45     
                          ENDP

                  |L4.76|
                          DCD      0x1005e03f
                  |L4.80|
                          DCD      0x060f001d
                  |L4.84|
                          DCD      0x060fc021
                  |L4.88|
                          DCD      0x10100000
                  |L4.92|
                          DCD      0x030f0013
                  |L4.96|
                          DCD      0x10102000
                  |L4.100|
                          DCD      0x130fc021
                  |L4.104|
                          DCD      0x130f0033

                          AREA ||i.mpu_niram_disable||, CODE, READONLY, ALIGN=2

                  mpu_niram_disable PROC
;;;52     
;;;53     void mpu_niram_disable(void)
000000  b510              PUSH     {r4,lr}
;;;54     {
;;;55         ARM_MPU_Disable();  // turn off mpu
000002  f7fffffe          BL       ARM_MPU_Disable
;;;56         ARM_MPU_SetRegionEx(6, NiRAM_MEM_BASE, MPU_RW | MPU_CACHE | MPU_64KB);
000006  4a05              LDR      r2,|L5.28|
000008  f04f5120          MOV      r1,#0x28000000
00000c  2006              MOVS     r0,#6
00000e  f7fffffe          BL       ARM_MPU_SetRegionEx
;;;57         ARM_MPU_Enable(MPU_DEFAULT_MAP);  // re-enable mpu
000012  e8bd4010          POP      {r4,lr}
000016  2004              MOVS     r0,#4
000018  f7ffbffe          B.W      ARM_MPU_Enable
;;;58     }
                          ENDP

                  |L5.28|
                          DCD      0x030f001e

                          AREA ||i.mpu_niram_enable||, CODE, READONLY, ALIGN=2

                  mpu_niram_enable PROC
;;;45     
;;;46     void mpu_niram_enable(void)
000000  b510              PUSH     {r4,lr}
;;;47     {
;;;48         ARM_MPU_Disable();  // turn off mpu
000002  f7fffffe          BL       ARM_MPU_Disable
;;;49         ARM_MPU_SetRegionEx(6, NiRAM_MEM_BASE, MPU_RW | MPU_CACHE | MPU_64KB | MPU_EN);
000006  4a05              LDR      r2,|L6.28|
000008  f04f5120          MOV      r1,#0x28000000
00000c  2006              MOVS     r0,#6
00000e  f7fffffe          BL       ARM_MPU_SetRegionEx
;;;50         ARM_MPU_Enable(MPU_DEFAULT_MAP);  // re-enable mpu
000012  e8bd4010          POP      {r4,lr}
000016  2004              MOVS     r0,#4
000018  f7ffbffe          B.W      ARM_MPU_Enable
;;;51     }
;;;52     
                          ENDP

                  |L6.28|
                          DCD      0x030f001f

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\scpu\\drivers\\system\\mpu.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_mpu_c_6355ac16____REV16|
#line 208 "F:\\Users\\fu\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.9.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___5_mpu_c_6355ac16____REV16| PROC
#line 209

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_mpu_c_6355ac16____REVSH|
#line 223
|__asm___5_mpu_c_6355ac16____REVSH| PROC
#line 224

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_mpu_c_6355ac16____RRX|
#line 410
|__asm___5_mpu_c_6355ac16____RRX| PROC
#line 411

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
