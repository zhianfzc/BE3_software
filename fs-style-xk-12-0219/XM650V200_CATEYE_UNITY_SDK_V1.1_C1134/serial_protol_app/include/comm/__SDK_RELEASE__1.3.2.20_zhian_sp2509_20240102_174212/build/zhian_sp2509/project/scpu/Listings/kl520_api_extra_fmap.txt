; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\kl520_api_extra_fmap.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\kl520_api_extra_fmap.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\config -I..\..\..\..\board -I..\..\..\..\common\include -I..\..\..\..\scpu\device\include\CMSIS -I..\..\..\..\scpu\device\include\Kneron -I..\..\..\..\scpu\framework\include -I..\..\..\..\scpu\framework\include\framework -I..\..\..\..\scpu\drivers\include -I..\..\..\..\scpu\drivers\include\media\touch -I..\..\..\..\scpu\drivers\include\media\flash -I..\..\..\..\scpu\lib\kdp_system\inc -I..\..\..\..\scpu\lib\kdp_application\include\ -I..\..\..\..\scpu\lib\kdp_application\base\ -I..\..\..\..\scpu\lib\kdp_application\misc -I..\..\..\..\scpu\lib\kdp_e2e_r1n1\include -I..\..\..\..\scpu\include -I..\..\..\..\scpu\middleware\ota -I..\..\..\..\scpu\middleware\comm -I..\..\..\..\scpu\middleware\kdp_comm -I..\..\..\..\scpu\share -I..\..\..\..\scpu\share\gui_lib -I..\..\user -I.\RTE\CMSIS -I.\RTE\_Target-scpu -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\RTX\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\Device\ARM\ARMCM4\Include -D__RTX -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DARMCM4_FP -D_RTE_ -DARM_MATH_CM4 -DTARGET_SCPU -DLOG_ENABLE -DKL520 -DHEAD_POSE_CHECK_PERCENT --omf_browse=.\objects\kl520_api_extra_fmap.crf ..\..\..\..\scpu\share\kl520_api_extra_fmap.c]
                          THUMB

                          AREA ||i.kl520_api_ap_com_import_fm_mode_split||, CODE, READONLY, ALIGN=2

                  kl520_api_ap_com_import_fm_mode_split PROC
;;;749    
;;;750    u16 kl520_api_ap_com_import_fm_mode_split(u16 nPkgIdx, u16 nPkgSize, u16 nTotPkgNum, u16 nStdPkgSize, 
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;751        u16 nTotPkgSize, u8* pDataAddr, BOOL nAfterChk)
;;;752    {
000004  468a              MOV      r10,r1
000006  e9dd5108          LDRD     r5,r1,[sp,#0x20]
;;;753        if (nTotPkgSize == (FM_SIZE_BYTE/4)) //fixed
00000a  f44f7980          MOV      r9,#0x100
00000e  f8dd8028          LDR      r8,[sp,#0x28]
000012  461e              MOV      r6,r3                 ;752
000014  4617              MOV      r7,r2                 ;752
000016  4604              MOV      r4,r0                 ;752
000018  454d              CMP      r5,r9
00001a  d147              BNE      |L1.172|
;;;754        {
;;;755            memcpy( (void*)(KDP_DDR_TEST_EXTRA_NIR_ADDR+nPkgIdx*nStdPkgSize), (void*)pDataAddr, nPkgSize );
00001c  f8df80b8          LDR      r8,|L1.216|
000020  4652              MOV      r2,r10
000022  fb048006          MLA      r0,r4,r6,r8
000026  f7fffffe          BL       __aeabi_memcpy
;;;756    
;;;757            if (( nPkgIdx == nTotPkgNum ) && (nTotPkgSize == (nPkgIdx*nStdPkgSize+nPkgSize)))
00002a  42bc              CMP      r4,r7
00002c  d151              BNE      |L1.210|
00002e  fb04a006          MLA      r0,r4,r6,r10
000032  4548              CMP      r0,r9
000034  d14d              BNE      |L1.210|
;;;758            {
;;;759                int div = 128;
000036  2280              MOVS     r2,#0x80
;;;760                u32 scale_u32 = 0x3f8a1a17;
;;;761                float scale = *(float *)(&scale_u32);
000038  eddf0a28          VLDR     s1,|L1.220|
;;;762    
;;;763                float *p_fr = (float *)KDP_DDR_MEM_START;
00003c  f04f44c0          MOV      r4,#0x60000000
;;;764                int8_t *p_src = (int8_t *)KDP_DDR_TEST_EXTRA_NIR_ADDR;
000040  4641              MOV      r1,r8
;;;765    
;;;766                for (int i = 0; i < nTotPkgSize; i++)
000042  2000              MOVS     r0,#0
                  |L1.68|
;;;767                {
;;;768                    p_fr[i] = ((float)(p_src[i]) / div) / scale;
000044  560b              LDRSB    r3,[r1,r0]
000046  ee003a10          VMOV     s0,r3
00004a  eb040380          ADD      r3,r4,r0,LSL #2
00004e  1c40              ADDS     r0,r0,#1
000050  eeb81ac0          VCVT.F32.S32 s2,s0
000054  ee002a10          VMOV     s0,r2
000058  42a8              CMP      r0,r5                 ;766
00005a  eef81ac0          VCVT.F32.S32 s3,s0
00005e  ee810a21          VDIV.F32 s0,s2,s3
000062  ee801a20          VDIV.F32 s2,s0,s1
000066  ed831a00          VSTR     s2,[r3,#0]
00006a  dbeb              BLT      |L1.68|
00006c  f05f0000          MOVS.W   r0,#0                 ;766
000070  ed9f0a1b          VLDR     s0,|L1.224|
                  |L1.116|
000074  eb040180          ADD      r1,r4,r0,LSL #2       ;766
000078  1c40              ADDS     r0,r0,#1              ;766
00007a  edd10a00          VLDR     s1,[r1,#0]            ;766
00007e  42a8              CMP      r0,r5                 ;766
000080  ee000aa0          VMLA.F32 s0,s1,s1              ;766
000084  dbf6              BLT      |L1.116|
000086  f7fffffe          BL       __hardfp_sqrtf
00008a  2000              MOVS     r0,#0                 ;766
                  |L1.140|
00008c  eb040180          ADD      r1,r4,r0,LSL #2       ;766
000090  1c40              ADDS     r0,r0,#1              ;766
000092  edd10a00          VLDR     s1,[r1,#0]            ;766
000096  42a8              CMP      r0,r5                 ;766
000098  ee801a80          VDIV.F32 s2,s1,s0              ;766
00009c  ed811a00          VSTR     s2,[r1,#0]            ;766
0000a0  dbf4              BLT      |L1.140|
;;;769                }
;;;770    
;;;771                NormalizeEmbedding_scpu(p_fr, nTotPkgSize);
;;;772    
;;;773                if (kdp_app_imp_fm_chk_int8((u32)(&p_fr[0])))
0000a2  4620              MOV      r0,r4
0000a4  f7fffffe          BL       kdp_app_imp_fm_chk_int8
0000a8  b988              CBNZ     r0,|L1.206|
0000aa  e00d              B        |L1.200|
                  |L1.172|
;;;774                    return IMP_SUCCESS;
;;;775                else
;;;776                    return IMP_FAIL_FM_ERR;
;;;777            }
;;;778            else
;;;779            {
;;;780                return IMP_CONTIUNOUS;
;;;781            }
;;;782        } else { //float
;;;783            memcpy( (void*)(KDP_DDR_MEM_START+nPkgIdx*nStdPkgSize), (void*)pDataAddr, nPkgSize );
0000ac  fb04f003          MUL      r0,r4,r3
0000b0  4652              MOV      r2,r10
0000b2  f10040c0          ADD      r0,r0,#0x60000000
0000b6  f7fffffe          BL       __aeabi_memcpy
;;;784    
;;;785            if ( nPkgIdx == nTotPkgNum )
0000ba  42bc              CMP      r4,r7
0000bc  d109              BNE      |L1.210|
;;;786            {
;;;787                if ( kdp_app_imp_fm_chk(nAfterChk) == TRUE )
0000be  4640              MOV      r0,r8
0000c0  f7fffffe          BL       kdp_app_imp_fm_chk
0000c4  2801              CMP      r0,#1
0000c6  d002              BEQ      |L1.206|
                  |L1.200|
;;;788                {
;;;789                    return IMP_SUCCESS;
;;;790                }
;;;791                else
;;;792                {
;;;793                    return IMP_FAIL_FM_ERR;
0000c8  2004              MOVS     r0,#4
                  |L1.202|
;;;794                }
;;;795            }
;;;796            else
;;;797            {
;;;798                return IMP_CONTIUNOUS;
;;;799            }
;;;800        }
;;;801    }
0000ca  e8bd87f0          POP      {r4-r10,pc}
                  |L1.206|
0000ce  2000              MOVS     r0,#0                 ;789
0000d0  e7fb              B        |L1.202|
                  |L1.210|
0000d2  2001              MOVS     r0,#1                 ;798
0000d4  e7f9              B        |L1.202|
;;;802    
                          ENDP

0000d6  0000              DCW      0x0000
                  |L1.216|
                          DCD      0x61f7ca00
                  |L1.220|
0000dc  3f8a1a17          DCFS     0x3f8a1a17 ; 1.0789211988449097
                  |L1.224|
0000e0  00000000          DCFS     0x00000000 ; 0

                          AREA ||i.kl520_api_ap_com_import_fm_n1_inject||, CODE, READONLY, ALIGN=1

                  kl520_api_ap_com_import_fm_n1_inject PROC
;;;807    
;;;808    void kl520_api_ap_com_import_fm_n1_inject(void)
000000  b510              PUSH     {r4,lr}
;;;809    {
;;;810        memcpy((void*)kdp_e2e_get_n1_fr(), (void*)KDP_DDR_MEM_START, KDP_DDR_TEST_NIR_FR_SIZE);
000002  f7fffffe          BL       kdp_e2e_get_n1_fr
000006  e8bd4010          POP      {r4,lr}
00000a  f44f6280          MOV      r2,#0x400
00000e  f04f41c0          MOV      r1,#0x60000000
000012  f7ffbffe          B.W      __aeabi_memcpy4
;;;811    }
;;;812    
                          ENDP


                          AREA ||i.kl520_api_ap_com_import_fm_r1_inject||, CODE, READONLY, ALIGN=1

                  kl520_api_ap_com_import_fm_r1_inject PROC
;;;802    
;;;803    void kl520_api_ap_com_import_fm_r1_inject(void)
000000  b510              PUSH     {r4,lr}
;;;804    {
;;;805        memcpy((void*)kdp_e2e_get_r1_fr(), (void*)KDP_DDR_MEM_START, KDP_DDR_TEST_RGB_FR_SIZE);
000002  f7fffffe          BL       kdp_e2e_get_r1_fr
000006  e8bd4010          POP      {r4,lr}
00000a  f44f6280          MOV      r2,#0x400
00000e  f04f41c0          MOV      r1,#0x60000000
000012  f7ffbffe          B.W      __aeabi_memcpy4
;;;806    }
;;;807    
                          ENDP


                          AREA ||i.kl520_api_ap_com_import_fm_r1n1_inject||, CODE, READONLY, ALIGN=2

                  kl520_api_ap_com_import_fm_r1n1_inject PROC
;;;812    
;;;813    void kl520_api_ap_com_import_fm_r1n1_inject(void)
000000  b510              PUSH     {r4,lr}
;;;814    {
;;;815        memcpy((void*)kdp_e2e_get_r1_fr(), (void*)KDP_DDR_MEM_START, KDP_DDR_TEST_RGB_FR_SIZE);
000002  f7fffffe          BL       kdp_e2e_get_r1_fr
000006  f44f6480          MOV      r4,#0x400
00000a  4622              MOV      r2,r4
00000c  f04f41c0          MOV      r1,#0x60000000
000010  f7fffffe          BL       __aeabi_memcpy4
;;;816        memcpy((void*)kdp_e2e_get_n1_fr(), (void*)(KDP_DDR_MEM_START+KDP_DDR_TEST_RGB_FR_SIZE), KDP_DDR_TEST_NIR_FR_SIZE);
000014  f7fffffe          BL       kdp_e2e_get_n1_fr
000018  4622              MOV      r2,r4
00001a  e8bd4010          POP      {r4,lr}
00001e  4901              LDR      r1,|L4.36|
000020  f7ffbffe          B.W      __aeabi_memcpy4
;;;817    }
;;;818    
                          ENDP

                  |L4.36|
                          DCD      0x60000400

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\scpu\\share\\kl520_api_extra_fmap.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___22_kl520_api_extra_fmap_c_db28f33a____REV16|
#line 208 "F:\\Users\\fu\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.9.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___22_kl520_api_extra_fmap_c_db28f33a____REV16| PROC
#line 209

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___22_kl520_api_extra_fmap_c_db28f33a____REVSH|
#line 223
|__asm___22_kl520_api_extra_fmap_c_db28f33a____REVSH| PROC
#line 224

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___22_kl520_api_extra_fmap_c_db28f33a____RRX|
#line 410
|__asm___22_kl520_api_extra_fmap_c_db28f33a____RRX| PROC
#line 411

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
