; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\rtx_evr.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\rtx_evr.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\config -I..\..\..\..\board -I..\..\..\..\common\include -I..\..\..\..\scpu\device\include\CMSIS -I..\..\..\..\scpu\device\include\Kneron -I..\..\..\..\scpu\framework\include -I..\..\..\..\scpu\framework\include\framework -I..\..\..\..\scpu\drivers\include -I..\..\..\..\scpu\drivers\include\media\touch -I..\..\..\..\scpu\drivers\include\media\flash -I..\..\..\..\scpu\lib\kdp_system\inc -I..\..\..\..\scpu\lib\kdp_application\include\ -I..\..\..\..\scpu\lib\kdp_application\base\ -I..\..\..\..\scpu\lib\kdp_application\misc -I..\..\..\..\scpu\lib\kdp_e2e_r1n1\include -I..\..\..\..\scpu\include -I..\..\..\..\scpu\middleware\ota -I..\..\..\..\scpu\middleware\comm -I..\..\..\..\scpu\middleware\kdp_comm -I..\..\..\..\scpu\share -I..\..\..\..\scpu\share\gui_lib -I..\..\user -I.\RTE\CMSIS -I.\RTE\_Target-scpu -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\RTOS2\RTX\Include -IF:\Users\fu\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\Device\ARM\ARMCM4\Include -D__RTX -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DARMCM4_FP -D_RTE_ -DARM_MATH_CM4 -DTARGET_SCPU -DLOG_ENABLE -DKL520 -DHEAD_POSE_CHECK_PERCENT --omf_browse=.\objects\rtx_evr.crf F:/Users/fu/AppData/Local/Arm/Packs/ARM/CMSIS/5.9.0/CMSIS/RTOS2/RTX/Source/rtx_evr.c]
                          THUMB

                          AREA ||i.EvrRtxDelay||, CODE, READONLY, ALIGN=1

                  EvrRtxDelay PROC
;;;1005   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_WAIT != 0) && !defined(EVR_RTX_DELAY_DISABLE))
;;;1006   __WEAK void EvrRtxDelay (uint32_t ticks) {
000000  4770              BX       lr
;;;1007   #if defined(RTE_Compiler_EventRecorder)
;;;1008     (void)EventRecord2(EvtRtxDelay, ticks, 0U);
;;;1009   #else
;;;1010     (void)ticks;
;;;1011   #endif
;;;1012   }
;;;1013   #endif
                          ENDP


                          AREA ||i.EvrRtxDelayCompleted||, CODE, READONLY, ALIGN=1

                  EvrRtxDelayCompleted PROC
;;;1045   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_WAIT != 0) && !defined(EVR_RTX_DELAY_COMPLETED_DISABLE))
;;;1046   __WEAK void EvrRtxDelayCompleted (osThreadId_t thread_id) {
000000  4770              BX       lr
;;;1047   #if defined(RTE_Compiler_EventRecorder)
;;;1048     (void)EventRecord2(EvtRtxDelayCompleted, (uint32_t)thread_id, 0U);
;;;1049   #else
;;;1050     (void)thread_id;
;;;1051   #endif
;;;1052   }
;;;1053   #endif
                          ENDP


                          AREA ||i.EvrRtxDelayError||, CODE, READONLY, ALIGN=1

                  EvrRtxDelayError PROC
;;;994    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_WAIT != 0) && !defined(EVR_RTX_DELAY_ERROR_DISABLE))
;;;995    __WEAK void EvrRtxDelayError (int32_t status) {
000000  4770              BX       lr
;;;996    #if defined(RTE_Compiler_EventRecorder)
;;;997      (void)EventRecord2(EvtRtxDelayError, (uint32_t)status, 0U);
;;;998    #else
;;;999      (void)status;
;;;1000   #endif
;;;1001   }
;;;1002   #endif
                          ENDP


                          AREA ||i.EvrRtxDelayStarted||, CODE, READONLY, ALIGN=1

                  EvrRtxDelayStarted PROC
;;;1025   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_WAIT != 0) && !defined(EVR_RTX_DELAY_STARTED_DISABLE))
;;;1026   __WEAK void EvrRtxDelayStarted (uint32_t ticks) {
000000  4770              BX       lr
;;;1027   #if defined(RTE_Compiler_EventRecorder)
;;;1028     (void)EventRecord2(EvtRtxDelayStarted, ticks, 0U);
;;;1029   #else
;;;1030     (void)ticks;
;;;1031   #endif
;;;1032   }
;;;1033   #endif
                          ENDP


                          AREA ||i.EvrRtxDelayUntil||, CODE, READONLY, ALIGN=1

                  EvrRtxDelayUntil PROC
;;;1015   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_WAIT != 0) && !defined(EVR_RTX_DELAY_UNTIL_DISABLE))
;;;1016   __WEAK void EvrRtxDelayUntil (uint32_t ticks) {
000000  4770              BX       lr
;;;1017   #if defined(RTE_Compiler_EventRecorder)
;;;1018     (void)EventRecord2(EvtRtxDelayUntil, ticks, 0U);
;;;1019   #else
;;;1020     (void)ticks;
;;;1021   #endif
;;;1022   }
;;;1023   #endif
                          ENDP


                          AREA ||i.EvrRtxDelayUntilStarted||, CODE, READONLY, ALIGN=1

                  EvrRtxDelayUntilStarted PROC
;;;1035   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_WAIT != 0) && !defined(EVR_RTX_DELAY_UNTIL_STARTED_DISABLE))
;;;1036   __WEAK void EvrRtxDelayUntilStarted (uint32_t ticks) {
000000  4770              BX       lr
;;;1037   #if defined(RTE_Compiler_EventRecorder)
;;;1038     (void)EventRecord2(EvtRtxDelayUntilStarted, ticks, 0U);
;;;1039   #else
;;;1040     (void)ticks;
;;;1041   #endif
;;;1042   }
;;;1043   #endif
                          ENDP


                          AREA ||i.EvrRtxEventFlagsClear||, CODE, READONLY, ALIGN=1

                  EvrRtxEventFlagsClear PROC
;;;1255   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_EVFLAGS != 0) && !defined(EVR_RTX_EVENT_FLAGS_CLEAR_DISABLE))
;;;1256   __WEAK void EvrRtxEventFlagsClear (osEventFlagsId_t ef_id, uint32_t flags) {
000000  4770              BX       lr
;;;1257   #if defined(RTE_Compiler_EventRecorder)
;;;1258     (void)EventRecord2(EvtRtxEventFlagsClear, (uint32_t)ef_id, flags);
;;;1259   #else
;;;1260     (void)ef_id;
;;;1261     (void)flags;
;;;1262   #endif
;;;1263   }
;;;1264   #endif
                          ENDP


                          AREA ||i.EvrRtxEventFlagsClearDone||, CODE, READONLY, ALIGN=1

                  EvrRtxEventFlagsClearDone PROC
;;;1266   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_EVFLAGS != 0) && !defined(EVR_RTX_EVENT_FLAGS_CLEAR_DONE_DISABLE))
;;;1267   __WEAK void EvrRtxEventFlagsClearDone (osEventFlagsId_t ef_id, uint32_t event_flags) {
000000  4770              BX       lr
;;;1268   #if defined(RTE_Compiler_EventRecorder)
;;;1269     (void)EventRecord2(EvtRtxEventFlagsClearDone, (uint32_t)ef_id, event_flags);
;;;1270   #else
;;;1271     (void)ef_id;
;;;1272     (void)event_flags;
;;;1273   #endif
;;;1274   }
;;;1275   #endif
                          ENDP


                          AREA ||i.EvrRtxEventFlagsCreated||, CODE, READONLY, ALIGN=1

                  EvrRtxEventFlagsCreated PROC
;;;1211   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_EVFLAGS != 0) && !defined(EVR_RTX_EVENT_FLAGS_CREATED_DISABLE))
;;;1212   __WEAK void EvrRtxEventFlagsCreated (osEventFlagsId_t ef_id, const char *name) {
000000  4770              BX       lr
;;;1213   #if defined(RTE_Compiler_EventRecorder)
;;;1214     (void)EventRecord2(EvtRtxEventFlagsCreated, (uint32_t)ef_id, (uint32_t)name);
;;;1215   #else
;;;1216     (void)ef_id;
;;;1217     (void)name;
;;;1218   #endif
;;;1219   }
;;;1220   #endif
                          ENDP


                          AREA ||i.EvrRtxEventFlagsDelete||, CODE, READONLY, ALIGN=1

                  EvrRtxEventFlagsDelete PROC
;;;1349   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_EVFLAGS != 0) && !defined(EVR_RTX_EVENT_FLAGS_DELETE_DISABLE))
;;;1350   __WEAK void EvrRtxEventFlagsDelete (osEventFlagsId_t ef_id) {
000000  4770              BX       lr
;;;1351   #if defined(RTE_Compiler_EventRecorder)
;;;1352     (void)EventRecord2(EvtRtxEventFlagsDelete, (uint32_t)ef_id, 0U);
;;;1353   #else
;;;1354     (void)ef_id;
;;;1355   #endif
;;;1356   }
;;;1357   #endif
                          ENDP


                          AREA ||i.EvrRtxEventFlagsDestroyed||, CODE, READONLY, ALIGN=1

                  EvrRtxEventFlagsDestroyed PROC
;;;1359   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_EVFLAGS != 0) && !defined(EVR_RTX_EVENT_FLAGS_DESTROYED_DISABLE))
;;;1360   __WEAK void EvrRtxEventFlagsDestroyed (osEventFlagsId_t ef_id) {
000000  4770              BX       lr
;;;1361   #if defined(RTE_Compiler_EventRecorder)
;;;1362     (void)EventRecord2(EvtRtxEventFlagsDestroyed, (uint32_t)ef_id, 0U);
;;;1363   #else
;;;1364     (void)ef_id;
;;;1365   #endif
;;;1366   }
;;;1367   #endif
                          ENDP


                          AREA ||i.EvrRtxEventFlagsError||, CODE, READONLY, ALIGN=1

                  EvrRtxEventFlagsError PROC
;;;1190   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_EVFLAGS != 0) && !defined(EVR_RTX_EVENT_FLAGS_ERROR_DISABLE))
;;;1191   __WEAK void EvrRtxEventFlagsError (osEventFlagsId_t ef_id, int32_t status) {
000000  4770              BX       lr
;;;1192   #if defined(RTE_Compiler_EventRecorder)
;;;1193     (void)EventRecord2(EvtRtxEventFlagsError, (uint32_t)ef_id, (uint32_t)status);
;;;1194   #else
;;;1195     (void)ef_id;
;;;1196     (void)status;
;;;1197   #endif
;;;1198   }
;;;1199   #endif
                          ENDP


                          AREA ||i.EvrRtxEventFlagsGet||, CODE, READONLY, ALIGN=1

                  EvrRtxEventFlagsGet PROC
;;;1277   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_EVFLAGS != 0) && !defined(EVR_RTX_EVENT_FLAGS_GET_DISABLE))
;;;1278   __WEAK void EvrRtxEventFlagsGet (osEventFlagsId_t ef_id, uint32_t event_flags) {
000000  4770              BX       lr
;;;1279   #if defined(RTE_Compiler_EventRecorder)
;;;1280     (void)EventRecord2(EvtRtxEventFlagsGet, (uint32_t)ef_id, event_flags);
;;;1281   #else
;;;1282     (void)ef_id;
;;;1283     (void)event_flags;
;;;1284   #endif
;;;1285   }
;;;1286   #endif
                          ENDP


                          AREA ||i.EvrRtxEventFlagsGetName||, CODE, READONLY, ALIGN=1

                  EvrRtxEventFlagsGetName PROC
;;;1222   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_EVFLAGS != 0) && !defined(EVR_RTX_EVENT_FLAGS_GET_NAME_DISABLE))
;;;1223   __WEAK void EvrRtxEventFlagsGetName (osEventFlagsId_t ef_id, const char *name) {
000000  4770              BX       lr
;;;1224   #if defined(RTE_Compiler_EventRecorder)
;;;1225     (void)EventRecord2(EvtRtxEventFlagsGetName, (uint32_t)ef_id, (uint32_t)name);
;;;1226   #else
;;;1227     (void)ef_id;
;;;1228     (void)name;
;;;1229   #endif
;;;1230   }
;;;1231   #endif
                          ENDP


                          AREA ||i.EvrRtxEventFlagsNew||, CODE, READONLY, ALIGN=1

                  EvrRtxEventFlagsNew PROC
;;;1201   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_EVFLAGS != 0) && !defined(EVR_RTX_EVENT_FLAGS_NEW_DISABLE))
;;;1202   __WEAK void EvrRtxEventFlagsNew (const osEventFlagsAttr_t *attr) {
000000  4770              BX       lr
;;;1203   #if defined(RTE_Compiler_EventRecorder)
;;;1204     (void)EventRecord2(EvtRtxEventFlagsNew, (uint32_t)attr, 0U);
;;;1205   #else
;;;1206     (void)attr;
;;;1207   #endif
;;;1208   }
;;;1209   #endif
                          ENDP


                          AREA ||i.EvrRtxEventFlagsSet||, CODE, READONLY, ALIGN=1

                  EvrRtxEventFlagsSet PROC
;;;1233   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_EVFLAGS != 0) && !defined(EVR_RTX_EVENT_FLAGS_SET_DISABLE))
;;;1234   __WEAK void EvrRtxEventFlagsSet (osEventFlagsId_t ef_id, uint32_t flags) {
000000  4770              BX       lr
;;;1235   #if defined(RTE_Compiler_EventRecorder)
;;;1236     (void)EventRecord2(EvtRtxEventFlagsSet, (uint32_t)ef_id, flags);
;;;1237   #else
;;;1238     (void)ef_id;
;;;1239     (void)flags;
;;;1240   #endif
;;;1241   }
;;;1242   #endif
                          ENDP


                          AREA ||i.EvrRtxEventFlagsSetDone||, CODE, READONLY, ALIGN=1

                  EvrRtxEventFlagsSetDone PROC
;;;1244   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_EVFLAGS != 0) && !defined(EVR_RTX_EVENT_FLAGS_SET_DONE_DISABLE))
;;;1245   __WEAK void EvrRtxEventFlagsSetDone (osEventFlagsId_t ef_id, uint32_t event_flags) {
000000  4770              BX       lr
;;;1246   #if defined(RTE_Compiler_EventRecorder)
;;;1247     (void)EventRecord2(EvtRtxEventFlagsSetDone, (uint32_t)ef_id, event_flags);
;;;1248   #else
;;;1249     (void)ef_id;
;;;1250     (void)event_flags;
;;;1251   #endif
;;;1252   }
;;;1253   #endif
                          ENDP


                          AREA ||i.EvrRtxEventFlagsWait||, CODE, READONLY, ALIGN=1

                  EvrRtxEventFlagsWait PROC
;;;1288   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_EVFLAGS != 0) && !defined(EVR_RTX_EVENT_FLAGS_WAIT_DISABLE))
;;;1289   __WEAK void EvrRtxEventFlagsWait (osEventFlagsId_t ef_id, uint32_t flags, uint32_t options, uint32_t timeout) {
000000  4770              BX       lr
;;;1290   #if defined(RTE_Compiler_EventRecorder)
;;;1291     (void)EventRecord4(EvtRtxEventFlagsWait, (uint32_t)ef_id, flags, options, timeout);
;;;1292   #else
;;;1293     (void)ef_id;
;;;1294     (void)flags;
;;;1295     (void)options;
;;;1296     (void)timeout;
;;;1297   #endif
;;;1298   }
;;;1299   #endif
                          ENDP


                          AREA ||i.EvrRtxEventFlagsWaitCompleted||, CODE, READONLY, ALIGN=1

                  EvrRtxEventFlagsWaitCompleted PROC
;;;1324   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_EVFLAGS != 0) && !defined(EVR_RTX_EVENT_FLAGS_WAIT_COMPLETED_DISABLE))
;;;1325   __WEAK void EvrRtxEventFlagsWaitCompleted (osEventFlagsId_t ef_id, uint32_t flags, uint32_t options, uint32_t event_flags) {
000000  4770              BX       lr
;;;1326   #if defined(RTE_Compiler_EventRecorder)
;;;1327     (void)EventRecord4(EvtRtxEventFlagsWaitCompleted, (uint32_t)ef_id, flags, options, event_flags);
;;;1328   #else
;;;1329     (void)ef_id;
;;;1330     (void)flags;
;;;1331     (void)options;
;;;1332     (void)event_flags;
;;;1333   #endif
;;;1334   }
;;;1335   #endif
                          ENDP


                          AREA ||i.EvrRtxEventFlagsWaitNotCompleted||, CODE, READONLY, ALIGN=1

                  EvrRtxEventFlagsWaitNotCompleted PROC
;;;1337   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_EVFLAGS != 0) && !defined(EVR_RTX_EVENT_FLAGS_WAIT_NOT_COMPLETED_DISABLE))
;;;1338   __WEAK void EvrRtxEventFlagsWaitNotCompleted (osEventFlagsId_t ef_id, uint32_t flags, uint32_t options) {
000000  4770              BX       lr
;;;1339   #if defined(RTE_Compiler_EventRecorder)
;;;1340     (void)EventRecord4(EvtRtxEventFlagsWaitNotCompleted, (uint32_t)ef_id, flags, options, 0U);
;;;1341   #else
;;;1342     (void)ef_id;
;;;1343     (void)flags;
;;;1344     (void)options;
;;;1345   #endif
;;;1346   }
;;;1347   #endif
                          ENDP


                          AREA ||i.EvrRtxEventFlagsWaitPending||, CODE, READONLY, ALIGN=1

                  EvrRtxEventFlagsWaitPending PROC
;;;1301   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_EVFLAGS != 0) && !defined(EVR_RTX_EVENT_FLAGS_WAIT_PENDING_DISABLE))
;;;1302   __WEAK void EvrRtxEventFlagsWaitPending (osEventFlagsId_t ef_id, uint32_t flags, uint32_t options, uint32_t timeout) {
000000  4770              BX       lr
;;;1303   #if defined(RTE_Compiler_EventRecorder)
;;;1304     (void)EventRecord4(EvtRtxEventFlagsWaitPending, (uint32_t)ef_id, flags, options, timeout);
;;;1305   #else
;;;1306     (void)ef_id;
;;;1307     (void)flags;
;;;1308     (void)options;
;;;1309     (void)timeout;
;;;1310   #endif
;;;1311   }
;;;1312   #endif
                          ENDP


                          AREA ||i.EvrRtxEventFlagsWaitTimeout||, CODE, READONLY, ALIGN=1

                  EvrRtxEventFlagsWaitTimeout PROC
;;;1314   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_EVFLAGS != 0) && !defined(EVR_RTX_EVENT_FLAGS_WAIT_TIMEOUT_DISABLE))
;;;1315   __WEAK void EvrRtxEventFlagsWaitTimeout (osEventFlagsId_t ef_id) {
000000  4770              BX       lr
;;;1316   #if defined(RTE_Compiler_EventRecorder)
;;;1317     (void)EventRecord2(EvtRtxEventFlagsWaitTimeout, (uint32_t)ef_id, 0U);
;;;1318   #else
;;;1319     (void)ef_id;
;;;1320   #endif
;;;1321   }
;;;1322   #endif
                          ENDP


                          AREA ||i.EvrRtxKernelError||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelError PROC
;;;314    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_ERROR_DISABLE))
;;;315    __WEAK void EvrRtxKernelError (int32_t status) {
000000  4770              BX       lr
;;;316    #if defined(RTE_Compiler_EventRecorder)
;;;317      (void)EventRecord2(EvtRtxKernelError, (uint32_t)status, 0U); 
;;;318    #else
;;;319      (void)status;
;;;320    #endif
;;;321    }
;;;322    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelErrorNotify||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelErrorNotify PROC
;;;535    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_ERROR_NOTIFY_DISABLE))
;;;536    __WEAK void EvrRtxKernelErrorNotify (uint32_t code, void *object_id) {
000000  4770              BX       lr
;;;537    #if defined(RTE_Compiler_EventRecorder)
;;;538      (void)EventRecord2(EvtRtxKernelErrorNotify, code, (uint32_t)object_id);
;;;539    #else
;;;540      (void)code;
;;;541      (void)object_id;
;;;542    #endif
;;;543    }
;;;544    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelGetInfo||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelGetInfo PROC
;;;342    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_GET_INFO_DISABLE))
;;;343    __WEAK void EvrRtxKernelGetInfo (osVersion_t *version, char *id_buf, uint32_t id_size) {
000000  4770              BX       lr
;;;344    #if defined(RTE_Compiler_EventRecorder)
;;;345      (void)EventRecord4(EvtRtxKernelGetInfo, (uint32_t)version, (uint32_t)id_buf, id_size, 0U);
;;;346    #else
;;;347      (void)version;
;;;348      (void)id_buf;
;;;349      (void)id_size;
;;;350    #endif
;;;351    }
;;;352    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelGetState||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelGetState PROC
;;;371    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_GET_STATE_DISABLE))
;;;372    __WEAK void EvrRtxKernelGetState (osKernelState_t state) {
000000  4770              BX       lr
;;;373    #if defined(RTE_Compiler_EventRecorder)
;;;374      (void)EventRecord2(EvtRtxKernelGetState, (uint32_t)state, 0U);
;;;375    #else
;;;376      (void)state;
;;;377    #endif
;;;378    }
;;;379    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelGetSysTimerCount||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelGetSysTimerCount PROC
;;;515    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_GET_SYS_TIMER_COUNT_DISABLE))
;;;516    __WEAK void EvrRtxKernelGetSysTimerCount (uint32_t count) {
000000  4770              BX       lr
;;;517    #if defined(RTE_Compiler_EventRecorder)
;;;518      (void)EventRecord2(EvtRtxKernelGetSysTimerCount, count, 0U);
;;;519    #else
;;;520      (void)count;
;;;521    #endif
;;;522    }
;;;523    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelGetSysTimerFreq||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelGetSysTimerFreq PROC
;;;525    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_GET_SYS_TIMER_FREQ_DISABLE))
;;;526    __WEAK void EvrRtxKernelGetSysTimerFreq (uint32_t freq) {
000000  4770              BX       lr
;;;527    #if defined(RTE_Compiler_EventRecorder)
;;;528      (void)EventRecord2(EvtRtxKernelGetSysTimerFreq, freq, 0U);
;;;529    #else
;;;530      (void)freq;
;;;531    #endif
;;;532    }
;;;533    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelGetTickCount||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelGetTickCount PROC
;;;495    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_GET_TICK_COUNT_DISABLE))
;;;496    __WEAK void EvrRtxKernelGetTickCount (uint32_t count) {
000000  4770              BX       lr
;;;497    #if defined(RTE_Compiler_EventRecorder)
;;;498      (void)EventRecord2(EvtRtxKernelGetTickCount, count, 0U);
;;;499    #else
;;;500      (void)count;
;;;501    #endif
;;;502    }
;;;503    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelGetTickFreq||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelGetTickFreq PROC
;;;505    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_GET_TICK_FREQ_DISABLE))
;;;506    __WEAK void EvrRtxKernelGetTickFreq (uint32_t freq) {
000000  4770              BX       lr
;;;507    #if defined(RTE_Compiler_EventRecorder)
;;;508      (void)EventRecord2(EvtRtxKernelGetTickFreq, freq, 0U);
;;;509    #else
;;;510      (void)freq;
;;;511    #endif
;;;512    }
;;;513    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelInfoRetrieved||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelInfoRetrieved PROC
;;;354    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_INFO_RETRIEVED_DISABLE))
;;;355    __WEAK void EvrRtxKernelInfoRetrieved (const osVersion_t *version, const char *id_buf, uint32_t id_size) {
000000  4770              BX       lr
;;;356    #if defined(RTE_Compiler_EventRecorder)
;;;357      if (version != NULL) {
;;;358        (void)EventRecord2(EvtRtxKernelInfoRetrieved, version->api, version->kernel);
;;;359      }
;;;360      if (id_buf != NULL) {
;;;361        (void)EventRecordData(EvtRtxKernelInfoRetrieved_Detail, id_buf, id_size);
;;;362      }
;;;363    #else
;;;364      (void)version;
;;;365      (void)id_buf;
;;;366      (void)id_size;
;;;367    #endif
;;;368    }
;;;369    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelInitialize||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelInitialize PROC
;;;324    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_INITIALIZE_DISABLE))
;;;325    __WEAK void EvrRtxKernelInitialize (void) {
000000  4770              BX       lr
;;;326    #if defined(RTE_Compiler_EventRecorder)
;;;327      (void)EventRecord2(EvtRtxKernelInitialize, 0U, 0U);
;;;328    #else
;;;329    #endif
;;;330    }
;;;331    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelInitialized||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelInitialized PROC
;;;333    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_INITIALIZED_DISABLE))
;;;334    __WEAK void EvrRtxKernelInitialized (void) {
000000  4770              BX       lr
;;;335    #if defined(RTE_Compiler_EventRecorder)
;;;336      (void)EventRecord2(EvtRtxKernelInitialized, 0U, 0U);
;;;337    #else
;;;338    #endif
;;;339    }
;;;340    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelLock||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelLock PROC
;;;399    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_LOCK_DISABLE))
;;;400    __WEAK void EvrRtxKernelLock (void) {
000000  4770              BX       lr
;;;401    #if defined(RTE_Compiler_EventRecorder)
;;;402      (void)EventRecord2(EvtRtxKernelLock, 0U, 0U);
;;;403    #else
;;;404    #endif
;;;405    }
;;;406    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelLockRestored||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelLockRestored PROC
;;;447    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_LOCK_RESTORED_DISABLE))
;;;448    __WEAK void EvrRtxKernelLockRestored (int32_t lock) {
000000  4770              BX       lr
;;;449    #if defined(RTE_Compiler_EventRecorder)
;;;450      (void)EventRecord2(EvtRtxKernelLockRestored, (uint32_t)lock, 0U);
;;;451    #else
;;;452      (void)lock;
;;;453    #endif
;;;454    }
;;;455    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelLocked||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelLocked PROC
;;;408    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_LOCKED_DISABLE))
;;;409    __WEAK void EvrRtxKernelLocked (int32_t lock) {
000000  4770              BX       lr
;;;410    #if defined(RTE_Compiler_EventRecorder)
;;;411      (void)EventRecord2(EvtRtxKernelLocked, (uint32_t)lock, 0U);
;;;412    #else
;;;413      (void)lock;
;;;414    #endif
;;;415    }
;;;416    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelRestoreLock||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelRestoreLock PROC
;;;437    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_RESTORE_LOCK_DISABLE))
;;;438    __WEAK void EvrRtxKernelRestoreLock (int32_t lock) {
000000  4770              BX       lr
;;;439    #if defined(RTE_Compiler_EventRecorder)
;;;440      (void)EventRecord2(EvtRtxKernelRestoreLock, (uint32_t)lock, 0U);
;;;441    #else
;;;442      (void)lock;
;;;443    #endif
;;;444    }
;;;445    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelResume||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelResume PROC
;;;476    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_RESUME_DISABLE))
;;;477    __WEAK void EvrRtxKernelResume (uint32_t sleep_ticks) {
000000  4770              BX       lr
;;;478    #if defined(RTE_Compiler_EventRecorder)
;;;479      (void)EventRecord2(EvtRtxKernelResume, sleep_ticks, 0U);
;;;480    #else
;;;481      (void)sleep_ticks;
;;;482    #endif
;;;483    }
;;;484    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelResumed||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelResumed PROC
;;;486    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_RESUMED_DISABLE))
;;;487    __WEAK void EvrRtxKernelResumed (void) {
000000  4770              BX       lr
;;;488    #if defined(RTE_Compiler_EventRecorder)
;;;489      (void)EventRecord2(EvtRtxKernelResumed, 0U, 0U);
;;;490    #else
;;;491    #endif
;;;492    }
;;;493    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelStart||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelStart PROC
;;;381    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_START_DISABLE))
;;;382    __WEAK void EvrRtxKernelStart (void) {
000000  4770              BX       lr
;;;383    #if defined(RTE_Compiler_EventRecorder)
;;;384      (void)EventRecord2(EvtRtxKernelStart, 0U, 0U);
;;;385    #else
;;;386    #endif
;;;387    }
;;;388    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelStarted||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelStarted PROC
;;;390    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_STARTED_DISABLE))
;;;391    __WEAK void EvrRtxKernelStarted (void) {
000000  4770              BX       lr
;;;392    #if defined(RTE_Compiler_EventRecorder)
;;;393      (void)EventRecord2(EvtRtxKernelStarted, 0U, 0U);
;;;394    #else
;;;395    #endif
;;;396    }
;;;397    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelSuspend||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelSuspend PROC
;;;457    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_SUSPEND_DISABLE))
;;;458    __WEAK void EvrRtxKernelSuspend (void) {
000000  4770              BX       lr
;;;459    #if defined(RTE_Compiler_EventRecorder)
;;;460      (void)EventRecord2(EvtRtxKernelSuspend, 0U, 0U);
;;;461    #else
;;;462    #endif
;;;463    }
;;;464    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelSuspended||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelSuspended PROC
;;;466    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_SUSPENDED_DISABLE))
;;;467    __WEAK void EvrRtxKernelSuspended (uint32_t sleep_ticks) {
000000  4770              BX       lr
;;;468    #if defined(RTE_Compiler_EventRecorder)
;;;469      (void)EventRecord2(EvtRtxKernelSuspended, sleep_ticks, 0U);
;;;470    #else
;;;471      (void)sleep_ticks;
;;;472    #endif
;;;473    }
;;;474    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelUnlock||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelUnlock PROC
;;;418    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_UNLOCK_DISABLE))
;;;419    __WEAK void EvrRtxKernelUnlock (void) {
000000  4770              BX       lr
;;;420    #if defined(RTE_Compiler_EventRecorder)
;;;421      (void)EventRecord2(EvtRtxKernelUnlock, 0U, 0U);
;;;422    #else
;;;423    #endif
;;;424    }
;;;425    #endif
                          ENDP


                          AREA ||i.EvrRtxKernelUnlocked||, CODE, READONLY, ALIGN=1

                  EvrRtxKernelUnlocked PROC
;;;427    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_KERNEL != 0) && !defined(EVR_RTX_KERNEL_UNLOCKED_DISABLE))
;;;428    __WEAK void EvrRtxKernelUnlocked (int32_t lock) {
000000  4770              BX       lr
;;;429    #if defined(RTE_Compiler_EventRecorder)
;;;430      (void)EventRecord2(EvtRtxKernelUnlocked, (uint32_t)lock, 0U);
;;;431    #else
;;;432      (void)lock;
;;;433    #endif
;;;434    }
;;;435    #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryAlloc||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryAlloc PROC
;;;250    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMORY != 0) && !defined(EVR_RTX_MEMORY_ALLOC_DISABLE))
;;;251    __WEAK void EvrRtxMemoryAlloc (void *mem, uint32_t size, uint32_t type, void *block) {
000000  4770              BX       lr
;;;252    #if defined(RTE_Compiler_EventRecorder)
;;;253      (void)EventRecord4(EvtRtxMemoryAlloc, (uint32_t)mem, size, type, (uint32_t)block);
;;;254    #else
;;;255      (void)mem;
;;;256      (void)size;
;;;257      (void)type;
;;;258      (void)block;
;;;259    #endif
;;;260    }
;;;261    #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryBlockAlloc||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryBlockAlloc PROC
;;;288    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMORY != 0) && !defined(EVR_RTX_MEMORY_BLOCK_ALLOC_DISABLE))
;;;289    __WEAK void EvrRtxMemoryBlockAlloc (osRtxMpInfo_t *mp_info, void *block) {
000000  4770              BX       lr
;;;290    #if defined(RTE_Compiler_EventRecorder)
;;;291      (void)EventRecord2(EvtRtxMemoryBlockAlloc, (uint32_t)mp_info, (uint32_t)block);
;;;292    #else
;;;293      (void)mp_info;
;;;294      (void)block;
;;;295    #endif
;;;296    }
;;;297    #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryBlockFree||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryBlockFree PROC
;;;299    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMORY != 0) && !defined(EVR_RTX_MEMORY_BLOCK_FREE_DISABLE))
;;;300    __WEAK void EvrRtxMemoryBlockFree (osRtxMpInfo_t *mp_info, void *block, int32_t status) {
000000  4770              BX       lr
;;;301    #if defined(RTE_Compiler_EventRecorder)
;;;302      (void)EventRecord4(EvtRtxMemoryBlockFree, (uint32_t)mp_info, (uint32_t)block, (uint32_t)status, 0U);
;;;303    #else
;;;304      (void)mp_info;
;;;305      (void)block;
;;;306      (void)status;
;;;307    #endif
;;;308    }
;;;309    #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryBlockInit||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryBlockInit PROC
;;;275    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMORY != 0) && !defined(EVR_RTX_MEMORY_BLOCK_INIT_DISABLE))
;;;276    __WEAK void EvrRtxMemoryBlockInit (osRtxMpInfo_t *mp_info, uint32_t block_count, uint32_t block_size, void *block_mem) {
000000  4770              BX       lr
;;;277    #if defined(RTE_Compiler_EventRecorder)
;;;278      (void)EventRecord4(EvtRtxMemoryBlockInit, (uint32_t)mp_info, block_count, block_size, (uint32_t)block_mem);
;;;279    #else
;;;280      (void)mp_info;
;;;281      (void)block_count;
;;;282      (void)block_size;
;;;283      (void)block_mem;
;;;284    #endif
;;;285    }
;;;286    #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryFree||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryFree PROC
;;;263    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMORY != 0) && !defined(EVR_RTX_MEMORY_FREE_DISABLE))
;;;264    __WEAK void EvrRtxMemoryFree (void *mem, void *block, uint32_t result) {
000000  4770              BX       lr
;;;265    #if defined(RTE_Compiler_EventRecorder)
;;;266      (void)EventRecord4(EvtRtxMemoryFree, (uint32_t)mem, (uint32_t)block, result, 0U);
;;;267    #else
;;;268      (void)mem;
;;;269      (void)block;
;;;270      (void)result;
;;;271    #endif
;;;272    }
;;;273    #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryInit||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryInit PROC
;;;238    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMORY != 0) && !defined(EVR_RTX_MEMORY_INIT_DISABLE))
;;;239    __WEAK void EvrRtxMemoryInit (void *mem, uint32_t size, uint32_t result) {
000000  4770              BX       lr
;;;240    #if defined(RTE_Compiler_EventRecorder)
;;;241      (void)EventRecord4(EvtRtxMemoryInit, (uint32_t)mem, size, result, 0U);
;;;242    #else
;;;243      (void)mem;
;;;244      (void)size;
;;;245      (void)result;
;;;246    #endif
;;;247    }
;;;248    #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolAlloc||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolAlloc PROC
;;;1721   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_ALLOC_DISABLE))
;;;1722   __WEAK void EvrRtxMemoryPoolAlloc (osMemoryPoolId_t mp_id, uint32_t timeout) {
000000  4770              BX       lr
;;;1723   #if defined(RTE_Compiler_EventRecorder)
;;;1724     (void)EventRecord2(EvtRtxMemoryPoolAlloc, (uint32_t)mp_id, timeout);
;;;1725   #else
;;;1726     (void)mp_id;
;;;1727     (void)timeout;
;;;1728   #endif
;;;1729   }
;;;1730   #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolAllocFailed||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolAllocFailed PROC
;;;1764   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_ALLOC_FAILED_DISABLE))
;;;1765   __WEAK void EvrRtxMemoryPoolAllocFailed (osMemoryPoolId_t mp_id) {
000000  4770              BX       lr
;;;1766   #if defined(RTE_Compiler_EventRecorder)
;;;1767     (void)EventRecord2(EvtRtxMemoryPoolAllocFailed, (uint32_t)mp_id, 0U);
;;;1768   #else
;;;1769     (void)mp_id;
;;;1770   #endif
;;;1771   }
;;;1772   #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolAllocPending||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolAllocPending PROC
;;;1732   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_ALLOC_PENDING_DISABLE))
;;;1733   __WEAK void EvrRtxMemoryPoolAllocPending (osMemoryPoolId_t mp_id, uint32_t timeout) {
000000  4770              BX       lr
;;;1734   #if defined(RTE_Compiler_EventRecorder)
;;;1735     (void)EventRecord2(EvtRtxMemoryPoolAllocPending, (uint32_t)mp_id, timeout);
;;;1736   #else
;;;1737     (void)mp_id;
;;;1738     (void)timeout;
;;;1739   #endif
;;;1740   }
;;;1741   #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolAllocTimeout||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolAllocTimeout PROC
;;;1743   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_ALLOC_TIMEOUT_DISABLE))
;;;1744   __WEAK void EvrRtxMemoryPoolAllocTimeout (osMemoryPoolId_t mp_id) {
000000  4770              BX       lr
;;;1745   #if defined(RTE_Compiler_EventRecorder)
;;;1746     (void)EventRecord2(EvtRtxMemoryPoolAllocTimeout, (uint32_t)mp_id, 0U);
;;;1747   #else
;;;1748     (void)mp_id;
;;;1749   #endif
;;;1750   }
;;;1751   #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolAllocated||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolAllocated PROC
;;;1753   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_ALLOCATED_DISABLE))
;;;1754   __WEAK void EvrRtxMemoryPoolAllocated (osMemoryPoolId_t mp_id, void *block) {
000000  4770              BX       lr
;;;1755   #if defined(RTE_Compiler_EventRecorder)
;;;1756     (void)EventRecord2(EvtRtxMemoryPoolAllocated, (uint32_t)mp_id, (uint32_t)block);
;;;1757   #else
;;;1758     (void)mp_id;
;;;1759     (void)block;
;;;1760   #endif
;;;1761   }
;;;1762   #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolCreated||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolCreated PROC
;;;1699   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_CREATED_DISABLE))
;;;1700   __WEAK void EvrRtxMemoryPoolCreated (osMemoryPoolId_t mp_id, const char *name) {
000000  4770              BX       lr
;;;1701   #if defined(RTE_Compiler_EventRecorder)
;;;1702     (void)EventRecord2(EvtRtxMemoryPoolCreated, (uint32_t)mp_id, (uint32_t)name);
;;;1703   #else
;;;1704     (void)mp_id;
;;;1705     (void)name;
;;;1706   #endif
;;;1707   }
;;;1708   #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolDeallocated||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolDeallocated PROC
;;;1785   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_DEALLOCATED_DISABLE))
;;;1786   __WEAK void EvrRtxMemoryPoolDeallocated (osMemoryPoolId_t mp_id, void *block) {
000000  4770              BX       lr
;;;1787   #if defined(RTE_Compiler_EventRecorder)
;;;1788     (void)EventRecord2(EvtRtxMemoryPoolDeallocated, (uint32_t)mp_id, (uint32_t)block);
;;;1789   #else
;;;1790     (void)mp_id;
;;;1791     (void)block;
;;;1792   #endif
;;;1793   }
;;;1794   #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolDelete||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolDelete PROC
;;;1851   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_DELETE_DISABLE))
;;;1852   __WEAK void EvrRtxMemoryPoolDelete (osMemoryPoolId_t mp_id) {
000000  4770              BX       lr
;;;1853   #if defined(RTE_Compiler_EventRecorder)
;;;1854     (void)EventRecord2(EvtRtxMemoryPoolDelete, (uint32_t)mp_id, 0U);
;;;1855   #else
;;;1856     (void)mp_id;
;;;1857   #endif
;;;1858   }
;;;1859   #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolDestroyed||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolDestroyed PROC
;;;1861   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_DESTROYED_DISABLE))
;;;1862   __WEAK void EvrRtxMemoryPoolDestroyed (osMemoryPoolId_t mp_id) {
000000  4770              BX       lr
;;;1863   #if defined(RTE_Compiler_EventRecorder)
;;;1864     (void)EventRecord2(EvtRtxMemoryPoolDestroyed, (uint32_t)mp_id, 0U);
;;;1865   #else
;;;1866     (void)mp_id;
;;;1867   #endif
;;;1868   }
;;;1869   #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolError||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolError PROC
;;;1676   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_ERROR_DISABLE))
;;;1677   __WEAK void EvrRtxMemoryPoolError (osMemoryPoolId_t mp_id, int32_t status) {
000000  4770              BX       lr
;;;1678   #if defined(RTE_Compiler_EventRecorder)
;;;1679     (void)EventRecord2(EvtRtxMemoryPoolError, (uint32_t)mp_id, (uint32_t)status);
;;;1680   #else
;;;1681     (void)mp_id;
;;;1682     (void)status;
;;;1683   #endif
;;;1684   }
;;;1685   #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolFree||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolFree PROC
;;;1774   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_FREE_DISABLE))
;;;1775   __WEAK void EvrRtxMemoryPoolFree (osMemoryPoolId_t mp_id, void *block) {
000000  4770              BX       lr
;;;1776   #if defined(RTE_Compiler_EventRecorder)
;;;1777     (void)EventRecord2(EvtRtxMemoryPoolFree, (uint32_t)mp_id, (uint32_t)block);
;;;1778   #else
;;;1779     (void)mp_id;
;;;1780     (void)block;
;;;1781   #endif
;;;1782   }
;;;1783   #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolFreeFailed||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolFreeFailed PROC
;;;1796   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_FREE_FAILED_DISABLE))
;;;1797   __WEAK void EvrRtxMemoryPoolFreeFailed (osMemoryPoolId_t mp_id, void *block) {
000000  4770              BX       lr
;;;1798   #if defined(RTE_Compiler_EventRecorder)
;;;1799     (void)EventRecord2(EvtRtxMemoryPoolFreeFailed, (uint32_t)mp_id, (uint32_t)block);
;;;1800   #else
;;;1801     (void)mp_id;
;;;1802     (void)block;
;;;1803   #endif
;;;1804   }
;;;1805   #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolGetBlockSize||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolGetBlockSize PROC
;;;1818   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_GET_BLOCK_SZIE_DISABLE))
;;;1819   __WEAK void EvrRtxMemoryPoolGetBlockSize (osMemoryPoolId_t mp_id, uint32_t block_size) {
000000  4770              BX       lr
;;;1820   #if defined(RTE_Compiler_EventRecorder)
;;;1821     (void)EventRecord2(EvtRtxMemoryPoolGetBlockSize, (uint32_t)mp_id, block_size);
;;;1822   #else
;;;1823     (void)mp_id;
;;;1824     (void)block_size;
;;;1825   #endif
;;;1826   }
;;;1827   #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolGetCapacity||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolGetCapacity PROC
;;;1807   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_GET_CAPACITY_DISABLE))
;;;1808   __WEAK void EvrRtxMemoryPoolGetCapacity (osMemoryPoolId_t mp_id, uint32_t capacity) {
000000  4770              BX       lr
;;;1809   #if defined(RTE_Compiler_EventRecorder)
;;;1810     (void)EventRecord2(EvtRtxMemoryPoolGetCapacity, (uint32_t)mp_id, capacity);
;;;1811   #else
;;;1812     (void)mp_id;
;;;1813     (void)capacity;
;;;1814   #endif
;;;1815   }
;;;1816   #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolGetCount||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolGetCount PROC
;;;1829   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_GET_COUNT_DISABLE))
;;;1830   __WEAK void EvrRtxMemoryPoolGetCount (osMemoryPoolId_t mp_id, uint32_t count) {
000000  4770              BX       lr
;;;1831   #if defined(RTE_Compiler_EventRecorder)
;;;1832     (void)EventRecord2(EvtRtxMemoryPoolGetCount, (uint32_t)mp_id, count);
;;;1833   #else
;;;1834     (void)mp_id;
;;;1835     (void)count;
;;;1836   #endif
;;;1837   }
;;;1838   #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolGetName||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolGetName PROC
;;;1710   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_GET_NAME_DISABLE))
;;;1711   __WEAK void EvrRtxMemoryPoolGetName (osMemoryPoolId_t mp_id, const char *name) {
000000  4770              BX       lr
;;;1712   #if defined(RTE_Compiler_EventRecorder)
;;;1713     (void)EventRecord2(EvtRtxMemoryPoolGetName, (uint32_t)mp_id, (uint32_t)name);
;;;1714   #else
;;;1715     (void)mp_id;
;;;1716     (void)name;
;;;1717   #endif
;;;1718   }
;;;1719   #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolGetSpace||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolGetSpace PROC
;;;1840   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_GET_SPACE_DISABLE))
;;;1841   __WEAK void EvrRtxMemoryPoolGetSpace (osMemoryPoolId_t mp_id, uint32_t space) {
000000  4770              BX       lr
;;;1842   #if defined(RTE_Compiler_EventRecorder)
;;;1843     (void)EventRecord2(EvtRtxMemoryPoolGetSpace, (uint32_t)mp_id, space);
;;;1844   #else
;;;1845     (void)mp_id;
;;;1846     (void)space;
;;;1847   #endif
;;;1848   }
;;;1849   #endif
                          ENDP


                          AREA ||i.EvrRtxMemoryPoolNew||, CODE, READONLY, ALIGN=1

                  EvrRtxMemoryPoolNew PROC
;;;1687   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MEMPOOL != 0) && !defined(EVR_RTX_MEMORY_POOL_NEW_DISABLE))
;;;1688   __WEAK void EvrRtxMemoryPoolNew (uint32_t block_count, uint32_t block_size, const osMemoryPoolAttr_t *attr) {
000000  4770              BX       lr
;;;1689   #if defined(RTE_Compiler_EventRecorder)
;;;1690     (void)EventRecord4(EvtRtxMemoryPoolNew, block_count, block_size, (uint32_t)attr, 0U);
;;;1691   #else
;;;1692     (void)block_count;
;;;1693     (void)block_size;
;;;1694     (void)attr;
;;;1695   #endif
;;;1696   }
;;;1697   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueCreated||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueCreated PROC
;;;1897   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_CREATED_DISABLE))
;;;1898   __WEAK void EvrRtxMessageQueueCreated (osMessageQueueId_t mq_id, const char *name) {
000000  4770              BX       lr
;;;1899   #if defined(RTE_Compiler_EventRecorder)
;;;1900     (void)EventRecord2(EvtRtxMessageQueueCreated, (uint32_t)mq_id, (uint32_t)name);
;;;1901   #else
;;;1902     (void)mq_id;
;;;1903     (void)name;
;;;1904   #endif
;;;1905   }
;;;1906   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueDelete||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueDelete PROC
;;;2108   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_DELETE_DISABLE))
;;;2109   __WEAK void EvrRtxMessageQueueDelete (osMessageQueueId_t mq_id) {
000000  4770              BX       lr
;;;2110   #if defined(RTE_Compiler_EventRecorder)
;;;2111     (void)EventRecord2(EvtRtxMessageQueueDelete, (uint32_t)mq_id, 0U);
;;;2112   #else
;;;2113     (void)mq_id;
;;;2114   #endif
;;;2115   }
;;;2116   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueDestroyed||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueDestroyed PROC
;;;2118   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_DESTROYED_DISABLE))
;;;2119   __WEAK void EvrRtxMessageQueueDestroyed (osMessageQueueId_t mq_id) {
000000  4770              BX       lr
;;;2120   #if defined(RTE_Compiler_EventRecorder)
;;;2121     (void)EventRecord2(EvtRtxMessageQueueDestroyed, (uint32_t)mq_id, 0U);
;;;2122   #else
;;;2123     (void)mq_id;
;;;2124   #endif
;;;2125   }
;;;2126   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueError||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueError PROC
;;;1874   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_ERROR_DISABLE))
;;;1875   __WEAK void EvrRtxMessageQueueError (osMessageQueueId_t mq_id, int32_t status) {
000000  4770              BX       lr
;;;1876   #if defined(RTE_Compiler_EventRecorder)
;;;1877     (void)EventRecord2 (EvtRtxMessageQueueError, (uint32_t)mq_id, (uint32_t)status);
;;;1878   #else
;;;1879     (void)mq_id;
;;;1880     (void)status;
;;;1881   #endif
;;;1882   }
;;;1883   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueGet||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueGet PROC
;;;1987   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_GET_DISABLE))
;;;1988   __WEAK void EvrRtxMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
000000  4770              BX       lr
;;;1989   #if defined(RTE_Compiler_EventRecorder)
;;;1990     (void)EventRecord4(EvtRtxMessageQueueGet, (uint32_t)mq_id, (uint32_t)msg_ptr, (uint32_t)msg_prio, timeout);
;;;1991   #else
;;;1992     (void)mq_id;
;;;1993     (void)msg_ptr;
;;;1994     (void)msg_prio;
;;;1995     (void)timeout;
;;;1996   #endif
;;;1997   }
;;;1998   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueGetCapacity||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueGetCapacity PROC
;;;2044   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_GET_CAPACITY_DISABLE))
;;;2045   __WEAK void EvrRtxMessageQueueGetCapacity (osMessageQueueId_t mq_id, uint32_t capacity) {
000000  4770              BX       lr
;;;2046   #if defined(RTE_Compiler_EventRecorder)
;;;2047     (void)EventRecord2(EvtRtxMessageQueueGetCapacity, (uint32_t)mq_id, capacity);
;;;2048   #else
;;;2049     (void)mq_id;
;;;2050     (void)capacity;
;;;2051   #endif
;;;2052   }
;;;2053   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueGetCount||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueGetCount PROC
;;;2066   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_GET_COUNT_DISABLE))
;;;2067   __WEAK void EvrRtxMessageQueueGetCount (osMessageQueueId_t mq_id, uint32_t count) {
000000  4770              BX       lr
;;;2068   #if defined(RTE_Compiler_EventRecorder)
;;;2069     (void)EventRecord2(EvtRtxMessageQueueGetCount, (uint32_t)mq_id, count);
;;;2070   #else
;;;2071     (void)mq_id;
;;;2072     (void)count;
;;;2073   #endif
;;;2074   }
;;;2075   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueGetMsgSize||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueGetMsgSize PROC
;;;2055   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_GET_MSG_SIZE_DISABLE))
;;;2056   __WEAK void EvrRtxMessageQueueGetMsgSize (osMessageQueueId_t mq_id, uint32_t msg_size) {
000000  4770              BX       lr
;;;2057   #if defined(RTE_Compiler_EventRecorder)
;;;2058     (void)EventRecord2(EvtRtxMessageQueueGetMsgSize, (uint32_t)mq_id, msg_size);
;;;2059   #else
;;;2060     (void)mq_id;
;;;2061     (void)msg_size;
;;;2062   #endif
;;;2063   }
;;;2064   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueGetName||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueGetName PROC
;;;1908   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_GET_NAME_DISABLE))
;;;1909   __WEAK void EvrRtxMessageQueueGetName (osMessageQueueId_t mq_id, const char *name) {
000000  4770              BX       lr
;;;1910   #if defined(RTE_Compiler_EventRecorder)
;;;1911     (void)EventRecord2(EvtRtxMessageQueueGetName, (uint32_t)mq_id, (uint32_t)name);
;;;1912   #else
;;;1913     (void)mq_id;
;;;1914     (void)name;
;;;1915   #endif
;;;1916   }
;;;1917   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueGetPending||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueGetPending PROC
;;;2000   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_GET_PENDING_DISABLE))
;;;2001   __WEAK void EvrRtxMessageQueueGetPending (osMessageQueueId_t mq_id, void *msg_ptr, uint32_t timeout) {
000000  4770              BX       lr
;;;2002   #if defined(RTE_Compiler_EventRecorder)
;;;2003     (void)EventRecord4(EvtRtxMessageQueueGetPending, (uint32_t)mq_id, (uint32_t)msg_ptr, timeout, 0U);
;;;2004   #else
;;;2005     (void)mq_id;
;;;2006     (void)msg_ptr;
;;;2007     (void)timeout;
;;;2008   #endif
;;;2009   }
;;;2010   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueGetSpace||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueGetSpace PROC
;;;2077   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_GET_SPACE_DISABLE))
;;;2078   __WEAK void EvrRtxMessageQueueGetSpace (osMessageQueueId_t mq_id, uint32_t space) {
000000  4770              BX       lr
;;;2079   #if defined(RTE_Compiler_EventRecorder)
;;;2080     (void)EventRecord2(EvtRtxMessageQueueGetSpace, (uint32_t)mq_id, space);
;;;2081   #else
;;;2082     (void)mq_id;
;;;2083     (void)space;
;;;2084   #endif
;;;2085   }
;;;2086   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueGetTimeout||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueGetTimeout PROC
;;;2012   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_GET_TIMEOUT_DISABLE))
;;;2013   __WEAK void EvrRtxMessageQueueGetTimeout (osMessageQueueId_t mq_id) {
000000  4770              BX       lr
;;;2014   #if defined(RTE_Compiler_EventRecorder)
;;;2015     (void)EventRecord2(EvtRtxMessageQueueGetTimeout, (uint32_t)mq_id, 0U);
;;;2016   #else
;;;2017     (void)mq_id;
;;;2018   #endif
;;;2019   }
;;;2020   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueInsertPending||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueInsertPending PROC
;;;1954   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_INSERT_PENDING_DISABLE))
;;;1955   __WEAK void EvrRtxMessageQueueInsertPending (osMessageQueueId_t mq_id, const void *msg_ptr) {
000000  4770              BX       lr
;;;1956   #if defined(RTE_Compiler_EventRecorder)
;;;1957     (void)EventRecord2(EvtRtxMessageQueueInsertPending, (uint32_t)mq_id, (uint32_t)msg_ptr);
;;;1958   #else
;;;1959     (void)mq_id;
;;;1960     (void)msg_ptr;
;;;1961   #endif
;;;1962   }
;;;1963   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueInserted||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueInserted PROC
;;;1965   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_INSERTED_DISABLE))
;;;1966   __WEAK void EvrRtxMessageQueueInserted (osMessageQueueId_t mq_id, const void *msg_ptr) {
000000  4770              BX       lr
;;;1967   #if defined(RTE_Compiler_EventRecorder)
;;;1968     (void)EventRecord2(EvtRtxMessageQueueInserted, (uint32_t)mq_id, (uint32_t)msg_ptr);
;;;1969   #else
;;;1970     (void)mq_id;
;;;1971     (void)msg_ptr;
;;;1972   #endif
;;;1973   }
;;;1974   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueNew||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueNew PROC
;;;1885   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_NEW_DISABLE))
;;;1886   __WEAK void EvrRtxMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
000000  4770              BX       lr
;;;1887   #if defined(RTE_Compiler_EventRecorder)
;;;1888     (void)EventRecord4(EvtRtxMessageQueueNew, msg_count, msg_size, (uint32_t)attr, 0U);
;;;1889   #else
;;;1890     (void)msg_count;
;;;1891     (void)msg_size;
;;;1892     (void)attr;
;;;1893   #endif
;;;1894   }
;;;1895   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueNotInserted||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueNotInserted PROC
;;;1976   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_NOT_INSERTED_DISABLE))
;;;1977   __WEAK void EvrRtxMessageQueueNotInserted (osMessageQueueId_t mq_id, const void *msg_ptr) {
000000  4770              BX       lr
;;;1978   #if defined(RTE_Compiler_EventRecorder)
;;;1979     (void)EventRecord2(EvtRtxMessageQueueNotInserted, (uint32_t)mq_id, (uint32_t)msg_ptr);
;;;1980   #else
;;;1981     (void)mq_id;
;;;1982     (void)msg_ptr;
;;;1983   #endif
;;;1984   }
;;;1985   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueNotRetrieved||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueNotRetrieved PROC
;;;2033   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_NOT_RETRIEVED_DISABLE))
;;;2034   __WEAK void EvrRtxMessageQueueNotRetrieved (osMessageQueueId_t mq_id, void *msg_ptr) {
000000  4770              BX       lr
;;;2035   #if defined(RTE_Compiler_EventRecorder)
;;;2036     (void)EventRecord2(EvtRtxMessageQueueNotRetrieved, (uint32_t)mq_id, (uint32_t)msg_ptr);
;;;2037   #else
;;;2038     (void)mq_id;
;;;2039     (void)msg_ptr;
;;;2040   #endif
;;;2041   }
;;;2042   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueuePut||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueuePut PROC
;;;1919   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_PUT_DISABLE))
;;;1920   __WEAK void EvrRtxMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
000000  4770              BX       lr
;;;1921   #if defined(RTE_Compiler_EventRecorder)
;;;1922     (void)EventRecord4(EvtRtxMessageQueuePut, (uint32_t)mq_id, (uint32_t)msg_ptr, (uint32_t)msg_prio, timeout);
;;;1923   #else
;;;1924     (void)mq_id;
;;;1925     (void)msg_ptr;
;;;1926     (void)msg_prio;
;;;1927     (void)timeout;
;;;1928   #endif
;;;1929   }
;;;1930   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueuePutPending||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueuePutPending PROC
;;;1932   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_PUT_PENDING_DISABLE))
;;;1933   __WEAK void EvrRtxMessageQueuePutPending (osMessageQueueId_t mq_id, const void *msg_ptr, uint32_t timeout) {
000000  4770              BX       lr
;;;1934   #if defined(RTE_Compiler_EventRecorder)
;;;1935     (void)EventRecord4(EvtRtxMessageQueuePutPending, (uint32_t)mq_id, (uint32_t)msg_ptr, timeout, 0U);
;;;1936   #else
;;;1937     (void)mq_id;
;;;1938     (void)msg_ptr;
;;;1939     (void)timeout;
;;;1940   #endif
;;;1941   }
;;;1942   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueuePutTimeout||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueuePutTimeout PROC
;;;1944   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_PUT_TIMEOUT_DISABLE))
;;;1945   __WEAK void EvrRtxMessageQueuePutTimeout (osMessageQueueId_t mq_id) {
000000  4770              BX       lr
;;;1946   #if defined(RTE_Compiler_EventRecorder)
;;;1947     (void)EventRecord2(EvtRtxMessageQueuePutTimeout, (uint32_t)mq_id, 0U);
;;;1948   #else
;;;1949     (void)mq_id;
;;;1950   #endif
;;;1951   }
;;;1952   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueReset||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueReset PROC
;;;2088   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_RESET_DISABLE))
;;;2089   __WEAK void EvrRtxMessageQueueReset (osMessageQueueId_t mq_id) {
000000  4770              BX       lr
;;;2090   #if defined(RTE_Compiler_EventRecorder)
;;;2091     (void)EventRecord2(EvtRtxMessageQueueReset, (uint32_t)mq_id, 0U);
;;;2092   #else
;;;2093     (void)mq_id;
;;;2094   #endif
;;;2095   }
;;;2096   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueResetDone||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueResetDone PROC
;;;2098   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_RESET_DONE_DISABLE))
;;;2099   __WEAK void EvrRtxMessageQueueResetDone (osMessageQueueId_t mq_id) {
000000  4770              BX       lr
;;;2100   #if defined(RTE_Compiler_EventRecorder)
;;;2101     (void)EventRecord2(EvtRtxMessageQueueResetDone, (uint32_t)mq_id, 0U);
;;;2102   #else
;;;2103     (void)mq_id;
;;;2104   #endif
;;;2105   }
;;;2106   #endif
                          ENDP


                          AREA ||i.EvrRtxMessageQueueRetrieved||, CODE, READONLY, ALIGN=1

                  EvrRtxMessageQueueRetrieved PROC
;;;2022   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MSGQUEUE != 0) && !defined(EVR_RTX_MESSAGE_QUEUE_RETRIEVED_DISABLE))
;;;2023   __WEAK void EvrRtxMessageQueueRetrieved (osMessageQueueId_t mq_id, void *msg_ptr) {
000000  4770              BX       lr
;;;2024   #if defined(RTE_Compiler_EventRecorder)
;;;2025     (void)EventRecord2(EvtRtxMessageQueueRetrieved, (uint32_t)mq_id, (uint32_t)msg_ptr);
;;;2026   #else
;;;2027     (void)mq_id;
;;;2028     (void)msg_ptr;
;;;2029   #endif
;;;2030   }
;;;2031   #endif
                          ENDP


                          AREA ||i.EvrRtxMutexAcquire||, CODE, READONLY, ALIGN=1

                  EvrRtxMutexAcquire PROC
;;;1415   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MUTEX != 0) && !defined(EVR_RTX_MUTEX_ACQUIRE_DISABLE))
;;;1416   __WEAK void EvrRtxMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
000000  4770              BX       lr
;;;1417   #if defined(RTE_Compiler_EventRecorder)
;;;1418     (void)EventRecord2(EvtRtxMutexAcquire, (uint32_t)mutex_id, timeout);
;;;1419   #else
;;;1420     (void)mutex_id;
;;;1421     (void)timeout;
;;;1422   #endif
;;;1423   }
;;;1424   #endif
                          ENDP


                          AREA ||i.EvrRtxMutexAcquirePending||, CODE, READONLY, ALIGN=1

                  EvrRtxMutexAcquirePending PROC
;;;1426   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MUTEX != 0) && !defined(EVR_RTX_MUTEX_ACQUIRE_PENDING_DISABLE))
;;;1427   __WEAK void EvrRtxMutexAcquirePending (osMutexId_t mutex_id, uint32_t timeout) {
000000  4770              BX       lr
;;;1428   #if defined(RTE_Compiler_EventRecorder)
;;;1429     (void)EventRecord2(EvtRtxMutexAcquirePending, (uint32_t)mutex_id, timeout);
;;;1430   #else
;;;1431     (void)mutex_id;
;;;1432     (void)timeout;
;;;1433   #endif
;;;1434   }
;;;1435   #endif
                          ENDP


                          AREA ||i.EvrRtxMutexAcquireTimeout||, CODE, READONLY, ALIGN=1

                  EvrRtxMutexAcquireTimeout PROC
;;;1437   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MUTEX != 0) && !defined(EVR_RTX_MUTEX_ACQUIRE_TIMEOUT_DISABLE))
;;;1438   __WEAK void EvrRtxMutexAcquireTimeout (osMutexId_t mutex_id) {
000000  4770              BX       lr
;;;1439   #if defined(RTE_Compiler_EventRecorder)
;;;1440     (void)EventRecord2(EvtRtxMutexAcquireTimeout, (uint32_t)mutex_id, 0U);
;;;1441   #else
;;;1442     (void)mutex_id;
;;;1443   #endif
;;;1444   }
;;;1445   #endif
                          ENDP


                          AREA ||i.EvrRtxMutexAcquired||, CODE, READONLY, ALIGN=1

                  EvrRtxMutexAcquired PROC
;;;1447   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MUTEX != 0) && !defined(EVR_RTX_MUTEX_ACQUIRED_DISABLE))
;;;1448   __WEAK void EvrRtxMutexAcquired (osMutexId_t mutex_id, uint32_t lock) {
000000  4770              BX       lr
;;;1449   #if defined(RTE_Compiler_EventRecorder)
;;;1450     (void)EventRecord2(EvtRtxMutexAcquired, (uint32_t)mutex_id, lock);
;;;1451   #else
;;;1452     (void)mutex_id;
;;;1453     (void)lock;
;;;1454   #endif
;;;1455   }
;;;1456   #endif
                          ENDP


                          AREA ||i.EvrRtxMutexCreated||, CODE, READONLY, ALIGN=1

                  EvrRtxMutexCreated PROC
;;;1393   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MUTEX != 0) && !defined(EVR_RTX_MUTEX_CREATED_DISABLE))
;;;1394   __WEAK void EvrRtxMutexCreated (osMutexId_t mutex_id, const char *name) {
000000  4770              BX       lr
;;;1395   #if defined(RTE_Compiler_EventRecorder)
;;;1396     (void)EventRecord2(EvtRtxMutexCreated, (uint32_t)mutex_id, (uint32_t)name);
;;;1397   #else
;;;1398     (void)mutex_id;
;;;1399     (void)name;
;;;1400   #endif
;;;1401   }
;;;1402   #endif
                          ENDP


                          AREA ||i.EvrRtxMutexDelete||, CODE, READONLY, ALIGN=1

                  EvrRtxMutexDelete PROC
;;;1500   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MUTEX != 0) && !defined(EVR_RTX_MUTEX_DELETE_DISABLE))
;;;1501   __WEAK void EvrRtxMutexDelete (osMutexId_t mutex_id) {
000000  4770              BX       lr
;;;1502   #if defined(RTE_Compiler_EventRecorder)
;;;1503     (void)EventRecord2(EvtRtxMutexDelete, (uint32_t)mutex_id, 0U);
;;;1504   #else
;;;1505     (void)mutex_id;
;;;1506   #endif
;;;1507   }
;;;1508   #endif
                          ENDP


                          AREA ||i.EvrRtxMutexDestroyed||, CODE, READONLY, ALIGN=1

                  EvrRtxMutexDestroyed PROC
;;;1510   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MUTEX != 0) && !defined(EVR_RTX_MUTEX_DESTROYED_DISABLE))
;;;1511   __WEAK void EvrRtxMutexDestroyed (osMutexId_t mutex_id) {
000000  4770              BX       lr
;;;1512   #if defined(RTE_Compiler_EventRecorder)
;;;1513     (void)EventRecord2(EvtRtxMutexDestroyed, (uint32_t)mutex_id, 0U);
;;;1514   #else
;;;1515     (void)mutex_id;
;;;1516   #endif
;;;1517   }
;;;1518   #endif
                          ENDP


                          AREA ||i.EvrRtxMutexError||, CODE, READONLY, ALIGN=1

                  EvrRtxMutexError PROC
;;;1372   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MUTEX != 0) && !defined(EVR_RTX_MUTEX_ERROR_DISABLE))
;;;1373   __WEAK void EvrRtxMutexError (osMutexId_t mutex_id, int32_t status) {
000000  4770              BX       lr
;;;1374   #if defined(RTE_Compiler_EventRecorder)
;;;1375     (void)EventRecord2(EvtRtxMutexError, (uint32_t)mutex_id, (uint32_t)status);
;;;1376   #else
;;;1377     (void)mutex_id;
;;;1378     (void)status;
;;;1379   #endif
;;;1380   }
;;;1381   #endif
                          ENDP


                          AREA ||i.EvrRtxMutexGetName||, CODE, READONLY, ALIGN=1

                  EvrRtxMutexGetName PROC
;;;1404   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MUTEX != 0) && !defined(EVR_RTX_MUTEX_GET_NAME_DISABLE))
;;;1405   __WEAK void EvrRtxMutexGetName (osMutexId_t mutex_id, const char *name) {
000000  4770              BX       lr
;;;1406   #if defined(RTE_Compiler_EventRecorder)
;;;1407     (void)EventRecord2(EvtRtxMutexGetName, (uint32_t)mutex_id, (uint32_t)name);
;;;1408   #else
;;;1409     (void)mutex_id;
;;;1410     (void)name;
;;;1411   #endif
;;;1412   }
;;;1413   #endif
                          ENDP


                          AREA ||i.EvrRtxMutexGetOwner||, CODE, READONLY, ALIGN=1

                  EvrRtxMutexGetOwner PROC
;;;1489   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MUTEX != 0) && !defined(EVR_RTX_MUTEX_GET_OWNER_DISABLE))
;;;1490   __WEAK void EvrRtxMutexGetOwner (osMutexId_t mutex_id, osThreadId_t thread_id) {
000000  4770              BX       lr
;;;1491   #if defined(RTE_Compiler_EventRecorder)
;;;1492     (void)EventRecord2(EvtRtxMutexGetOwner, (uint32_t)mutex_id, (uint32_t)thread_id);
;;;1493   #else
;;;1494     (void)mutex_id;
;;;1495     (void)thread_id;
;;;1496   #endif
;;;1497   }
;;;1498   #endif
                          ENDP


                          AREA ||i.EvrRtxMutexNew||, CODE, READONLY, ALIGN=1

                  EvrRtxMutexNew PROC
;;;1383   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MUTEX != 0) && !defined(EVR_RTX_MUTEX_NEW_DISABLE))
;;;1384   __WEAK void EvrRtxMutexNew (const osMutexAttr_t *attr) {
000000  4770              BX       lr
;;;1385   #if defined(RTE_Compiler_EventRecorder)
;;;1386     (void)EventRecord2(EvtRtxMutexNew, (uint32_t)attr, 0U);
;;;1387   #else
;;;1388     (void)attr;
;;;1389   #endif
;;;1390   }
;;;1391   #endif
                          ENDP


                          AREA ||i.EvrRtxMutexNotAcquired||, CODE, READONLY, ALIGN=1

                  EvrRtxMutexNotAcquired PROC
;;;1458   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MUTEX != 0) && !defined(EVR_RTX_MUTEX_NOT_ACQUIRED_DISABLE))
;;;1459   __WEAK void EvrRtxMutexNotAcquired (osMutexId_t mutex_id) {
000000  4770              BX       lr
;;;1460   #if defined(RTE_Compiler_EventRecorder)
;;;1461     (void)EventRecord2(EvtRtxMutexNotAcquired, (uint32_t)mutex_id, 0U);
;;;1462   #else
;;;1463     (void)mutex_id;
;;;1464   #endif
;;;1465   }
;;;1466   #endif
                          ENDP


                          AREA ||i.EvrRtxMutexRelease||, CODE, READONLY, ALIGN=1

                  EvrRtxMutexRelease PROC
;;;1468   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MUTEX != 0) && !defined(EVR_RTX_MUTEX_RELEASE_DISABLE))
;;;1469   __WEAK void EvrRtxMutexRelease (osMutexId_t mutex_id) {
000000  4770              BX       lr
;;;1470   #if defined(RTE_Compiler_EventRecorder)
;;;1471     (void)EventRecord2(EvtRtxMutexRelease, (uint32_t)mutex_id, 0U);
;;;1472   #else
;;;1473     (void)mutex_id;
;;;1474   #endif
;;;1475   }
;;;1476   #endif
                          ENDP


                          AREA ||i.EvrRtxMutexReleased||, CODE, READONLY, ALIGN=1

                  EvrRtxMutexReleased PROC
;;;1478   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_MUTEX != 0) && !defined(EVR_RTX_MUTEX_RELEASED_DISABLE))
;;;1479   __WEAK void EvrRtxMutexReleased (osMutexId_t mutex_id, uint32_t lock) {
000000  4770              BX       lr
;;;1480   #if defined(RTE_Compiler_EventRecorder)
;;;1481     (void)EventRecord2(EvtRtxMutexReleased, (uint32_t)mutex_id, lock);
;;;1482   #else
;;;1483     (void)mutex_id;
;;;1484     (void)lock;
;;;1485   #endif
;;;1486   }
;;;1487   #endif
                          ENDP


                          AREA ||i.EvrRtxSemaphoreAcquire||, CODE, READONLY, ALIGN=1

                  EvrRtxSemaphoreAcquire PROC
;;;1568   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_SEMAPHORE != 0) && !defined(EVR_RTX_SEMAPHORE_ACQUIRE_DISABLE))
;;;1569   __WEAK void EvrRtxSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
000000  4770              BX       lr
;;;1570   #if defined(RTE_Compiler_EventRecorder)
;;;1571     (void)EventRecord2(EvtRtxSemaphoreAcquire, (uint32_t)semaphore_id, timeout);
;;;1572   #else
;;;1573     (void)semaphore_id;
;;;1574     (void)timeout;
;;;1575   #endif
;;;1576   }
;;;1577   #endif
                          ENDP


                          AREA ||i.EvrRtxSemaphoreAcquirePending||, CODE, READONLY, ALIGN=1

                  EvrRtxSemaphoreAcquirePending PROC
;;;1579   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_SEMAPHORE != 0) && !defined(EVR_RTX_SEMAPHORE_ACQUIRE_PENDING_DISABLE))
;;;1580   __WEAK void EvrRtxSemaphoreAcquirePending (osSemaphoreId_t semaphore_id, uint32_t timeout) {
000000  4770              BX       lr
;;;1581   #if defined(RTE_Compiler_EventRecorder)
;;;1582     (void)EventRecord2(EvtRtxSemaphoreAcquirePending, (uint32_t)semaphore_id, (uint32_t)timeout);
;;;1583   #else
;;;1584     (void)semaphore_id;
;;;1585     (void)timeout;
;;;1586   #endif
;;;1587   }
;;;1588   #endif
                          ENDP


                          AREA ||i.EvrRtxSemaphoreAcquireTimeout||, CODE, READONLY, ALIGN=1

                  EvrRtxSemaphoreAcquireTimeout PROC
;;;1590   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_SEMAPHORE != 0) && !defined(EVR_RTX_SEMAPHORE_ACQUIRE_TIMEOUT_DISABLE))
;;;1591   __WEAK void EvrRtxSemaphoreAcquireTimeout (osSemaphoreId_t semaphore_id) {
000000  4770              BX       lr
;;;1592   #if defined(RTE_Compiler_EventRecorder)
;;;1593     (void)EventRecord2(EvtRtxSemaphoreAcquireTimeout, (uint32_t)semaphore_id, 0U);
;;;1594   #else
;;;1595     (void)semaphore_id;
;;;1596   #endif
;;;1597   }
;;;1598   #endif
                          ENDP


                          AREA ||i.EvrRtxSemaphoreAcquired||, CODE, READONLY, ALIGN=1

                  EvrRtxSemaphoreAcquired PROC
;;;1600   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_SEMAPHORE != 0) && !defined(EVR_RTX_SEMAPHORE_ACQUIRED_DISABLE))
;;;1601   __WEAK void EvrRtxSemaphoreAcquired (osSemaphoreId_t semaphore_id, uint32_t tokens) {
000000  4770              BX       lr
;;;1602   #if defined(RTE_Compiler_EventRecorder)
;;;1603     (void)EventRecord2(EvtRtxSemaphoreAcquired, (uint32_t)semaphore_id, tokens);
;;;1604   #else
;;;1605     (void)semaphore_id;
;;;1606     (void)tokens;
;;;1607   #endif
;;;1608   }
;;;1609   #endif
                          ENDP


                          AREA ||i.EvrRtxSemaphoreCreated||, CODE, READONLY, ALIGN=1

                  EvrRtxSemaphoreCreated PROC
;;;1546   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_SEMAPHORE != 0) && !defined(EVR_RTX_SEMAPHORE_CREATED_DISABLE))
;;;1547   __WEAK void EvrRtxSemaphoreCreated (osSemaphoreId_t semaphore_id, const char *name) {
000000  4770              BX       lr
;;;1548   #if defined(RTE_Compiler_EventRecorder)
;;;1549     (void)EventRecord2(EvtRtxSemaphoreCreated, (uint32_t)semaphore_id, (uint32_t)name);
;;;1550   #else
;;;1551     (void)semaphore_id;
;;;1552     (void)name;
;;;1553   #endif
;;;1554   }
;;;1555   #endif
                          ENDP


                          AREA ||i.EvrRtxSemaphoreDelete||, CODE, READONLY, ALIGN=1

                  EvrRtxSemaphoreDelete PROC
;;;1653   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_SEMAPHORE != 0) && !defined(EVR_RTX_SEMAPHORE_DELETE_DISABLE))
;;;1654   __WEAK void EvrRtxSemaphoreDelete (osSemaphoreId_t semaphore_id) {
000000  4770              BX       lr
;;;1655   #if defined(RTE_Compiler_EventRecorder)
;;;1656     (void)EventRecord2(EvtRtxSemaphoreDelete, (uint32_t)semaphore_id, 0U);
;;;1657   #else
;;;1658     (void)semaphore_id;
;;;1659   #endif
;;;1660   }
;;;1661   #endif
                          ENDP


                          AREA ||i.EvrRtxSemaphoreDestroyed||, CODE, READONLY, ALIGN=1

                  EvrRtxSemaphoreDestroyed PROC
;;;1663   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_SEMAPHORE != 0) && !defined(EVR_RTX_SEMAPHORE_DESTROYED_DISABLE))
;;;1664   __WEAK void EvrRtxSemaphoreDestroyed (osSemaphoreId_t semaphore_id) {
000000  4770              BX       lr
;;;1665   #if defined(RTE_Compiler_EventRecorder)
;;;1666     (void)EventRecord2(EvtRtxSemaphoreDestroyed, (uint32_t)semaphore_id, 0U);
;;;1667   #else
;;;1668     (void)semaphore_id;
;;;1669   #endif
;;;1670   }
;;;1671   #endif
                          ENDP


                          AREA ||i.EvrRtxSemaphoreError||, CODE, READONLY, ALIGN=1

                  EvrRtxSemaphoreError PROC
;;;1523   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_SEMAPHORE != 0) && !defined(EVR_RTX_SEMAPHORE_ERROR_DISABLE))
;;;1524   __WEAK void EvrRtxSemaphoreError (osSemaphoreId_t semaphore_id, int32_t status) {
000000  4770              BX       lr
;;;1525   #if defined(RTE_Compiler_EventRecorder)
;;;1526     (void)EventRecord2(EvtRtxSemaphoreError, (uint32_t)semaphore_id, (uint32_t)status);
;;;1527   #else
;;;1528     (void)semaphore_id;
;;;1529     (void)status;
;;;1530   #endif
;;;1531   }
;;;1532   #endif
                          ENDP


                          AREA ||i.EvrRtxSemaphoreGetCount||, CODE, READONLY, ALIGN=1

                  EvrRtxSemaphoreGetCount PROC
;;;1642   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_SEMAPHORE != 0) && !defined(EVR_RTX_SEMAPHORE_GET_COUNT_DISABLE))
;;;1643   __WEAK void EvrRtxSemaphoreGetCount (osSemaphoreId_t semaphore_id, uint32_t count) {
000000  4770              BX       lr
;;;1644   #if defined(RTE_Compiler_EventRecorder)
;;;1645     (void)EventRecord2(EvtRtxSemaphoreGetCount, (uint32_t)semaphore_id, count);
;;;1646   #else
;;;1647     (void)semaphore_id;
;;;1648     (void)count;
;;;1649   #endif
;;;1650   }
;;;1651   #endif
                          ENDP


                          AREA ||i.EvrRtxSemaphoreGetName||, CODE, READONLY, ALIGN=1

                  EvrRtxSemaphoreGetName PROC
;;;1557   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_SEMAPHORE != 0) && !defined(EVR_RTX_SEMAPHORE_GET_NAME_DISABLE))
;;;1558   __WEAK void EvrRtxSemaphoreGetName (osSemaphoreId_t semaphore_id, const char *name) {
000000  4770              BX       lr
;;;1559   #if defined(RTE_Compiler_EventRecorder)
;;;1560     (void)EventRecord2(EvtRtxSemaphoreGetName, (uint32_t)semaphore_id, (uint32_t)name);
;;;1561   #else
;;;1562   #endif
;;;1563     (void)semaphore_id;
;;;1564     (void)name;
;;;1565   }
;;;1566   #endif
                          ENDP


                          AREA ||i.EvrRtxSemaphoreNew||, CODE, READONLY, ALIGN=1

                  EvrRtxSemaphoreNew PROC
;;;1534   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_SEMAPHORE != 0) && !defined(EVR_RTX_SEMAPHORE_NEW_DISABLE))
;;;1535   __WEAK void EvrRtxSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
000000  4770              BX       lr
;;;1536   #if defined(RTE_Compiler_EventRecorder)
;;;1537     (void)EventRecord4(EvtRtxSemaphoreNew, max_count, initial_count, (uint32_t)attr, 0U);
;;;1538   #else
;;;1539     (void)max_count;
;;;1540     (void)initial_count;
;;;1541     (void)attr;
;;;1542   #endif
;;;1543   }
;;;1544   #endif
                          ENDP


                          AREA ||i.EvrRtxSemaphoreNotAcquired||, CODE, READONLY, ALIGN=1

                  EvrRtxSemaphoreNotAcquired PROC
;;;1611   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_SEMAPHORE != 0) && !defined(EVR_RTX_SEMAPHORE_NOT_ACQUIRED_DISABLE))
;;;1612   __WEAK void EvrRtxSemaphoreNotAcquired (osSemaphoreId_t semaphore_id) {
000000  4770              BX       lr
;;;1613   #if defined(RTE_Compiler_EventRecorder)
;;;1614     (void)EventRecord2(EvtRtxSemaphoreNotAcquired, (uint32_t)semaphore_id, 0U);
;;;1615   #else
;;;1616     (void)semaphore_id;
;;;1617   #endif
;;;1618   }
;;;1619   #endif
                          ENDP


                          AREA ||i.EvrRtxSemaphoreRelease||, CODE, READONLY, ALIGN=1

                  EvrRtxSemaphoreRelease PROC
;;;1621   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_SEMAPHORE != 0) && !defined(EVR_RTX_SEMAPHORE_RELEASE_DISABLE))
;;;1622   __WEAK void EvrRtxSemaphoreRelease (osSemaphoreId_t semaphore_id) {
000000  4770              BX       lr
;;;1623   #if defined(RTE_Compiler_EventRecorder)
;;;1624     (void)EventRecord2(EvtRtxSemaphoreRelease, (uint32_t)semaphore_id, 0U);
;;;1625   #else
;;;1626     (void)semaphore_id;
;;;1627   #endif
;;;1628   }
;;;1629   #endif
                          ENDP


                          AREA ||i.EvrRtxSemaphoreReleased||, CODE, READONLY, ALIGN=1

                  EvrRtxSemaphoreReleased PROC
;;;1631   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_SEMAPHORE != 0) && !defined(EVR_RTX_SEMAPHORE_RELEASED_DISABLE))
;;;1632   __WEAK void EvrRtxSemaphoreReleased (osSemaphoreId_t semaphore_id, uint32_t tokens) {
000000  4770              BX       lr
;;;1633   #if defined(RTE_Compiler_EventRecorder)
;;;1634     (void)EventRecord2(EvtRtxSemaphoreReleased, (uint32_t)semaphore_id, tokens);
;;;1635   #else
;;;1636     (void)semaphore_id;
;;;1637     (void)tokens;
;;;1638   #endif
;;;1639   }
;;;1640   #endif
                          ENDP


                          AREA ||i.EvrRtxThreadBlocked||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadBlocked PROC
;;;774    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_BLOCKED_DISABLE))
;;;775    __WEAK void EvrRtxThreadBlocked (osThreadId_t thread_id, uint32_t timeout) {
000000  4770              BX       lr
;;;776    #if defined(RTE_Compiler_EventRecorder)
;;;777      (void)EventRecord2(EvtRtxThreadBlocked, (uint32_t)thread_id, timeout);
;;;778    #else
;;;779      (void)thread_id;
;;;780      (void)timeout;
;;;781    #endif
;;;782    }
;;;783    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadCreated||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadCreated PROC
;;;572    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_CREATED_DISABLE))
;;;573    __WEAK void EvrRtxThreadCreated (osThreadId_t thread_id, uint32_t thread_addr, const char *name) {
000000  4770              BX       lr
;;;574    #if defined(RTE_Compiler_EventRecorder)
;;;575      if (name != NULL) {
;;;576        (void)EventRecord2(EvtRtxThreadCreated_Name, (uint32_t)thread_id, (uint32_t)name);
;;;577      } else {
;;;578        (void)EventRecord2(EvtRtxThreadCreated_Addr, (uint32_t)thread_id, thread_addr);
;;;579      }
;;;580    #else
;;;581      (void)thread_id;
;;;582      (void)thread_addr;
;;;583      (void)name;
;;;584    #endif
;;;585    }
;;;586    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadDestroyed||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadDestroyed PROC
;;;835    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_DESTROYED_DISABLE))
;;;836    __WEAK void EvrRtxThreadDestroyed (osThreadId_t thread_id) {
000000  4770              BX       lr
;;;837    #if defined(RTE_Compiler_EventRecorder)
;;;838      (void)EventRecord2(EvtRtxThreadDestroyed, (uint32_t)thread_id, 0U);
;;;839    #else
;;;840      (void)thread_id;
;;;841    #endif
;;;842    }
;;;843    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadDetach||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadDetach PROC
;;;724    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_DETACH_DISABLE))
;;;725    __WEAK void EvrRtxThreadDetach (osThreadId_t thread_id) {
000000  4770              BX       lr
;;;726    #if defined(RTE_Compiler_EventRecorder)
;;;727      (void)EventRecord2(EvtRtxThreadDetach, (uint32_t)thread_id, 0U);
;;;728    #else
;;;729      (void)thread_id;
;;;730    #endif
;;;731    }
;;;732    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadDetached||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadDetached PROC
;;;734    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_DETACHED_DISABLE))
;;;735    __WEAK void EvrRtxThreadDetached (osThreadId_t thread_id) {
000000  4770              BX       lr
;;;736    #if defined(RTE_Compiler_EventRecorder)
;;;737      (void)EventRecord2(EvtRtxThreadDetached, (uint32_t)thread_id, 0U);
;;;738    #else
;;;739      (void)thread_id;
;;;740    #endif
;;;741    }
;;;742    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadEnumerate||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadEnumerate PROC
;;;855    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_ENUMERATE_DISABLE))
;;;856    __WEAK void EvrRtxThreadEnumerate (osThreadId_t *thread_array, uint32_t array_items, uint32_t count) {
000000  4770              BX       lr
;;;857    #if defined(RTE_Compiler_EventRecorder)
;;;858      (void)EventRecord4(EvtRtxThreadEnumerate, (uint32_t)thread_array, array_items, count, 0U);
;;;859    #else
;;;860      (void)thread_array;
;;;861      (void)array_items;
;;;862      (void)count;
;;;863    #endif
;;;864    }
;;;865    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadError||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadError PROC
;;;549    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_ERROR_DISABLE))
;;;550    __WEAK void EvrRtxThreadError (osThreadId_t thread_id, int32_t status) {
000000  4770              BX       lr
;;;551    #if defined(RTE_Compiler_EventRecorder)
;;;552      (void)EventRecord2(EvtRtxThreadError, (uint32_t)thread_id, (uint32_t)status);
;;;553    #else
;;;554      (void)thread_id;
;;;555      (void)status;
;;;556    #endif
;;;557    }
;;;558    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadExit||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadExit PROC
;;;816    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_EXIT_DISABLE))
;;;817    __WEAK void EvrRtxThreadExit (void) {
000000  4770              BX       lr
;;;818    #if defined(RTE_Compiler_EventRecorder)
;;;819      (void)EventRecord2(EvtRtxThreadExit, 0U, 0U);
;;;820    #else
;;;821    #endif
;;;822    }
;;;823    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadFlagsClear||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadFlagsClear PROC
;;;903    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THFLAGS != 0) && !defined(EVR_RTX_THREAD_FLAGS_CLEAR_DISABLE))
;;;904    __WEAK void EvrRtxThreadFlagsClear (uint32_t flags) {
000000  4770              BX       lr
;;;905    #if defined(RTE_Compiler_EventRecorder)
;;;906      (void)EventRecord2(EvtRtxThreadFlagsClear, flags, 0U);
;;;907    #else
;;;908      (void)flags;
;;;909    #endif
;;;910    }
;;;911    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadFlagsClearDone||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadFlagsClearDone PROC
;;;913    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THFLAGS != 0) && !defined(EVR_RTX_THREAD_FLAGS_CLEAR_DONE_DISABLE))
;;;914    __WEAK void EvrRtxThreadFlagsClearDone (uint32_t thread_flags) {
000000  4770              BX       lr
;;;915    #if defined(RTE_Compiler_EventRecorder)
;;;916      (void)EventRecord2(EvtRtxThreadFlagsClearDone, thread_flags, 0U);
;;;917    #else
;;;918      (void)thread_flags;
;;;919    #endif
;;;920    }
;;;921    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadFlagsError||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadFlagsError PROC
;;;870    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THFLAGS != 0) && !defined(EVR_RTX_THREAD_FLAGS_ERROR_DISABLE))
;;;871    __WEAK void EvrRtxThreadFlagsError (osThreadId_t thread_id, int32_t status) {
000000  4770              BX       lr
;;;872    #if defined(RTE_Compiler_EventRecorder)
;;;873      (void)EventRecord2(EvtRtxThreadFlagsError, (uint32_t)thread_id, (uint32_t)status);
;;;874    #else
;;;875      (void)thread_id;
;;;876      (void)status;
;;;877    #endif
;;;878    }
;;;879    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadFlagsGet||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadFlagsGet PROC
;;;923    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THFLAGS != 0) && !defined(EVR_RTX_THREAD_FLAGS_GET_DISABLE))
;;;924    __WEAK void EvrRtxThreadFlagsGet (uint32_t thread_flags) {
000000  4770              BX       lr
;;;925    #if defined(RTE_Compiler_EventRecorder)
;;;926      (void)EventRecord2(EvtRtxThreadFlagsGet, thread_flags, 0U);
;;;927    #else
;;;928      (void)thread_flags;
;;;929    #endif
;;;930    }
;;;931    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadFlagsSet||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadFlagsSet PROC
;;;881    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THFLAGS != 0) && !defined(EVR_RTX_THREAD_FLAGS_SET_DISABLE))
;;;882    __WEAK void EvrRtxThreadFlagsSet (osThreadId_t thread_id, uint32_t flags) {
000000  4770              BX       lr
;;;883    #if defined(RTE_Compiler_EventRecorder)
;;;884      (void)EventRecord2(EvtRtxThreadFlagsSet, (uint32_t)thread_id, flags);
;;;885    #else
;;;886      (void)thread_id;
;;;887      (void)flags;
;;;888    #endif
;;;889    }
;;;890    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadFlagsSetDone||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadFlagsSetDone PROC
;;;892    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THFLAGS != 0) && !defined(EVR_RTX_THREAD_FLAGS_SET_DONE_DISABLE))
;;;893    __WEAK void EvrRtxThreadFlagsSetDone (osThreadId_t thread_id, uint32_t thread_flags) {
000000  4770              BX       lr
;;;894    #if defined(RTE_Compiler_EventRecorder)
;;;895      (void)EventRecord2(EvtRtxThreadFlagsSetDone, (uint32_t)thread_id, thread_flags);
;;;896    #else
;;;897      (void)thread_id;
;;;898      (void)thread_flags;
;;;899    #endif
;;;900    }
;;;901    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadFlagsWait||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadFlagsWait PROC
;;;933    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THFLAGS != 0) && !defined(EVR_RTX_THREAD_FLAGS_WAIT_DISABLE))
;;;934    __WEAK void EvrRtxThreadFlagsWait (uint32_t flags, uint32_t options, uint32_t timeout) {
000000  4770              BX       lr
;;;935    #if defined(RTE_Compiler_EventRecorder)
;;;936      (void)EventRecord4(EvtRtxThreadFlagsWait, flags, options, timeout, 0U);
;;;937    #else
;;;938      (void)flags;
;;;939      (void)options;
;;;940      (void)timeout;
;;;941    #endif
;;;942    }
;;;943    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadFlagsWaitCompleted||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadFlagsWaitCompleted PROC
;;;967    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THFLAGS != 0) && !defined(EVR_RTX_THREAD_FLAGS_WAIT_COMPLETED_DISABLE))
;;;968    __WEAK void EvrRtxThreadFlagsWaitCompleted (uint32_t flags, uint32_t options, uint32_t thread_flags, osThreadId_t thread_id) {
000000  4770              BX       lr
;;;969    #if defined(RTE_Compiler_EventRecorder)
;;;970      (void)EventRecord4(EvtRtxThreadFlagsWaitCompleted, flags, options, thread_flags, (uint32_t)thread_id);
;;;971    #else
;;;972      (void)flags;
;;;973      (void)options;
;;;974      (void)thread_flags;
;;;975      (void)thread_id;
;;;976    #endif
;;;977    }
;;;978    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadFlagsWaitNotCompleted||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadFlagsWaitNotCompleted PROC
;;;980    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THFLAGS != 0) && !defined(EVR_RTX_THREAD_FLAGS_WAIT_NOT_COMPLETED_DISABLE))
;;;981    __WEAK void EvrRtxThreadFlagsWaitNotCompleted (uint32_t flags, uint32_t options) {
000000  4770              BX       lr
;;;982    #if defined(RTE_Compiler_EventRecorder)
;;;983      (void)EventRecord2(EvtRtxThreadFlagsWaitNotCompleted, flags, options);
;;;984    #else
;;;985      (void)flags;
;;;986      (void)options;
;;;987    #endif
;;;988    }
;;;989    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadFlagsWaitPending||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadFlagsWaitPending PROC
;;;945    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THFLAGS != 0) && !defined(EVR_RTX_THREAD_FLAGS_WAIT_PENDING_DISABLE))
;;;946    __WEAK void EvrRtxThreadFlagsWaitPending (uint32_t flags, uint32_t options, uint32_t timeout) {
000000  4770              BX       lr
;;;947    #if defined(RTE_Compiler_EventRecorder)
;;;948      (void)EventRecord4(EvtRtxThreadFlagsWaitPending, flags, options, timeout, 0U);
;;;949    #else
;;;950      (void)flags;
;;;951      (void)options;
;;;952      (void)timeout;
;;;953    #endif
;;;954    }
;;;955    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadFlagsWaitTimeout||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadFlagsWaitTimeout PROC
;;;957    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THFLAGS != 0) && !defined(EVR_RTX_THREAD_FLAGS_WAIT_TIMEOUT_DISABLE))
;;;958    __WEAK void EvrRtxThreadFlagsWaitTimeout (osThreadId_t thread_id) {
000000  4770              BX       lr
;;;959    #if defined(RTE_Compiler_EventRecorder)
;;;960      (void)EventRecord2(EvtRtxThreadFlagsWaitTimeout, (uint32_t)thread_id, 0U);
;;;961    #else
;;;962      (void)thread_id;
;;;963    #endif
;;;964    }
;;;965    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadGetCount||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadGetCount PROC
;;;845    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_GET_COUNT_DISABLE))
;;;846    __WEAK void EvrRtxThreadGetCount (uint32_t count) {
000000  4770              BX       lr
;;;847    #if defined(RTE_Compiler_EventRecorder)
;;;848      (void)EventRecord2(EvtRtxThreadGetCount, count, 0U);
;;;849    #else
;;;850      (void)count;
;;;851    #endif
;;;852    }
;;;853    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadGetId||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadGetId PROC
;;;599    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_GET_ID_DISABLE))
;;;600    __WEAK void EvrRtxThreadGetId (osThreadId_t thread_id) {
000000  4770              BX       lr
;;;601    #if defined(RTE_Compiler_EventRecorder)
;;;602      (void)EventRecord2(EvtRtxThreadGetId, (uint32_t)thread_id, 0U);
;;;603    #else
;;;604      (void)thread_id;
;;;605    #endif
;;;606    }
;;;607    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadGetName||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadGetName PROC
;;;588    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_GET_NAME_DISABLE))
;;;589    __WEAK void EvrRtxThreadGetName (osThreadId_t thread_id, const char *name) {
000000  4770              BX       lr
;;;590    #if defined(RTE_Compiler_EventRecorder)
;;;591      (void)EventRecord2(EvtRtxThreadGetName, (uint32_t)thread_id, (uint32_t)name);
;;;592    #else
;;;593      (void)thread_id;
;;;594      (void)name;
;;;595    #endif
;;;596    }
;;;597    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadGetPriority||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadGetPriority PROC
;;;664    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_GET_PRIORITY_DISABLE))
;;;665    __WEAK void EvrRtxThreadGetPriority (osThreadId_t thread_id, osPriority_t priority) {
000000  4770              BX       lr
;;;666    #if defined(RTE_Compiler_EventRecorder)
;;;667      (void)EventRecord2(EvtRtxThreadGetPriority, (uint32_t)thread_id, (uint32_t)priority);
;;;668    #else
;;;669      (void)thread_id;
;;;670      (void)priority;
;;;671    #endif
;;;672    }
;;;673    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadGetStackSize||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadGetStackSize PROC
;;;620    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_GET_STACK_SIZE_DISABLE))
;;;621    __WEAK void EvrRtxThreadGetStackSize (osThreadId_t thread_id, uint32_t stack_size) {
000000  4770              BX       lr
;;;622    #if defined(RTE_Compiler_EventRecorder)
;;;623      (void)EventRecord2(EvtRtxThreadGetStackSize, (uint32_t)thread_id, stack_size);
;;;624    #else
;;;625      (void)thread_id;
;;;626      (void)stack_size;
;;;627    #endif
;;;628    }
;;;629    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadGetStackSpace||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadGetStackSpace PROC
;;;631    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_GET_STACK_SPACE_DISABLE))
;;;632    __WEAK void EvrRtxThreadGetStackSpace (osThreadId_t thread_id, uint32_t stack_space) {
000000  4770              BX       lr
;;;633    #if defined(RTE_Compiler_EventRecorder)
;;;634      (void)EventRecord2(EvtRtxThreadGetStackSpace, (uint32_t)thread_id, stack_space);
;;;635    #else
;;;636      (void)thread_id;
;;;637      (void)stack_space;
;;;638    #endif
;;;639    }
;;;640    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadGetState||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadGetState PROC
;;;609    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_GET_STATE_DISABLE))
;;;610    __WEAK void EvrRtxThreadGetState (osThreadId_t thread_id, osThreadState_t state) {
000000  4770              BX       lr
;;;611    #if defined(RTE_Compiler_EventRecorder)
;;;612      (void)EventRecord2(EvtRtxThreadGetState, (uint32_t)thread_id, (uint32_t)state);
;;;613    #else
;;;614      (void)thread_id;
;;;615      (void)state;
;;;616    #endif
;;;617    }
;;;618    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadJoin||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadJoin PROC
;;;744    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_JOIN_DISABLE))
;;;745    __WEAK void EvrRtxThreadJoin (osThreadId_t thread_id) {
000000  4770              BX       lr
;;;746    #if defined(RTE_Compiler_EventRecorder)
;;;747      (void)EventRecord2(EvtRtxThreadJoin, (uint32_t)thread_id, 0U);
;;;748    #else
;;;749      (void)thread_id;
;;;750    #endif
;;;751    }
;;;752    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadJoinPending||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadJoinPending PROC
;;;754    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_JOIN_PENDING_DISABLE))
;;;755    __WEAK void EvrRtxThreadJoinPending (osThreadId_t thread_id) {
000000  4770              BX       lr
;;;756    #if defined(RTE_Compiler_EventRecorder)
;;;757      (void)EventRecord2(EvtRtxThreadJoinPending, (uint32_t)thread_id, 0U);
;;;758    #else
;;;759      (void)thread_id;
;;;760    #endif
;;;761    }
;;;762    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadJoined||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadJoined PROC
;;;764    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_JOINED_DISABLE))
;;;765    __WEAK void EvrRtxThreadJoined (osThreadId_t thread_id) {
000000  4770              BX       lr
;;;766    #if defined(RTE_Compiler_EventRecorder)
;;;767      (void)EventRecord2(EvtRtxThreadJoined, (uint32_t)thread_id, 0U);
;;;768    #else
;;;769      (void)thread_id;
;;;770    #endif
;;;771    }
;;;772    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadNew||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadNew PROC
;;;560    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_NEW_DISABLE))
;;;561    __WEAK void EvrRtxThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
000000  4770              BX       lr
;;;562    #if defined(RTE_Compiler_EventRecorder)
;;;563      (void)EventRecord4(EvtRtxThreadNew, (uint32_t)func, (uint32_t)argument, (uint32_t)attr, 0U);
;;;564    #else
;;;565      (void)func;
;;;566      (void)argument;
;;;567      (void)attr;
;;;568    #endif
;;;569    }
;;;570    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadPreempted||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadPreempted PROC
;;;796    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_PREEMPTED_DISABLE))
;;;797    __WEAK void EvrRtxThreadPreempted (osThreadId_t thread_id) {
000000  4770              BX       lr
;;;798    #if defined(RTE_Compiler_EventRecorder)
;;;799      (void)EventRecord2(EvtRtxThreadPreempted, (uint32_t)thread_id, 0U);
;;;800    #else
;;;801      (void)thread_id;
;;;802    #endif
;;;803    }
;;;804    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadPriorityUpdated||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadPriorityUpdated PROC
;;;653    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_PRIORITY_UPDATED_DISABLE))
;;;654    __WEAK void EvrRtxThreadPriorityUpdated (osThreadId_t thread_id, osPriority_t priority) {
000000  4770              BX       lr
;;;655    #if defined(RTE_Compiler_EventRecorder)
;;;656      (void)EventRecord2(EvtRtxThreadPriorityUpdated, (uint32_t)thread_id, (uint32_t)priority);
;;;657    #else
;;;658      (void)thread_id;
;;;659      (void)priority;
;;;660    #endif
;;;661    }
;;;662    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadResume||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadResume PROC
;;;704    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_RESUME_DISABLE))
;;;705    __WEAK void EvrRtxThreadResume (osThreadId_t thread_id) {
000000  4770              BX       lr
;;;706    #if defined(RTE_Compiler_EventRecorder)
;;;707      (void)EventRecord2(EvtRtxThreadResume, (uint32_t)thread_id, 0U);
;;;708    #else
;;;709      (void)thread_id;
;;;710    #endif
;;;711    }
;;;712    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadResumed||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadResumed PROC
;;;714    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_RESUMED_DISABLE))
;;;715    __WEAK void EvrRtxThreadResumed (osThreadId_t thread_id) {
000000  4770              BX       lr
;;;716    #if defined(RTE_Compiler_EventRecorder)
;;;717      (void)EventRecord2(EvtRtxThreadResumed, (uint32_t)thread_id, 0U);
;;;718    #else
;;;719      (void)thread_id;
;;;720    #endif
;;;721    }
;;;722    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadSetPriority||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadSetPriority PROC
;;;642    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_SET_PRIORITY_DISABLE))
;;;643    __WEAK void EvrRtxThreadSetPriority (osThreadId_t thread_id, osPriority_t priority) {
000000  4770              BX       lr
;;;644    #if defined(RTE_Compiler_EventRecorder)
;;;645      (void)EventRecord2(EvtRtxThreadSetPriority, (uint32_t)thread_id, (uint32_t)priority);
;;;646    #else
;;;647      (void)thread_id;
;;;648      (void)priority;
;;;649    #endif
;;;650    }
;;;651    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadSuspend||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadSuspend PROC
;;;684    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_SUSPEND_DISABLE))
;;;685    __WEAK void EvrRtxThreadSuspend (osThreadId_t thread_id) {
000000  4770              BX       lr
;;;686    #if defined(RTE_Compiler_EventRecorder)
;;;687      (void)EventRecord2(EvtRtxThreadSuspend, (uint32_t)thread_id, 0U);
;;;688    #else
;;;689      (void)thread_id;
;;;690    #endif
;;;691    }
;;;692    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadSuspended||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadSuspended PROC
;;;694    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_SUSPENDED_DISABLE))
;;;695    __WEAK void EvrRtxThreadSuspended (osThreadId_t thread_id) {
000000  4770              BX       lr
;;;696    #if defined(RTE_Compiler_EventRecorder)
;;;697      (void)EventRecord2(EvtRtxThreadSuspended, (uint32_t)thread_id, 0U);
;;;698    #else
;;;699      (void)thread_id;
;;;700    #endif
;;;701    }
;;;702    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadSwitched||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadSwitched PROC
;;;806    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_SWITCHED_DISABLE))
;;;807    __WEAK void EvrRtxThreadSwitched (osThreadId_t thread_id) {
000000  4770              BX       lr
;;;808    #if defined(RTE_Compiler_EventRecorder)
;;;809      (void)EventRecord2(EvtRtxThreadSwitched, (uint32_t)thread_id, 0U);
;;;810    #else
;;;811      (void)thread_id;
;;;812    #endif
;;;813    }
;;;814    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadTerminate||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadTerminate PROC
;;;825    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_TERMINATE_DISABLE))
;;;826    __WEAK void EvrRtxThreadTerminate (osThreadId_t thread_id) {
000000  4770              BX       lr
;;;827    #if defined(RTE_Compiler_EventRecorder)
;;;828      (void)EventRecord2(EvtRtxThreadTerminate, (uint32_t)thread_id, 0U);
;;;829    #else
;;;830      (void)thread_id;
;;;831    #endif
;;;832    }
;;;833    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadUnblocked||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadUnblocked PROC
;;;785    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_UNBLOCKED_DISABLE))
;;;786    __WEAK void EvrRtxThreadUnblocked (osThreadId_t thread_id, uint32_t ret_val) {
000000  4770              BX       lr
;;;787    #if defined(RTE_Compiler_EventRecorder)
;;;788      (void)EventRecord2(EvtRtxThreadUnblocked, (uint32_t)thread_id, ret_val);
;;;789    #else
;;;790      (void)thread_id;
;;;791      (void)ret_val;
;;;792    #endif
;;;793    }
;;;794    #endif
                          ENDP


                          AREA ||i.EvrRtxThreadYield||, CODE, READONLY, ALIGN=1

                  EvrRtxThreadYield PROC
;;;675    #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_THREAD != 0) && !defined(EVR_RTX_THREAD_YIELD_DISABLE))
;;;676    __WEAK void EvrRtxThreadYield (void) {
000000  4770              BX       lr
;;;677    #if defined(RTE_Compiler_EventRecorder)
;;;678      (void)EventRecord2(EvtRtxThreadYield, 0U, 0U);
;;;679    #else
;;;680    #endif
;;;681    }
;;;682    #endif
                          ENDP


                          AREA ||i.EvrRtxTimerCallback||, CODE, READONLY, ALIGN=1

                  EvrRtxTimerCallback PROC
;;;1069   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_TIMER != 0) && !defined(EVR_RTX_TIMER_CALLBACK_DISABLE))
;;;1070   __WEAK void EvrRtxTimerCallback (osTimerFunc_t func, void *argument) {
000000  4770              BX       lr
;;;1071   #if defined(RTE_Compiler_EventRecorder)
;;;1072     (void)EventRecord2(EvtRtxTimerCallback, (uint32_t)func, (uint32_t)argument);
;;;1073   #else
;;;1074     (void)func;
;;;1075     (void)argument;
;;;1076   #endif
;;;1077   }
;;;1078   #endif
                          ENDP


                          AREA ||i.EvrRtxTimerCreated||, CODE, READONLY, ALIGN=1

                  EvrRtxTimerCreated PROC
;;;1093   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_TIMER != 0) && !defined(EVR_RTX_TIMER_CREATED_DISABLE))
;;;1094   __WEAK void EvrRtxTimerCreated (osTimerId_t timer_id, const char *name) {
000000  4770              BX       lr
;;;1095   #if defined(RTE_Compiler_EventRecorder)
;;;1096     (void)EventRecord2(EvtRtxTimerCreated, (uint32_t)timer_id, (uint32_t)name);
;;;1097   #else
;;;1098     (void)timer_id;
;;;1099     (void)name;
;;;1100   #endif
;;;1101   }
;;;1102   #endif
                          ENDP


                          AREA ||i.EvrRtxTimerDelete||, CODE, READONLY, ALIGN=1

                  EvrRtxTimerDelete PROC
;;;1167   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_TIMER != 0) && !defined(EVR_RTX_TIMER_DELETE_DISABLE))
;;;1168   __WEAK void EvrRtxTimerDelete (osTimerId_t timer_id) {
000000  4770              BX       lr
;;;1169   #if defined(RTE_Compiler_EventRecorder)
;;;1170     (void)EventRecord2(EvtRtxTimerDelete, (uint32_t)timer_id, 0U);
;;;1171   #else
;;;1172     (void)timer_id;
;;;1173   #endif
;;;1174   }
;;;1175   #endif
                          ENDP


                          AREA ||i.EvrRtxTimerDestroyed||, CODE, READONLY, ALIGN=1

                  EvrRtxTimerDestroyed PROC
;;;1177   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_TIMER != 0) && !defined(EVR_RTX_TIMER_DESTROYED_DISABLE))
;;;1178   __WEAK void EvrRtxTimerDestroyed (osTimerId_t timer_id) {
000000  4770              BX       lr
;;;1179   #if defined(RTE_Compiler_EventRecorder)
;;;1180     (void)EventRecord2(EvtRtxTimerDestroyed, (uint32_t)timer_id, 0U);
;;;1181   #else
;;;1182     (void)timer_id;
;;;1183   #endif
;;;1184   }
;;;1185   #endif
                          ENDP


                          AREA ||i.EvrRtxTimerError||, CODE, READONLY, ALIGN=1

                  EvrRtxTimerError PROC
;;;1058   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_TIMER != 0) && !defined(EVR_RTX_TIMER_ERROR_DISABLE))
;;;1059   __WEAK void EvrRtxTimerError (osTimerId_t timer_id, int32_t status) {
000000  4770              BX       lr
;;;1060   #if defined(RTE_Compiler_EventRecorder)
;;;1061     (void)EventRecord2(EvtRtxTimerError, (uint32_t)timer_id, (uint32_t)status);
;;;1062   #else
;;;1063     (void)timer_id;
;;;1064     (void)status;
;;;1065   #endif
;;;1066   }
;;;1067   #endif
                          ENDP


                          AREA ||i.EvrRtxTimerGetName||, CODE, READONLY, ALIGN=1

                  EvrRtxTimerGetName PROC
;;;1104   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_TIMER != 0) && !defined(EVR_RTX_TIMER_GET_NAME_DISABLE))
;;;1105   __WEAK void EvrRtxTimerGetName (osTimerId_t timer_id, const char *name) {
000000  4770              BX       lr
;;;1106   #if defined(RTE_Compiler_EventRecorder)
;;;1107     (void)EventRecord2(EvtRtxTimerGetName, (uint32_t)timer_id, (uint32_t)name);
;;;1108   #else
;;;1109     (void)timer_id;
;;;1110     (void)name;
;;;1111   #endif
;;;1112   }
;;;1113   #endif
                          ENDP


                          AREA ||i.EvrRtxTimerIsRunning||, CODE, READONLY, ALIGN=1

                  EvrRtxTimerIsRunning PROC
;;;1156   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_TIMER != 0) && !defined(EVR_RTX_TIMER_IS_RUNNING_DISABLE))
;;;1157   __WEAK void EvrRtxTimerIsRunning (osTimerId_t timer_id, uint32_t running) {
000000  4770              BX       lr
;;;1158   #if defined(RTE_Compiler_EventRecorder)
;;;1159     (void)EventRecord2(EvtRtxTimerIsRunning, (uint32_t)timer_id, running);
;;;1160   #else
;;;1161     (void)timer_id;
;;;1162     (void)running;
;;;1163   #endif
;;;1164   }
;;;1165   #endif
                          ENDP


                          AREA ||i.EvrRtxTimerNew||, CODE, READONLY, ALIGN=1

                  EvrRtxTimerNew PROC
;;;1080   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_TIMER != 0) && !defined(EVR_RTX_TIMER_NEW_DISABLE))
;;;1081   __WEAK void EvrRtxTimerNew (osTimerFunc_t func, osTimerType_t type, void *argument, const osTimerAttr_t *attr) {
000000  4770              BX       lr
;;;1082   #if defined(RTE_Compiler_EventRecorder)
;;;1083     (void)EventRecord4(EvtRtxTimerNew, (uint32_t)func, (uint32_t)type, (uint32_t)argument, (uint32_t)attr);
;;;1084   #else
;;;1085     (void)func;
;;;1086     (void)type;
;;;1087     (void)argument;
;;;1088     (void)attr;
;;;1089   #endif
;;;1090   }
;;;1091   #endif
                          ENDP


                          AREA ||i.EvrRtxTimerStart||, CODE, READONLY, ALIGN=1

                  EvrRtxTimerStart PROC
;;;1115   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_TIMER != 0) && !defined(EVR_RTX_TIMER_START_DISABLE))
;;;1116   __WEAK void EvrRtxTimerStart (osTimerId_t timer_id, uint32_t ticks) {
000000  4770              BX       lr
;;;1117   #if defined(RTE_Compiler_EventRecorder)
;;;1118     (void)EventRecord2(EvtRtxTimerStart, (uint32_t)timer_id, ticks);
;;;1119   #else
;;;1120     (void)timer_id;
;;;1121     (void)ticks;
;;;1122   #endif
;;;1123   }
;;;1124   #endif
                          ENDP


                          AREA ||i.EvrRtxTimerStarted||, CODE, READONLY, ALIGN=1

                  EvrRtxTimerStarted PROC
;;;1126   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_TIMER != 0) && !defined(EVR_RTX_TIMER_STARTED_DISABLE))
;;;1127   __WEAK void EvrRtxTimerStarted (osTimerId_t timer_id) {
000000  4770              BX       lr
;;;1128   #if defined(RTE_Compiler_EventRecorder)
;;;1129     (void)EventRecord2(EvtRtxTimerStarted, (uint32_t)timer_id, 0U);
;;;1130   #else
;;;1131     (void)timer_id;
;;;1132   #endif
;;;1133   }
;;;1134   #endif
                          ENDP


                          AREA ||i.EvrRtxTimerStop||, CODE, READONLY, ALIGN=1

                  EvrRtxTimerStop PROC
;;;1136   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_TIMER != 0) && !defined(EVR_RTX_TIMER_STOP_DISABLE))
;;;1137   __WEAK void EvrRtxTimerStop (osTimerId_t timer_id) {
000000  4770              BX       lr
;;;1138   #if defined(RTE_Compiler_EventRecorder)
;;;1139     (void)EventRecord2(EvtRtxTimerStop, (uint32_t)timer_id, 0U);
;;;1140   #else
;;;1141     (void)timer_id;
;;;1142   #endif
;;;1143   }
;;;1144   #endif
                          ENDP


                          AREA ||i.EvrRtxTimerStopped||, CODE, READONLY, ALIGN=1

                  EvrRtxTimerStopped PROC
;;;1146   #if (!defined(EVR_RTX_DISABLE) && (OS_EVR_TIMER != 0) && !defined(EVR_RTX_TIMER_STOPPED_DISABLE))
;;;1147   __WEAK void EvrRtxTimerStopped (osTimerId_t timer_id) {
000000  4770              BX       lr
;;;1148   #if defined(RTE_Compiler_EventRecorder)
;;;1149     (void)EventRecord2(EvtRtxTimerStopped, (uint32_t)timer_id, 0U);
;;;1150   #else
;;;1151     (void)timer_id;
;;;1152   #endif
;;;1153   }
;;;1154   #endif
                          ENDP


;*** Start embedded assembler ***

#line 1 "F:/Users/fu/AppData/Local/Arm/Packs/ARM/CMSIS/5.9.0/CMSIS/RTOS2/RTX/Source/rtx_evr.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_rtx_evr_c____REV16|
#line 208 "F:\\Users\\fu\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.9.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___9_rtx_evr_c____REV16| PROC
#line 209

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_rtx_evr_c____REVSH|
#line 223
|__asm___9_rtx_evr_c____REVSH| PROC
#line 224

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_rtx_evr_c____RRX|
#line 410
|__asm___9_rtx_evr_c____RRX| PROC
#line 411

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
